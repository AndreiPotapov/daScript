Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1417 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 string_builder_body: %empty
   34                    | string_builder_body character_sequence
   35                    | string_builder_body "{" expr "}"

   36 string_builder: "start of the string" string_builder_body "end of the string"

   37 reader_character_sequence: STRING_CHARACTER
   38                          | reader_character_sequence STRING_CHARACTER

   39 $@1: %empty

   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   41 options_declaration: "options" annotation_argument_list

   42 require_declaration: "require" require_module

   43 require_module_name: "name"
   44                    | '%' require_module_name
   45                    | require_module_name '.' "name"
   46                    | require_module_name '/' "name"

   47 require_module: require_module_name is_public_module
   48               | require_module_name "as" "name" is_public_module

   49 is_public_module: %empty
   50                 | "public"

   51 expect_declaration: "expect" expect_list

   52 expect_list: expect_error
   53            | expect_list ',' expect_error

   54 expect_error: "integer constant"
   55             | "integer constant" ':' "integer constant"

   56 expression_label: "label" "integer constant" ':'

   57 expression_goto: "goto" "label" "integer constant"
   58                | "goto" expr

   59 elif_or_static_elif: "elif"
   60                    | "static_elif"

   61 emit_semis: "new line, semicolon"
   62           | emit_semis "new line, semicolon"

   63 optional_emit_semis: %empty
   64                    | emit_semis

   65 expression_else: %empty
   66                | "else" optional_emit_semis expression_block
   67                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   68 if_or_static_if: "if"
   69                | "static_if"

   70 expression_else_one_liner: %empty
   71                          | "else" expression_if_one_liner

   72 expression_if_one_liner: expr
   73                        | expression_return
   74                        | expression_yield
   75                        | expression_break
   76                        | expression_continue

   77 semis: SEMICOLON
   78      | semis SEMICOLON

   79 optional_semis: %empty
   80               | semis

   81 $@2: %empty

   82 $@3: %empty

   83 expression_if_block: $@2 '{' expressions $@3 '}' expression_block_finally

   84 $@4: %empty

   85 expression_if_block: $@4 expression_if_one_liner SEMICOLON

   86 $@5: %empty

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   89 $@6: %empty

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   91 expression_unsafe: "unsafe" optional_emit_semis expression_block

   92 $@7: %empty

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis expression_block

   94 $@8: %empty

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis expression_block

   96 expression_with_alias: "assume" "name" '=' expr

   97 annotation_argument_value: string_constant
   98                          | "name"
   99                          | "integer constant"
  100                          | "floating point constant"
  101                          | "true"
  102                          | "false"

  103 annotation_argument_value_list: annotation_argument_value
  104                               | annotation_argument_value_list ',' annotation_argument_value

  105 annotation_argument_name: "name"
  106                         | "type"
  107                         | "in"

  108 annotation_argument: annotation_argument_name '=' string_constant
  109                    | annotation_argument_name '=' "name"
  110                    | annotation_argument_name '=' "integer constant"
  111                    | annotation_argument_name '=' "floating point constant"
  112                    | annotation_argument_name '=' "true"
  113                    | annotation_argument_name '=' "false"
  114                    | annotation_argument_name
  115                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  116 annotation_argument_list: annotation_argument
  117                         | annotation_argument_list ',' annotation_argument

  118 metadata_argument_list: '@' annotation_argument optional_emit_semis
  119                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  120 annotation_declaration_name: name_in_namespace
  121                            | "require"
  122                            | "private"

  123 annotation_declaration_basic: annotation_declaration_name
  124                             | annotation_declaration_name '(' annotation_argument_list ')'

  125 annotation_declaration: annotation_declaration_basic
  126                       | '!' annotation_declaration
  127                       | annotation_declaration "&&" annotation_declaration
  128                       | annotation_declaration "||" annotation_declaration
  129                       | annotation_declaration "^^" annotation_declaration
  130                       | '(' annotation_declaration ')'
  131                       | "|>" annotation_declaration

  132 annotation_list: annotation_declaration
  133                | annotation_list ',' annotation_declaration

  134 optional_annotation_list: %empty
  135                         | '[' annotation_list ']'

  136 optional_annotation_list_with_emit_semis: %empty
  137                                         | '[' annotation_list ']' optional_emit_semis

  138 optional_function_argument_list: %empty
  139                                | '(' ')'
  140                                | '(' function_argument_list ')'

  141 optional_function_type: %empty
  142                       | ':' type_declaration

  143 function_name: "name"
  144              | "operator" '!'
  145              | "operator" '~'
  146              | "operator" "+="
  147              | "operator" "-="
  148              | "operator" "*="
  149              | "operator" "/="
  150              | "operator" "%="
  151              | "operator" "&="
  152              | "operator" "|="
  153              | "operator" "^="
  154              | "operator" "&&="
  155              | "operator" "||="
  156              | "operator" "^^="
  157              | "operator" "&&"
  158              | "operator" "||"
  159              | "operator" "^^"
  160              | "operator" '+'
  161              | "operator" '-'
  162              | "operator" '*'
  163              | "operator" '/'
  164              | "operator" '%'
  165              | "operator" '<'
  166              | "operator" '>'
  167              | "operator" ".."
  168              | "operator" "=="
  169              | "operator" "!="
  170              | "operator" "<="
  171              | "operator" ">="
  172              | "operator" '&'
  173              | "operator" '|'
  174              | "operator" '^'
  175              | "++" "operator"
  176              | "--" "operator"
  177              | "operator" "++"
  178              | "operator" "--"
  179              | "operator" "<<"
  180              | "operator" ">>"
  181              | "operator" "<<="
  182              | "operator" ">>="
  183              | "operator" "<<<"
  184              | "operator" ">>>"
  185              | "operator" "<<<="
  186              | "operator" ">>>="
  187              | "operator" '[' ']'
  188              | "operator" "?[" ']'
  189              | "operator" '.'
  190              | "operator" "?."
  191              | "operator" '.' "name"
  192              | "operator" '.' "name" ":="
  193              | "operator" "?." "name"
  194              | "operator" ":="
  195              | "operator" "delete"
  196              | "operator" "??"
  197              | "operator" "is"
  198              | "operator" "as"
  199              | "operator" "is" "name"
  200              | "operator" "as" "name"
  201              | "operator" '?' "as"
  202              | "operator" '?' "as" "name"
  203              | "bool"
  204              | "string"
  205              | "int"
  206              | "int2"
  207              | "int3"
  208              | "int4"
  209              | "uint"
  210              | "uint2"
  211              | "uint3"
  212              | "uint4"
  213              | "float"
  214              | "float2"
  215              | "float3"
  216              | "float4"
  217              | "range"
  218              | "urange"
  219              | "range64"
  220              | "urange64"
  221              | "int64"
  222              | "uint64"
  223              | "double"
  224              | "int8"
  225              | "uint8"
  226              | "int16"
  227              | "uint16"

  228 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  229 optional_public_or_private_function: %empty
  230                                    | "private"
  231                                    | "public"

  232 function_declaration_header: function_name optional_function_argument_list optional_function_type

  233 $@9: %empty

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis expression_block

  235 expression_block_finally: %empty

  236 $@10: %empty

  237 $@11: %empty

  238 expression_block_finally: "finally" $@10 '{' expressions $@11 '}'

  239 $@12: %empty

  240 $@13: %empty

  241 expression_block: $@12 '{' expressions $@13 '}' expression_block_finally

  242 expr_call_pipe: expr_call expr_full_block_assumed_piped

  243 expression_any: SEMICOLON
  244               | expr_assign SEMICOLON
  245               | expression_delete SEMICOLON
  246               | expression_let
  247               | expression_while_loop
  248               | expression_unsafe
  249               | expression_with
  250               | expression_with_alias SEMICOLON
  251               | expression_for_loop
  252               | expression_break SEMICOLON
  253               | expression_continue SEMICOLON
  254               | expression_return SEMICOLON
  255               | expression_yield SEMICOLON
  256               | expression_if_then_else
  257               | expression_if_then_else_oneliner
  258               | expression_try_catch
  259               | expression_label SEMICOLON
  260               | expression_goto SEMICOLON
  261               | "pass" SEMICOLON

  262 expressions: %empty
  263            | expressions expression_any
  264            | expressions error

  265 optional_expr_list: %empty
  266                   | expr_list optional_comma

  267 optional_expr_map_tuple_list: %empty
  268                             | expr_map_tuple_list optional_comma

  269 type_declaration_no_options_list: type_declaration
  270                                 | type_declaration_no_options_list c_or_s type_declaration

  271 name_in_namespace: "name"
  272                  | "name" "::" "name"
  273                  | "::" "name"

  274 expression_delete: "delete" expr
  275                  | "delete" "explicit" expr

  276 $@14: %empty

  277 $@15: %empty

  278 new_type_declaration: '<' $@14 type_declaration '>' $@15
  279                     | structure_type_declaration

  280 expr_new: "new" new_type_declaration
  281         | "new" new_type_declaration '(' use_initializer ')'
  282         | "new" new_type_declaration '(' expr_list ')'
  283         | "new" new_type_declaration '(' make_struct_single ')'
  284         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  285         | "new" make_decl

  286 expression_break: "break"

  287 expression_continue: "continue"

  288 expression_return: "return"
  289                  | "return" expr
  290                  | "return" "<-" expr

  291 expression_yield: "yield" expr
  292                 | "yield" "<-" expr

  293 expression_try_catch: "try" expression_block "recover" expression_block

  294 kwd_let_var_or_nothing: "let"
  295                       | "var"
  296                       | %empty

  297 kwd_let: "let"
  298        | "var"

  299 optional_in_scope: "inscope"
  300                  | %empty

  301 tuple_expansion: "name"
  302                | tuple_expansion ',' "name"

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  305 expression_let: kwd_let optional_in_scope let_variable_declaration
  306               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  307               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  308 $@16: %empty

  309 $@17: %empty

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 expr

  311 $@18: %empty

  312 $@19: %empty

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 expr

  314 $@20: %empty

  315 $@21: %empty

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 expr

  317 $@22: %empty

  318 $@23: %empty

  319 expr_type_decl: "type" '<' $@22 type_declaration '>' $@23

  320 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  321               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  323 expr_list: expr
  324          | expr_list ',' expr

  325 block_or_simple_block: expression_block
  326                      | "=>" expr
  327                      | "=>" "<-" expr

  328 block_or_lambda: '$'
  329                | '@'
  330                | '@' '@'

  331 capture_entry: '&' "name"
  332              | '=' "name"
  333              | "<-" "name"
  334              | ":=" "name"
  335              | "name" '(' "name" ')'

  336 capture_list: capture_entry
  337             | capture_list ',' capture_entry

  338 optional_capture_list: %empty
  339                      | "capture" '(' capture_list ')'

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  342                              | '{' expressions '}'

  343 expr_numeric_const: "integer constant"
  344                   | "unsigned integer constant"
  345                   | "long integer constant"
  346                   | "unsigned long integer constant"
  347                   | "unsigned int8 constant"
  348                   | "floating point constant"
  349                   | "double constant"

  350 expr_assign: expr
  351            | expr '=' expr
  352            | expr "<-" expr
  353            | expr ":=" expr
  354            | expr "&=" expr
  355            | expr "|=" expr
  356            | expr "^=" expr
  357            | expr "&&=" expr
  358            | expr "||=" expr
  359            | expr "^^=" expr
  360            | expr "+=" expr
  361            | expr "-=" expr
  362            | expr "*=" expr
  363            | expr "/=" expr
  364            | expr "%=" expr
  365            | expr "<<=" expr
  366            | expr ">>=" expr
  367            | expr "<<<=" expr
  368            | expr ">>>=" expr

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  370                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  371 expr_method_call: expr "->" "name" '(' ')'
  372                 | expr "->" "name" '(' expr_list ')'

  373 func_addr_name: name_in_namespace
  374               | "$i" '(' expr ')'

  375 func_addr_expr: '@' '@' func_addr_name

  376 $@24: %empty

  377 $@25: %empty

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name

  379 $@26: %empty

  380 $@27: %empty

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

  382 expr_field: expr '.' "name"
  383           | expr '.' '.' "name"
  384           | expr '.' "name" '(' ')'
  385           | expr '.' "name" '(' expr_list ')'
  386           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr '.' basic_type_declaration '(' ')'
  388           | expr '.' basic_type_declaration '(' expr_list ')'

  389 $@28: %empty

  390 $@29: %empty

  391 expr_field: expr '.' $@28 error $@29

  392 expr_call: name_in_namespace '(' ')'
  393          | name_in_namespace '(' "uninitialized" ')'
  394          | name_in_namespace '(' make_struct_single ')'
  395          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  396          | name_in_namespace '(' expr_list ')'
  397          | basic_type_declaration '(' ')'
  398          | basic_type_declaration '(' expr_list ')'

  399 expr: "null"
  400     | name_in_namespace
  401     | expr_numeric_const
  402     | expr_reader
  403     | string_builder
  404     | make_decl
  405     | "true"
  406     | "false"
  407     | expr_field
  408     | expr_mtag
  409     | '!' expr
  410     | '~' expr
  411     | '+' expr
  412     | '-' expr
  413     | expr "<<" expr
  414     | expr ">>" expr
  415     | expr "<<<" expr
  416     | expr ">>>" expr
  417     | expr '+' expr
  418     | expr '-' expr
  419     | expr '*' expr
  420     | expr '/' expr
  421     | expr '%' expr
  422     | expr '<' expr
  423     | expr '>' expr
  424     | expr "==" expr
  425     | expr "!=" expr
  426     | expr "<=" expr
  427     | expr ">=" expr
  428     | expr '&' expr
  429     | expr '|' expr
  430     | expr '^' expr
  431     | expr "&&" expr
  432     | expr "||" expr
  433     | expr "^^" expr
  434     | expr ".." expr
  435     | "++" expr
  436     | "--" expr
  437     | expr "++"
  438     | expr "--"
  439     | '(' expr_list optional_comma ')'
  440     | expr '[' expr ']'
  441     | expr '.' '[' expr ']'
  442     | expr "?[" expr ']'
  443     | expr '.' "?[" expr ']'
  444     | expr "?." "name"
  445     | expr '.' "?." "name"
  446     | func_addr_expr
  447     | expr_call
  448     | '*' expr
  449     | "deref" '(' expr ')'
  450     | "addr" '(' expr ')'
  451     | expr_generator
  452     | expr "??" expr
  453     | expr '?' expr ':' expr

  454 $@30: %empty

  455 $@31: %empty

  456 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr "is" basic_type_declaration
  458     | expr "is" "name"
  459     | expr "as" "name"

  460 $@32: %empty

  461 $@33: %empty

  462 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr "as" basic_type_declaration
  464     | expr '?' "as" "name"

  465 $@34: %empty

  466 $@35: %empty

  467 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr '?' "as" basic_type_declaration
  469     | expr_type_info
  470     | expr_type_decl
  471     | expr_cast
  472     | expr_new
  473     | expr_method_call
  474     | expr_named_call
  475     | expr_full_block
  476     | expr "<|" expr
  477     | expr "|>" expr
  478     | expr "|>" basic_type_declaration
  479     | expr_call_pipe
  480     | "unsafe" '(' expr ')'

  481 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  482               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  483               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  484 expr_mtag: "$$" '(' expr ')'
  485          | "$i" '(' expr ')'
  486          | "$v" '(' expr ')'
  487          | "$b" '(' expr ')'
  488          | "$a" '(' expr ')'
  489          | "..."
  490          | "$c" '(' expr ')' '(' ')'
  491          | "$c" '(' expr ')' '(' expr_list ')'
  492          | expr '.' "$f" '(' expr ')'
  493          | expr "?." "$f" '(' expr ')'
  494          | expr '.' '.' "$f" '(' expr ')'
  495          | expr '.' "?." "$f" '(' expr ')'
  496          | expr "as" "$f" '(' expr ')'
  497          | expr '?' "as" "$f" '(' expr ')'
  498          | expr "is" "$f" '(' expr ')'
  499          | '@' '@' "$c" '(' expr ')'

  500 optional_field_annotation: %empty
  501                          | metadata_argument_list

  502 optional_override: %empty
  503                  | "override"
  504                  | "sealed"

  505 optional_constant: %empty
  506                  | "const"

  507 optional_public_or_private_member_variable: %empty
  508                                           | "public"
  509                                           | "private"

  510 optional_static_member_variable: %empty
  511                                | "static"

  512 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  513 struct_variable_declaration_list: %empty
  514                                 | struct_variable_declaration_list "new line, semicolon"

  515 $@36: %empty

  516 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration SEMICOLON

  517 $@37: %empty

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON

  519 $@38: %empty

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

  521 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  522                              | "$a" '(' expr ')'

  523 function_argument_list: function_argument_declaration
  524                       | function_argument_list ';' function_argument_declaration

  525 tuple_type: type_declaration
  526           | "name" ':' type_declaration

  527 tuple_type_list: tuple_type
  528                | tuple_type_list c_or_s tuple_type

  529 tuple_alias_type_list: %empty
  530                      | tuple_type
  531                      | tuple_alias_type_list semis tuple_type

  532 variant_type: "name" ':' type_declaration

  533 variant_type_list: variant_type
  534                  | variant_type_list c_or_s variant_type

  535 variant_alias_type_list: %empty
  536                        | variant_type
  537                        | variant_alias_type_list semis variant_type

  538 copy_or_move: '='
  539             | "<-"

  540 variable_declaration: variable_name_with_pos_list
  541                     | variable_name_with_pos_list '&'
  542                     | variable_name_with_pos_list ':' type_declaration
  543                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  544                     | variable_name_with_pos_list copy_or_move expr

  545 copy_or_move_or_clone: '='
  546                      | "<-"
  547                      | ":="

  548 optional_ref: %empty
  549             | '&'

  550 let_variable_name_with_pos_list: "name"
  551                                | "$i" '(' expr ')'
  552                                | "name" "aka" "name"
  553                                | let_variable_name_with_pos_list ',' "name"
  554                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  555 global_let_variable_name_with_pos_list: "name"
  556                                       | global_let_variable_name_with_pos_list ',' "name"

  557 variable_declaration_list: %empty
  558                          | variable_declaration_list SEMICOLON
  559                          | variable_declaration_list let_variable_declaration

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  562                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  563 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  564                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  565                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  566 optional_shared: %empty
  567                | "shared"

  568 optional_public_or_private_variable: %empty
  569                                    | "private"
  570                                    | "public"

  571 global_variable_declaration_list: %empty
  572                                 | global_variable_declaration_list SEMICOLON

  573 $@39: %empty

  574 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation let_variable_declaration

  575 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  576 $@40: %empty

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

  578 enum_expression: "name"
  579                | "name" '=' expr

  580 commas: COMMA
  581       | commas COMMA

  582 enum_list: %empty
  583          | enum_expression
  584          | enum_list commas enum_expression

  585 optional_public_or_private_alias: %empty
  586                                 | "private"
  587                                 | "public"

  588 $@41: %empty

  589 single_alias: optional_public_or_private_alias "name" $@41 '=' type_declaration

  590 alias_declaration: "typedef" single_alias SEMICOLON

  591 optional_public_or_private_enum: %empty
  592                                | "private"
  593                                | "public"

  594 enum_name: "name"

  595 optional_enum_basic_type_declaration: %empty
  596                                     | ':' enum_basic_type_declaration

  597 optional_commas: %empty
  598                | commas

  599 emit_commas: "new line, comma"
  600            | emit_commas "new line, comma"

  601 optional_emit_commas: %empty
  602                     | emit_commas

  603 $@42: %empty

  604 $@43: %empty

  605 $@44: %empty

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

  607 optional_structure_parent: %empty
  608                          | ':' name_in_namespace

  609 optional_sealed: %empty
  610                | "sealed"

  611 structure_name: optional_sealed "name" optional_structure_parent

  612 class_or_struct: "class"
  613                | "struct"
  614                | "template" "class"
  615                | "template" "struct"

  616 optional_public_or_private_structure: %empty
  617                                     | "private"
  618                                     | "public"

  619 optional_struct_variable_declaration_list: ';'
  620                                          | '{' struct_variable_declaration_list '}'

  621 $@45: %empty

  622 $@46: %empty

  623 $@47: %empty

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

  625 variable_name_with_pos_list: "name"
  626                            | "$i" '(' expr ')'
  627                            | "name" "aka" "name"
  628                            | variable_name_with_pos_list ',' "name"
  629                            | variable_name_with_pos_list ',' "name" "aka" "name"

  630 basic_type_declaration: "bool"
  631                       | "string"
  632                       | "int"
  633                       | "int8"
  634                       | "int16"
  635                       | "int64"
  636                       | "int2"
  637                       | "int3"
  638                       | "int4"
  639                       | "uint"
  640                       | "uint8"
  641                       | "uint16"
  642                       | "uint64"
  643                       | "uint2"
  644                       | "uint3"
  645                       | "uint4"
  646                       | "float"
  647                       | "float2"
  648                       | "float3"
  649                       | "float4"
  650                       | "void"
  651                       | "range"
  652                       | "urange"
  653                       | "range64"
  654                       | "urange64"
  655                       | "double"
  656                       | "bitfield"

  657 enum_basic_type_declaration: "int"
  658                            | "int8"
  659                            | "int16"
  660                            | "uint"
  661                            | "uint8"
  662                            | "uint16"
  663                            | "int64"
  664                            | "uint64"

  665 structure_type_declaration: name_in_namespace

  666 auto_type_declaration: "auto"
  667                      | "auto" '(' "name" ')'
  668                      | "$t" '(' expr ')'

  669 bitfield_bits: "name"
  670              | bitfield_bits ';' "name"

  671 bitfield_alias_bits: %empty
  672                    | "name"
  673                    | bitfield_alias_bits commas "name"

  674 $@48: %empty

  675 $@49: %empty

  676 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  677 c_or_s: COMMA
  678       | SEMICOLON

  679 table_type_pair: type_declaration
  680                | type_declaration c_or_s type_declaration

  681 dim_list: '[' expr ']'
  682         | '[' ']'
  683         | dim_list '[' expr ']'
  684         | dim_list '[' ']'

  685 type_declaration_no_options: type_declaration_no_options_no_dim
  686                            | type_declaration_no_options_no_dim dim_list

  687 type_declaration_no_options_no_dim: basic_type_declaration
  688                                   | auto_type_declaration
  689                                   | bitfield_type_declaration
  690                                   | structure_type_declaration

  691 $@50: %empty

  692 $@51: %empty

  693 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' $@51
  694                                   | "typedecl" '(' expr ')'
  695                                   | '$' name_in_namespace '(' optional_expr_list ')'

  696 $@52: %empty

  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  698                                   | type_declaration_no_options_no_dim '-' '[' ']'
  699                                   | type_declaration_no_options_no_dim "explicit"
  700                                   | type_declaration_no_options_no_dim "const"
  701                                   | type_declaration_no_options_no_dim '-' "const"
  702                                   | type_declaration_no_options_no_dim '&'
  703                                   | type_declaration_no_options_no_dim '-' '&'
  704                                   | type_declaration_no_options_no_dim '#'
  705                                   | type_declaration_no_options_no_dim "implicit"
  706                                   | type_declaration_no_options_no_dim '-' '#'
  707                                   | type_declaration_no_options_no_dim "==" "const"
  708                                   | type_declaration_no_options_no_dim "==" '&'
  709                                   | type_declaration_no_options_no_dim '?'

  710 $@53: %empty

  711 $@54: %empty

  712 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' $@54
  713                                   | type_declaration_no_options_no_dim "??"

  714 $@55: %empty

  715 $@56: %empty

  716 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' $@56

  717 $@57: %empty

  718 $@58: %empty

  719 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' $@58

  720 $@59: %empty

  721 $@60: %empty

  722 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' $@60
  723                                   | "block"

  724 $@61: %empty

  725 $@62: %empty

  726 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' $@62

  727 $@63: %empty

  728 $@64: %empty

  729 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  730                                   | "function"

  731 $@65: %empty

  732 $@66: %empty

  733 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' $@66

  734 $@67: %empty

  735 $@68: %empty

  736 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  737                                   | "lambda"

  738 $@69: %empty

  739 $@70: %empty

  740 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' $@70

  741 $@71: %empty

  742 $@72: %empty

  743 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  744 $@73: %empty

  745 $@74: %empty

  746 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' $@74

  747 $@75: %empty

  748 $@76: %empty

  749 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' $@76

  750 type_declaration: type_declaration_no_options
  751                 | type_declaration '|' type_declaration_no_options
  752                 | type_declaration '|' '#'

  753 $@77: %empty

  754 $@78: %empty

  755 $@79: %empty

  756 $@80: %empty

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

  758 $@81: %empty

  759 $@82: %empty

  760 $@83: %empty

  761 $@84: %empty

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

  763 $@85: %empty

  764 $@86: %empty

  765 $@87: %empty

  766 $@88: %empty

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

  768 make_decl: make_struct_decl
  769          | make_dim_decl
  770          | make_table_decl
  771          | array_comprehension
  772          | make_tuple_call

  773 make_struct_fields: "name" copy_or_move expr
  774                   | "name" ":=" expr
  775                   | make_struct_fields ',' "name" copy_or_move expr
  776                   | make_struct_fields ',' "name" ":=" expr
  777                   | "$f" '(' expr ')' copy_or_move expr
  778                   | "$f" '(' expr ')' ":=" expr
  779                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  781 make_variant_dim: make_struct_fields

  782 make_struct_single: make_struct_fields

  783 make_struct_dim_list: '(' make_struct_fields ')'
  784                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  785 make_struct_dim_decl: make_struct_fields
  786                     | make_struct_dim_list optional_comma

  787 optional_make_struct_dim_decl: make_struct_dim_decl
  788                              | %empty

  789 use_initializer: %empty
  790                | "uninitialized"

  791 $@89: %empty

  792 $@90: %empty

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  794 $@91: %empty

  795 $@92: %empty

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  797 $@93: %empty

  798 $@94: %empty

  799 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

  800 $@95: %empty

  801 $@96: %empty

  802 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  803 make_map_tuple: expr "=>" expr
  804               | expr

  805 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  806 $@97: %empty

  807 $@98: %empty

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  809 make_dim_decl: '[' expr_list optional_comma ']'

  810 $@99: %empty

  811 $@100: %empty

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  813 $@101: %empty

  814 $@102: %empty

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  816 $@103: %empty

  817 $@104: %empty

  818 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  819              | "array" '(' expr_list optional_comma ')'

  820 $@105: %empty

  821 $@106: %empty

  822 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  823              | "fixed_array" '(' expr_list optional_comma ')'

  824 $@107: %empty

  825 $@108: %empty

  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  827 expr_map_tuple_list: make_map_tuple
  828                    | expr_map_tuple_list ',' make_map_tuple

  829 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  830                | "table" '(' expr_map_tuple_list optional_comma ')'
  831                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  832                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  833 array_comprehension_where: %empty
  834                          | ';' "where" expr

  835 optional_comma: %empty
  836               | ','

  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  838                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  839                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 126 144 409
    '#' (35) 704 706 752
    '$' (36) 24 328 695 697
    '%' (37) 40 44 164 421
    '&' (38) 172 331 428 541 549 702 703 708
    '(' (40) 67 87 88 90 93 95 115 124 130 139 140 281 282 283 284 303 304 320 321 322 335 339 369 370 371 372 374 384 385 386 387 388 392 393 394 395 396 397 398 439 449 450 480 481 482 484 485 486 487 488 490 491 492 493 494 495 496 497 498 499 522 551 626 667 668 694 695 697 777 778 779 780 783 784 793 796 799 805 808 812 815 818 819 822 823 826 830 831 832 837 838 839
    ')' (41) 67 87 88 90 93 95 115 124 130 139 140 281 282 283 284 303 304 320 321 322 335 339 369 370 371 372 374 384 385 386 387 388 392 393 394 395 396 397 398 439 449 450 480 481 482 484 485 486 487 488 490 491 492 493 494 495 496 497 498 499 522 551 626 667 668 694 695 697 777 778 779 780 783 784 793 796 799 805 808 812 815 818 819 822 823 826 830 831 832 837 838 839
    '*' (42) 162 419 448
    '+' (43) 160 411 417
    ',' (44) 16 53 104 117 133 302 324 337 370 553 554 556 628 629 775 776 779 780 784 828 836
    '-' (45) 161 412 418 698 701 703 706
    '.' (46) 45 189 191 192 382 383 384 385 386 387 388 391 441 443 445 492 494 495
    '/' (47) 46 163 420
    ':' (58) 55 56 142 303 453 526 532 542 543 560 561 563 564 596 608
    ';' (59) 18 524 619 670 834 837 838 839
    '<' (60) 165 278 310 313 316 319 321 322 378 381 422 456 462 467 481 482 483 676 693 697 712 716 719 722 726 729 733 736 740 743 746 749 793 796 799 802 808 812 815 818 822 826 831 832
    '=' (61) 96 108 109 110 111 112 113 115 332 351 538 545 579 589
    '>' (62) 166 278 310 313 316 319 321 322 378 381 423 456 462 467 481 482 483 676 693 697 712 716 719 722 726 729 733 736 740 743 746 749 793 796 799 802 808 812 815 818 822 826 831 832
    '?' (63) 201 202 453 464 467 468 497 709
    '@' (64) 118 119 329 330 375 378 381 499
    '[' (91) 135 137 187 369 370 386 440 441 681 682 683 684 698 809 837 838
    ']' (93) 135 137 187 188 369 370 386 440 441 442 443 681 682 683 684 698 809 837 838
    '^' (94) 174 430
    '{' (123) 83 238 241 307 342 575 606 620 757 762 767 829 839
    '|' (124) 173 429 751 752
    '}' (125) 83 238 241 307 342 575 606 620 757 762 767 829 839
    '~' (126) 145 410
    error (256) 264 391
    "lexer error" (258)
    "capture" (259) 339
    "struct" (260) 613 615 793 812
    "class" (261) 612 614 796
    "let" (262) 294 297
    "def" (263) 228 518 520
    "while" (264) 93
    "if" (265) 68 88
    "static_if" (266) 69
    "else" (267) 66 71
    "for" (268) 90 837 838 839
    "recover" (269) 293
    "true" (270) 101 112 405
    "false" (271) 102 113 406
    "new" (272) 280 281 282 283 284 285
    "typeinfo" (273) 320 321 322
    "type" (274) 106 319 456 462 467 693
    "in" (275) 90 107 837 838 839
    "is" (276) 197 199 456 457 458 498
    "as" (277) 48 198 200 201 202 459 462 463 464 467 468 496 497
    "elif" (278) 59
    "static_elif" (279) 60
    "array" (280) 716 812 815 818 819 822
    "return" (281) 288 289 290
    "null" (282) 399
    "break" (283) 286
    "try" (284) 293
    "options" (285) 41
    "table" (286) 719 830 831 832
    "expect" (287) 51
    "const" (288) 506 700 701 707
    "require" (289) 42 121
    "operator" (290) 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202
    "enum" (291) 606
    "finally" (292) 238
    "delete" (293) 195 274 275
    "deref" (294) 449
    "typedef" (295) 590
    "typedecl" (296) 694
    "with" (297) 95
    "aka" (298) 552 554 627 629
    "assume" (299) 96
    "cast" (300) 310
    "override" (301) 503
    "abstract" (302) 518
    "upcast" (303) 313
    "iterator" (304) 722 838
    "var" (305) 295 298
    "addr" (306) 450
    "continue" (307) 287
    "where" (308) 834
    "pass" (309) 261
    "reinterpret" (310) 316
    "module" (311) 26
    "public" (312) 22 50 231 508 570 587 593 618
    "label" (313) 56 57
    "goto" (314) 57 58
    "implicit" (315) 705
    "explicit" (316) 275 699
    "shared" (317) 567
    "private" (318) 23 122 230 509 569 586 592 617
    "smart_ptr" (319) 712
    "unsafe" (320) 91 480
    "inscope" (321) 299
    "static" (322) 511
    "fixed_array" (323) 823 826
    "default" (324) 802
    "uninitialized" (325) 284 393 395 790
    "bool" (326) 203 630
    "void" (327) 650
    "string" (328) 204 631
    "auto" (329) 666 667
    "int" (330) 205 632 657
    "int2" (331) 206 636
    "int3" (332) 207 637
    "int4" (333) 208 638
    "uint" (334) 209 639 660
    "bitfield" (335) 656 676 767
    "uint2" (336) 210 643
    "uint3" (337) 211 644
    "uint4" (338) 212 645
    "float" (339) 213 646
    "float2" (340) 214 647
    "float3" (341) 215 648
    "float4" (342) 216 649
    "range" (343) 217 651
    "urange" (344) 218 652
    "range64" (345) 219 653
    "urange64" (346) 220 654
    "block" (347) 723 726 729
    "int64" (348) 221 635 663
    "uint64" (349) 222 642 664
    "double" (350) 223 655
    "function" (351) 730 733 736
    "lambda" (352) 737 740 743
    "int8" (353) 224 633 658
    "uint8" (354) 225 640 661
    "int16" (355) 226 634 659
    "uint16" (356) 227 641 662
    "tuple" (357) 746 757 805 808 815
    "variant" (358) 749 762 799 818
    "generator" (359) 481 482 483
    "yield" (360) 291 292
    "sealed" (361) 504 610
    "template" (362) 614 615
    "+=" (363) 146 360
    "-=" (364) 147 361
    "/=" (365) 149 363
    "*=" (366) 148 362
    "%=" (367) 150 364
    "&=" (368) 151 354
    "|=" (369) 152 355
    "^=" (370) 153 356
    "<<" (371) 179 413
    ">>" (372) 180 414
    "++" (373) 175 177 435 437
    "--" (374) 176 178 436 438
    "<=" (375) 170 426
    "<<=" (376) 181 365
    ">>=" (377) 182 366
    ">=" (378) 171 427
    "==" (379) 168 424 707 708
    "!=" (380) 169 425
    "->" (381) 371 372
    "<-" (382) 290 292 327 333 352 539 546
    "??" (383) 196 452 713
    "?." (384) 190 193 444 445 493 495
    "?[" (385) 188 442 443
    "<|" (386) 476
    "|>" (387) 131 477 478
    ":=" (388) 192 194 334 353 547 774 776 778 780
    "<<<" (389) 183 415
    ">>>" (390) 184 416
    "<<<=" (391) 185 367
    ">>>=" (392) 186 368
    "=>" (393) 326 327 803
    "::" (394) 272 273
    "&&" (395) 127 157 431
    "||" (396) 128 158 432
    "^^" (397) 129 159 433
    "&&=" (398) 154 357
    "||=" (399) 155 358
    "^^=" (400) 156 359
    ".." (401) 167 434
    "$$" (402) 484
    "$i" (403) 374 485 551 626
    "$v" (404) 486
    "$b" (405) 487
    "$a" (406) 488 522
    "$t" (407) 668
    "$c" (408) 490 491 499
    "$f" (409) 492 493 494 495 496 497 498 777 778 779 780
    "..." (410) 489
    "integer constant" <i> (411) 54 55 56 57 99 110 343
    "long integer constant" <i64> (412) 345
    "unsigned integer constant" <ui> (413) 344
    "unsigned long integer constant" <ui64> (414) 346
    "unsigned int8 constant" <ui> (415) 347
    "floating point constant" <fd> (416) 100 111 348
    "double constant" <d> (417) 349
    "name" <s> (418) 25 43 45 46 48 96 98 105 109 143 191 192 193 199 200 202 271 272 273 301 302 321 322 331 332 333 334 335 371 372 382 383 384 385 386 444 445 458 459 464 526 532 550 552 553 554 555 556 578 579 589 594 611 625 627 628 629 667 669 670 672 673 757 762 767 773 774 775 776
    "new line, comma" (419) 17 599 600
    "new line, semicolon" (420) 19 61 62 514
    "start of the string" (421) 31 32 36
    STRING_CHARACTER <ch> (422) 27 29 37 38
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 36
    "{" (425) 35
    "}" (426) 35
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 580 581 677
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 77 78 85 88 243 244 245 250 252 253 254 255 259 260 261 303 304 516 518 558 560 561 562 563 564 565 572 590 678
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 34
    string_constant <s> (217)
        on left: 31 32
        on right: 97 108
    string_builder_body <pExpression> (218)
        on left: 33 34 35
        on right: 34 35 36
    string_builder <pExpression> (219)
        on left: 36
        on right: 403
    reader_character_sequence (220)
        on left: 37 38
        on right: 38 40
    expr_reader <pExpression> (221)
        on left: 40
        on right: 20 402
    $@1 (222)
        on left: 39
        on right: 40
    options_declaration (223)
        on left: 41
        on right: 9
    require_declaration (224)
        on left: 42
        on right: 8
    require_module_name <s> (225)
        on left: 43 44 45 46
        on right: 44 45 46 47 48
    require_module (226)
        on left: 47 48
        on right: 42
    is_public_module <b> (227)
        on left: 49 50
        on right: 47 48
    expect_declaration (228)
        on left: 51
        on right: 7
    expect_list (229)
        on left: 52 53
        on right: 51 53
    expect_error (230)
        on left: 54 55
        on right: 52 53
    expression_label <pExpression> (231)
        on left: 56
        on right: 259
    expression_goto <pExpression> (232)
        on left: 57 58
        on right: 260
    elif_or_static_elif <b> (233)
        on left: 59 60
        on right: 67
    emit_semis (234)
        on left: 61 62
        on right: 62 64
    optional_emit_semis (235)
        on left: 63 64
        on right: 66 67 87 90 91 93 95 118 119 137 234 340 341 483 520 624 757 762
    expression_else <pExpression> (236)
        on left: 65 66 67
        on right: 67 87
    if_or_static_if <b> (237)
        on left: 68 69
        on right: 87
    expression_else_one_liner <pExpression> (238)
        on left: 70 71
        on right: 88
    expression_if_one_liner <pExpression> (239)
        on left: 72 73 74 75 76
        on right: 71 85 88
    semis (240)
        on left: 77 78
        on right: 78 80 531 537
    optional_semis (241)
        on left: 79 80
        on right: 757 762
    expression_if_block <pExpression> (242)
        on left: 83 85
        on right: 87
    $@2 (243)
        on left: 81
        on right: 83
    $@3 (244)
        on left: 82
        on right: 83
    $@4 (245)
        on left: 84
        on right: 85
    expression_if_then_else <pExpression> (246)
        on left: 87
        on right: 256
    $@5 (247)
        on left: 86
        on right: 87
    expression_if_then_else_oneliner <pExpression> (248)
        on left: 88
        on right: 257
    expression_for_loop <pExpression> (249)
        on left: 90
        on right: 251
    $@6 (250)
        on left: 89
        on right: 90
    expression_unsafe <pExpression> (251)
        on left: 91
        on right: 248
    expression_while_loop <pExpression> (252)
        on left: 93
        on right: 247
    $@7 (253)
        on left: 92
        on right: 93
    expression_with <pExpression> (254)
        on left: 95
        on right: 249
    $@8 (255)
        on left: 94
        on right: 95
    expression_with_alias <pExpression> (256)
        on left: 96
        on right: 250
    annotation_argument_value <aa> (257)
        on left: 97 98 99 100 101 102
        on right: 103 104
    annotation_argument_value_list <aaList> (258)
        on left: 103 104
        on right: 104 115
    annotation_argument_name <s> (259)
        on left: 105 106 107
        on right: 108 109 110 111 112 113 114 115
    annotation_argument <aa> (260)
        on left: 108 109 110 111 112 113 114 115
        on right: 116 117 118 119
    annotation_argument_list <aaList> (261)
        on left: 116 117
        on right: 41 117 124
    metadata_argument_list <aaList> (262)
        on left: 118 119
        on right: 119 501
    annotation_declaration_name <s> (263)
        on left: 120 121 122
        on right: 123 124
    annotation_declaration_basic <fa> (264)
        on left: 123 124
        on right: 125
    annotation_declaration <fa> (265)
        on left: 125 126 127 128 129 130 131
        on right: 126 127 128 129 130 131 132 133
    annotation_list <faList> (266)
        on left: 132 133
        on right: 133 135 137
    optional_annotation_list <faList> (267)
        on left: 134 135
        on right: 340 341 606
    optional_annotation_list_with_emit_semis <faList> (268)
        on left: 136 137
        on right: 228 518 520 624
    optional_function_argument_list <pVarDeclList> (269)
        on left: 138 139 140
        on right: 232 340 341 381 729 736 743
    optional_function_type <pTypeDecl> (270)
        on left: 141 142
        on right: 232 340 341 381 729 736 743
    function_name <s> (271)
        on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
        on right: 232
    global_function_declaration (272)
        on left: 228
        on right: 6
    optional_public_or_private_function <b> (273)
        on left: 229 230 231
        on right: 234
    function_declaration_header <pFuncDecl> (274)
        on left: 232
        on right: 234 518 520
    function_declaration <pFuncDecl> (275)
        on left: 234
        on right: 228
    $@9 (276)
        on left: 233
        on right: 234
    expression_block_finally <pExpression> (277)
        on left: 235 238
        on right: 83 241
    $@10 (278)
        on left: 236
        on right: 238
    $@11 (279)
        on left: 237
        on right: 238
    expression_block <pExpression> (280)
        on left: 241
        on right: 66 67 90 91 93 95 234 293 325 341 483 520
    $@12 (281)
        on left: 239
        on right: 241
    $@13 (282)
        on left: 240
        on right: 241
    expr_call_pipe <pExpression> (283)
        on left: 242
        on right: 479
    expression_any <pExpression> (284)
        on left: 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261
        on right: 263
    expressions <pExpression> (285)
        on left: 262 263 264
        on right: 83 238 241 263 264 342
    optional_expr_list <pExpression> (286)
        on left: 265 266
        on right: 695 697 822
    optional_expr_map_tuple_list <pExpression> (287)
        on left: 267 268
        on right: 831 832
    type_declaration_no_options_list <pTypeDeclList> (288)
        on left: 269 270
        on right: 270 697
    name_in_namespace <s> (289)
        on left: 271 272 273
        on right: 40 120 320 321 322 369 370 373 392 393 394 395 396 400 608 665 695 697
    expression_delete <pExpression> (290)
        on left: 274 275
        on right: 245
    new_type_declaration <pTypeDecl> (291)
        on left: 278 279
        on right: 280 281 282 283 284
    $@14 (292)
        on left: 276
        on right: 278
    $@15 (293)
        on left: 277
        on right: 278
    expr_new <pExpression> (294)
        on left: 280 281 282 283 284 285
        on right: 472
    expression_break <pExpression> (295)
        on left: 286
        on right: 75 252
    expression_continue <pExpression> (296)
        on left: 287
        on right: 76 253
    expression_return <pExpression> (297)
        on left: 288 289 290
        on right: 73 254
    expression_yield <pExpression> (298)
        on left: 291 292
        on right: 74 255
    expression_try_catch <pExpression> (299)
        on left: 293
        on right: 258
    kwd_let_var_or_nothing <b> (300)
        on left: 294 295 296
        on right: 521
    kwd_let <b> (301)
        on left: 297 298
        on right: 305 306 307 575 577
    optional_in_scope <b> (302)
        on left: 299 300
        on right: 305 306 307
    tuple_expansion <pNameList> (303)
        on left: 301 302
        on right: 302 303 304
    tuple_expansion_variable_declaration <pVarDecl> (304)
        on left: 303 304
        on right: 306
    expression_let <pExpression> (305)
        on left: 305 306 307
        on right: 246
    expr_cast <pExpression> (306)
        on left: 310 313 316
        on right: 471
    $@16 (307)
        on left: 308
        on right: 310
    $@17 (308)
        on left: 309
        on right: 310
    $@18 (309)
        on left: 311
        on right: 313
    $@19 (310)
        on left: 312
        on right: 313
    $@20 (311)
        on left: 314
        on right: 316
    $@21 (312)
        on left: 315
        on right: 316
    expr_type_decl <pExpression> (313)
        on left: 319
        on right: 470
    $@22 (314)
        on left: 317
        on right: 319
    $@23 (315)
        on left: 318
        on right: 319
    expr_type_info <pExpression> (316)
        on left: 320 321 322
        on right: 469
    expr_list <pExpression> (317)
        on left: 323 324
        on right: 90 266 282 324 370 372 385 388 396 398 439 491 805 809 819 823 826 837 838 839
    block_or_simple_block <pExpression> (318)
        on left: 325 326 327
        on right: 340
    block_or_lambda <i> (319)
        on left: 328 329 330
        on right: 340 341
    capture_entry <pCapt> (320)
        on left: 331 332 333 334 335
        on right: 336 337
    capture_list <pCaptList> (321)
        on left: 336 337
        on right: 337 339
    optional_capture_list <pCaptList> (322)
        on left: 338 339
        on right: 340 341 481 482 483
    expr_full_block <pExpression> (323)
        on left: 340
        on right: 475
    expr_full_block_assumed_piped <pExpression> (324)
        on left: 341 342
        on right: 242
    expr_numeric_const <pExpression> (325)
        on left: 343 344 345 346 347 348 349
        on right: 401
    expr_assign <pExpression> (326)
        on left: 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368
        on right: 244
    expr_named_call <pExpression> (327)
        on left: 369 370
        on right: 474
    expr_method_call <pExpression> (328)
        on left: 371 372
        on right: 473
    func_addr_name <pExpression> (329)
        on left: 373 374
        on right: 375 378 381
    func_addr_expr <pExpression> (330)
        on left: 375 378 381
        on right: 446
    $@24 (331)
        on left: 376
        on right: 378
    $@25 (332)
        on left: 377
        on right: 378
    $@26 (333)
        on left: 379
        on right: 381
    $@27 (334)
        on left: 380
        on right: 381
    expr_field <pExpression> (335)
        on left: 382 383 384 385 386 387 388 391
        on right: 407
    $@28 (336)
        on left: 389
        on right: 391
    $@29 (337)
        on left: 390
        on right: 391
    expr_call <pExpression> (338)
        on left: 392 393 394 395 396 397 398
        on right: 242 447
    expr <pExpression> (339)
        on left: 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 456 457 458 459 462 463 464 467 468 469 470 471 472 473 474 475 476 477 478 479 480
        on right
    $@30 (340)
        on left: 454
        on right: 456
    $@31 (341)
        on left: 455
        on right: 456
    $@32 (342)
        on left: 460
        on right: 462
    $@33 (343)
        on left: 461
        on right: 462
    $@34 (344)
        on left: 465
        on right: 467
    $@35 (345)
        on left: 466
        on right: 467
    expr_generator <pExpression> (346)
        on left: 481 482 483
        on right: 451
    expr_mtag <pExpression> (347)
        on left: 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499
        on right: 408
    optional_field_annotation <aaList> (348)
        on left: 500 501
        on right: 512 521 574 577
    optional_override <i> (349)
        on left: 502 503 504
        on right: 512 520
    optional_constant <b> (350)
        on left: 505 506
        on right: 518 520
    optional_public_or_private_member_variable <b> (351)
        on left: 507 508 509
        on right: 512 518 520
    optional_static_member_variable <b> (352)
        on left: 510 511
        on right: 512 520
    structure_variable_declaration <pVarDecl> (353)
        on left: 512
        on right: 516
    struct_variable_declaration_list <pVarDeclList> (354)
        on left: 513 514 516 518 520
        on right: 514 516 518 520 620
    $@36 (355)
        on left: 515
        on right: 516
    $@37 (356)
        on left: 517
        on right: 518
    $@38 (357)
        on left: 519
        on right: 520
    function_argument_declaration <pVarDecl> (358)
        on left: 521 522
        on right: 523 524
    function_argument_list <pVarDeclList> (359)
        on left: 523 524
        on right: 140 524
    tuple_type <pVarDecl> (360)
        on left: 525 526
        on right: 527 528 530 531
    tuple_type_list <pVarDeclList> (361)
        on left: 527 528
        on right: 528 746
    tuple_alias_type_list <pVarDeclList> (362)
        on left: 529 530 531
        on right: 531 757
    variant_type <pVarDecl> (363)
        on left: 532
        on right: 533 534 536 537
    variant_type_list <pVarDeclList> (364)
        on left: 533 534
        on right: 534 749
    variant_alias_type_list <pVarDeclList> (365)
        on left: 535 536 537
        on right: 537 762
    copy_or_move <b> (366)
        on left: 538 539
        on right: 543 544 773 775 777 779
    variable_declaration <pVarDecl> (367)
        on left: 540 541 542 543 544
        on right: 512 521
    copy_or_move_or_clone <i> (368)
        on left: 545 546 547
        on right: 303 304 561 562 564 565
    optional_ref <b> (369)
        on left: 548 549
        on right: 304 562 565
    let_variable_name_with_pos_list <pNameWithPosList> (370)
        on left: 550 551 552 553 554
        on right: 553 554 560 561 562
    global_let_variable_name_with_pos_list <pNameWithPosList> (371)
        on left: 555 556
        on right: 556 563 564 565
    variable_declaration_list <pVarDeclList> (372)
        on left: 557 558 559
        on right: 307 558 559
    let_variable_declaration <pVarDecl> (373)
        on left: 560 561 562
        on right: 305 559 574
    global_let_variable_declaration <pVarDecl> (374)
        on left: 563 564 565
        on right: 577
    optional_shared <b> (375)
        on left: 566 567
        on right: 26 575 577
    optional_public_or_private_variable <b> (376)
        on left: 568 569 570
        on right: 575 577
    global_variable_declaration_list <pVarDeclList> (377)
        on left: 571 572 574
        on right: 572 574 575
    $@39 (378)
        on left: 573
        on right: 574
    global_let (379)
        on left: 575 577
        on right: 5
    $@40 (380)
        on left: 576
        on right: 577
    enum_expression <pEnumPair> (381)
        on left: 578 579
        on right: 583 584
    commas (382)
        on left: 580 581
        on right: 581 584 598 673
    enum_list <pEnum> (383)
        on left: 582 583 584
        on right: 584 606
    optional_public_or_private_alias <b> (384)
        on left: 585 586 587
        on right: 589 757 762 767
    single_alias (385)
        on left: 589
        on right: 590
    $@41 (386)
        on left: 588
        on right: 589
    alias_declaration (387)
        on left: 590
        on right: 10
    optional_public_or_private_enum <b> (388)
        on left: 591 592 593
        on right: 606
    enum_name <pEnum> (389)
        on left: 594
        on right: 606
    optional_enum_basic_type_declaration <type> (390)
        on left: 595 596
        on right: 606
    optional_commas (391)
        on left: 597 598
        on right: 606 767
    emit_commas (392)
        on left: 599 600
        on right: 600 602
    optional_emit_commas (393)
        on left: 601 602
        on right: 606 767
    enum_declaration (394)
        on left: 606
        on right: 4
    $@42 (395)
        on left: 603
        on right: 606
    $@43 (396)
        on left: 604
        on right: 606
    $@44 (397)
        on left: 605
        on right: 606
    optional_structure_parent <s> (398)
        on left: 607 608
        on right: 611
    optional_sealed <b> (399)
        on left: 609 610
        on right: 611
    structure_name <pStructure> (400)
        on left: 611
        on right: 624
    class_or_struct <i> (401)
        on left: 612 613 614 615
        on right: 624
    optional_public_or_private_structure <b> (402)
        on left: 616 617 618
        on right: 624
    optional_struct_variable_declaration_list <pVarDeclList> (403)
        on left: 619 620
        on right: 624
    structure_declaration (404)
        on left: 624
        on right: 3
    $@45 (405)
        on left: 621
        on right: 624
    $@46 (406)
        on left: 622
        on right: 624
    $@47 (407)
        on left: 623
        on right: 624
    variable_name_with_pos_list <pNameWithPosList> (408)
        on left: 625 626 627 628 629
        on right: 90 540 541 542 543 544 628 629 837 838 839
    basic_type_declaration <type> (409)
        on left: 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656
        on right: 387 388 397 398 457 463 468 478 687
    enum_basic_type_declaration <type> (410)
        on left: 657 658 659 660 661 662 663 664
        on right: 596
    structure_type_declaration <pTypeDecl> (411)
        on left: 665
        on right: 279 690
    auto_type_declaration <pTypeDecl> (412)
        on left: 666 667 668
        on right: 688
    bitfield_bits <pNameList> (413)
        on left: 669 670
        on right: 670 676
    bitfield_alias_bits <pNameList> (414)
        on left: 671 672 673
        on right: 673 767
    bitfield_type_declaration <pTypeDecl> (415)
        on left: 676
        on right: 689
    $@48 (416)
        on left: 674
        on right: 676
    $@49 (417)
        on left: 675
        on right: 676
    c_or_s (418)
        on left: 677 678
        on right: 270 322 528 534 680 832
    table_type_pair <aTypePair> (419)
        on left: 679 680
        on right: 719
    dim_list <pTypeDecl> (420)
        on left: 681 682 683 684
        on right: 683 684 686
    type_declaration_no_options <pTypeDecl> (421)
        on left: 685 686
        on right: 303 310 313 316 378 456 481 482 483 560 561 563 564 750 751 793 796 799 802 808 812 815 818 822 826 831 832
    type_declaration_no_options_no_dim <pTypeDecl> (422)
        on left: 687 688 689 690 693 694 695 697 698 699 700 701 702 703 704 705 706 707 708 709 712 713 716 719 722 723 726 729 730 733 736 737 740 743 746 749
        on right: 685 686 698 699 700 701 702 703 704 705 706 707 708 709 713
    $@50 (423)
        on left: 691
        on right: 693
    $@51 (424)
        on left: 692
        on right: 693
    $@52 (425)
        on left: 696
        on right: 697
    $@53 (426)
        on left: 710
        on right: 712
    $@54 (427)
        on left: 711
        on right: 712
    $@55 (428)
        on left: 714
        on right: 716
    $@56 (429)
        on left: 715
        on right: 716
    $@57 (430)
        on left: 717
        on right: 719
    $@58 (431)
        on left: 718
        on right: 719
    $@59 (432)
        on left: 720
        on right: 722
    $@60 (433)
        on left: 721
        on right: 722
    $@61 (434)
        on left: 724
        on right: 726
    $@62 (435)
        on left: 725
        on right: 726
    $@63 (436)
        on left: 727
        on right: 729
    $@64 (437)
        on left: 728
        on right: 729
    $@65 (438)
        on left: 731
        on right: 733
    $@66 (439)
        on left: 732
        on right: 733
    $@67 (440)
        on left: 734
        on right: 736
    $@68 (441)
        on left: 735
        on right: 736
    $@69 (442)
        on left: 738
        on right: 740
    $@70 (443)
        on left: 739
        on right: 740
    $@71 (444)
        on left: 741
        on right: 743
    $@72 (445)
        on left: 742
        on right: 743
    $@73 (446)
        on left: 744
        on right: 746
    $@74 (447)
        on left: 745
        on right: 746
    $@75 (448)
        on left: 747
        on right: 749
    $@76 (449)
        on left: 748
        on right: 749
    type_declaration <pTypeDecl> (450)
        on left: 750 751 752
        on right: 142 269 270 278 319 462 467 525 526 532 542 543 589 679 680 693 712 716 722 726 733 740 751 752
    tuple_alias_declaration (451)
        on left: 757
        on right: 12
    $@77 (452)
        on left: 753
        on right: 757
    $@78 (453)
        on left: 754
        on right: 757
    $@79 (454)
        on left: 755
        on right: 757
    $@80 (455)
        on left: 756
        on right: 757
    variant_alias_declaration (456)
        on left: 762
        on right: 11
    $@81 (457)
        on left: 758
        on right: 762
    $@82 (458)
        on left: 759
        on right: 762
    $@83 (459)
        on left: 760
        on right: 762
    $@84 (460)
        on left: 761
        on right: 762
    bitfield_alias_declaration (461)
        on left: 767
        on right: 13
    $@85 (462)
        on left: 763
        on right: 767
    $@86 (463)
        on left: 764
        on right: 767
    $@87 (464)
        on left: 765
        on right: 767
    $@88 (465)
        on left: 766
        on right: 767
    make_decl <pExpression> (466)
        on left: 768 769 770 771 772
        on right: 285 404
    make_struct_fields <pMakeStruct> (467)
        on left: 773 774 775 776 777 778 779 780
        on right: 369 370 386 775 776 779 780 781 782 783 784 785
    make_variant_dim <pExpression> (468)
        on left: 781
        on right: 799 818
    make_struct_single <pExpression> (469)
        on left: 782
        on right: 283 284 394 395
    make_struct_dim_list <pExpression> (470)
        on left: 783 784
        on right: 784 786
    make_struct_dim_decl <pExpression> (471)
        on left: 785 786
        on right: 787
    optional_make_struct_dim_decl <pExpression> (472)
        on left: 787 788
        on right: 793 796 808 812 815
    use_initializer <b> (473)
        on left: 789 790
        on right: 281 793 796 802 808 812 815
    make_struct_decl <pExpression> (474)
        on left: 793 796 799 802
        on right: 768
    $@89 (475)
        on left: 791
        on right: 793
    $@90 (476)
        on left: 792
        on right: 793
    $@91 (477)
        on left: 794
        on right: 796
    $@92 (478)
        on left: 795
        on right: 796
    $@93 (479)
        on left: 797
        on right: 799
    $@94 (480)
        on left: 798
        on right: 799
    $@95 (481)
        on left: 800
        on right: 802
    $@96 (482)
        on left: 801
        on right: 802
    make_map_tuple <pExpression> (483)
        on left: 803 804
        on right: 827 828 839
    make_tuple_call <pExpression> (484)
        on left: 805 808
        on right: 772
    $@97 (485)
        on left: 806
        on right: 808
    $@98 (486)
        on left: 807
        on right: 808
    make_dim_decl <pExpression> (487)
        on left: 809 812 815 818 819 822 823 826
        on right: 769
    $@99 (488)
        on left: 810
        on right: 812
    $@100 (489)
        on left: 811
        on right: 812
    $@101 (490)
        on left: 813
        on right: 815
    $@102 (491)
        on left: 814
        on right: 815
    $@103 (492)
        on left: 816
        on right: 818
    $@104 (493)
        on left: 817
        on right: 818
    $@105 (494)
        on left: 820
        on right: 822
    $@106 (495)
        on left: 821
        on right: 822
    $@107 (496)
        on left: 824
        on right: 826
    $@108 (497)
        on left: 825
        on right: 826
    expr_map_tuple_list <pExpression> (498)
        on left: 827 828
        on right: 268 828 829 830
    make_table_decl <pExpression> (499)
        on left: 829 830 831 832
        on right: 770
    array_comprehension_where <pExpression> (500)
        on left: 833 834
        on right: 837 838 839
    optional_comma <b> (501)
        on left: 835 836
        on right: 266 268 439 786 805 809 819 823 826 829 830
    array_comprehension <pExpression> (502)
        on left: 837 838 839
        on right: 771


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    "enum"    reduce using rule 134 (optional_annotation_list)
    $default  reduce using rule 136 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list                  go to state 24
    optional_annotation_list_with_emit_semis  go to state 25
    global_function_declaration               go to state 26
    kwd_let                                   go to state 27
    global_let                                go to state 28
    alias_declaration                         go to state 29
    enum_declaration                          go to state 30
    structure_declaration                     go to state 31
    tuple_alias_declaration                   go to state 32
    variant_alias_declaration                 go to state 33
    bitfield_alias_declaration                go to state 34


State 2

    0 $accept: program $end .

    $default  accept


State 3

  297 kwd_let: "let" .

    $default  reduce using rule 297 (kwd_let)


State 4

   41 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 40


State 5

   51 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 41

    expect_list   go to state 42
    expect_error  go to state 43


State 6

   42 require_declaration: "require" . require_module

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 46
    require_module       go to state 47


State 7

  590 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 585 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 50
    single_alias                      go to state 51


State 8

  298 kwd_let: "var" .

    $default  reduce using rule 298 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 52
    '$'     shift, and go to state 53

    module_name  go to state 54


State 10

  767 bitfield_alias_declaration: "bitfield" . $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 763 ($@85)

    $@85  go to state 55


State 11

  757 tuple_alias_declaration: "tuple" . $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 753 ($@77)

    $@77  go to state 56


State 12

  762 variant_alias_declaration: "variant" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 758 ($@81)

    $@81  go to state 57


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   40 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  135 optional_annotation_list: '[' . annotation_list ']'
  137 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  606 enum_declaration: optional_annotation_list . "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "enum"  shift, and go to state 74


State 25

  228 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  624 structure_declaration: optional_annotation_list_with_emit_semis . $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "def"  shift, and go to state 75

    $default  reduce using rule 621 ($@45)

    $@45  go to state 76


State 26

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 27

  575 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  577           | kwd_let . optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 566 (optional_shared)

    optional_shared  go to state 78


State 28

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 29

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 30

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 31

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 32

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 33

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 34

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 35

  106 annotation_argument_name: "type" .

    $default  reduce using rule 106 (annotation_argument_name)


State 36

  107 annotation_argument_name: "in" .

    $default  reduce using rule 107 (annotation_argument_name)


State 37

  105 annotation_argument_name: "name" .

    $default  reduce using rule 105 (annotation_argument_name)


State 38

  108 annotation_argument: annotation_argument_name . '=' string_constant
  109                    | annotation_argument_name . '=' "name"
  110                    | annotation_argument_name . '=' "integer constant"
  111                    | annotation_argument_name . '=' "floating point constant"
  112                    | annotation_argument_name . '=' "true"
  113                    | annotation_argument_name . '=' "false"
  114                    | annotation_argument_name .
  115                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 114 (annotation_argument)


State 39

  116 annotation_argument_list: annotation_argument .

    $default  reduce using rule 116 (annotation_argument_list)


State 40

   41 options_declaration: "options" annotation_argument_list .
  117 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 41 (options_declaration)


State 41

   54 expect_error: "integer constant" .
   55             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 54 (expect_error)


State 42

   51 expect_declaration: "expect" expect_list .
   53 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 51 (expect_declaration)


State 43

   52 expect_list: expect_error .

    $default  reduce using rule 52 (expect_list)


State 44

   43 require_module_name: "name" .

    $default  reduce using rule 43 (require_module_name)


State 45

   44 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 83


State 46

   45 require_module_name: require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"
   47 require_module: require_module_name . is_public_module
   48               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 88


State 47

   42 require_declaration: "require" require_module .

    $default  reduce using rule 42 (require_declaration)


State 48

  587 optional_public_or_private_alias: "public" .

    $default  reduce using rule 587 (optional_public_or_private_alias)


State 49

  586 optional_public_or_private_alias: "private" .

    $default  reduce using rule 586 (optional_public_or_private_alias)


State 50

  589 single_alias: optional_public_or_private_alias . "name" $@41 '=' type_declaration

    "name"  shift, and go to state 89


State 51

  590 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 52

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 53

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 54

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 566 (optional_shared)

    optional_shared  go to state 91


State 55

  767 bitfield_alias_declaration: "bitfield" $@85 . optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 585 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 56

  757 tuple_alias_declaration: "tuple" $@77 . optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 585 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 57

  762 variant_alias_declaration: "variant" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 585 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 58

  273 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 59

  271 name_in_namespace: "name" .
  272                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 271 (name_in_namespace)


State 60

   40 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 39 ($@1)

    $@1  go to state 97


State 61

  121 annotation_declaration_name: "require" .

    $default  reduce using rule 121 (annotation_declaration_name)


State 62

  122 annotation_declaration_name: "private" .

    $default  reduce using rule 122 (annotation_declaration_name)


State 63

  131 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  126 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  130 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  123 annotation_declaration_basic: annotation_declaration_name .
  124                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 123 (annotation_declaration_basic)


State 67

  125 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 125 (annotation_declaration)


State 68

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  132 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 132 (annotation_list)


State 69

  133 annotation_list: annotation_list . ',' annotation_declaration
  135 optional_annotation_list: '[' annotation_list . ']'
  137 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  120 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 120 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  606 enum_declaration: optional_annotation_list "enum" . $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    $default  reduce using rule 603 ($@42)

    $@42  go to state 107


State 75

  228 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 229 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 110
    function_declaration                 go to state 111


State 76

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 . class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  567 optional_shared: "shared" .

    $default  reduce using rule 567 (optional_shared)


State 78

  575 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  577           | kwd_let optional_shared . optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 568 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  108 annotation_argument: annotation_argument_name '=' . string_constant
  109                    | annotation_argument_name '=' . "name"
  110                    | annotation_argument_name '=' . "integer constant"
  111                    | annotation_argument_name '=' . "floating point constant"
  112                    | annotation_argument_name '=' . "true"
  113                    | annotation_argument_name '=' . "false"
  115                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  117 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 127


State 81

   55 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   53 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 41

    expect_error  go to state 129


State 83

   44 require_module_name: '%' require_module_name .
   45                    | require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 44 (require_module_name)


State 84

   48 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   50 is_public_module: "public" .

    $default  reduce using rule 50 (is_public_module)


State 86

   46 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   45 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   47 require_module: require_module_name is_public_module .

    $default  reduce using rule 47 (require_module)


State 89

  589 single_alias: optional_public_or_private_alias "name" . $@41 '=' type_declaration

    $default  reduce using rule 588 ($@41)

    $@41  go to state 133


State 90

  590 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 590 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias . "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "name"  shift, and go to state 137


State 93

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias . "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "name"  shift, and go to state 138


State 94

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 139


State 95

  273 name_in_namespace: "::" "name" .

    $default  reduce using rule 273 (name_in_namespace)


State 96

  272 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   40 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  131                       | "|>" annotation_declaration .

    $default  reduce using rule 131 (annotation_declaration)


State 99

  126 annotation_declaration: '!' annotation_declaration .
  127                       | annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 126 (annotation_declaration)


State 100

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  130                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  124 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 144


State 102

  127 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  128 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  129 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  133 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  135 optional_annotation_list: '[' annotation_list ']' .
  137 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    "enum"    reduce using rule 135 (optional_annotation_list)
    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  606 enum_declaration: optional_annotation_list "enum" $@42 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "public"   shift, and go to state 152
    "private"  shift, and go to state 153

    $default  reduce using rule 591 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 154


State 108

  231 optional_public_or_private_function: "public" .

    $default  reduce using rule 231 (optional_public_or_private_function)


State 109

  230 optional_public_or_private_function: "private" .

    $default  reduce using rule 230 (optional_public_or_private_function)


State 110

  234 function_declaration: optional_public_or_private_function . $@9 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 233 ($@9)

    $@9  go to state 155


State 111

  228 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 228 (global_function_declaration)


State 112

  613 class_or_struct: "struct" .

    $default  reduce using rule 613 (class_or_struct)


State 113

  612 class_or_struct: "class" .

    $default  reduce using rule 612 (class_or_struct)


State 114

  614 class_or_struct: "template" . "class"
  615                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct . optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 616 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  570 optional_public_or_private_variable: "public" .

    $default  reduce using rule 570 (optional_public_or_private_variable)


State 117

  569 optional_public_or_private_variable: "private" .

    $default  reduce using rule 569 (optional_public_or_private_variable)


State 118

  575 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  577           | kwd_let optional_shared optional_public_or_private_variable . $@40 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 576 ($@40)

    $@40  go to state 162


State 119

  112 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 112 (annotation_argument)


State 120

  113 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 113 (annotation_argument)


State 121

  110 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 110 (annotation_argument)


State 122

  111 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 111 (annotation_argument)


State 123

  109 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 109 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  115 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  108 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 108 (annotation_argument)


State 127

  117 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 117 (annotation_argument_list)


State 128

   55 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 55 (expect_error)


State 129

   53 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 53 (expect_list)


State 130

   48 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 175


State 131

   46 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 46 (require_module_name)


State 132

   45 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 45 (require_module_name)


State 133

  589 single_alias: optional_public_or_private_alias "name" $@41 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" . optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 601 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" . optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  272 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 272 (name_in_namespace)


State 141

   37 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 37 (reader_character_sequence)


State 142

   38 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 40 (expr_reader)


State 143

  130 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 130 (annotation_declaration)


State 144

  117 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  124 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  127                       | annotation_declaration "&&" annotation_declaration .
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 127 (annotation_declaration)


State 146

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  128                       | annotation_declaration "||" annotation_declaration .
  129                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 128 (annotation_declaration)


State 147

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  129                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 129 (annotation_declaration)


State 148

  127 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration . "^^" annotation_declaration
  133 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 133 (annotation_list)


State 149

   61 emit_semis: "new line, semicolon" .

    $default  reduce using rule 61 (emit_semis)


State 150

   62 emit_semis: emit_semis . "new line, semicolon"
   64 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 64 (optional_emit_semis)


State 151

  137 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 137 (optional_annotation_list_with_emit_semis)


State 152

  593 optional_public_or_private_enum: "public" .

    $default  reduce using rule 593 (optional_public_or_private_enum)


State 153

  592 optional_public_or_private_enum: "private" .

    $default  reduce using rule 592 (optional_public_or_private_enum)


State 154

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "name"  shift, and go to state 185

    enum_name  go to state 186


State 155

  234 function_declaration: optional_public_or_private_function $@9 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 217


State 156

  615 class_or_struct: "template" "struct" .

    $default  reduce using rule 615 (class_or_struct)


State 157

  614 class_or_struct: "template" "class" .

    $default  reduce using rule 614 (class_or_struct)


State 158

  618 optional_public_or_private_structure: "public" .

    $default  reduce using rule 618 (optional_public_or_private_structure)


State 159

  617 optional_public_or_private_structure: "private" .

    $default  reduce using rule 617 (optional_public_or_private_structure)


State 160

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure . $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 622 ($@46)

    $@46  go to state 218


State 161

  575 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 571 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 500 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  101 annotation_argument_value: "true" .

    $default  reduce using rule 101 (annotation_argument_value)


State 168

  102 annotation_argument_value: "false" .

    $default  reduce using rule 102 (annotation_argument_value)


State 169

   99 annotation_argument_value: "integer constant" .

    $default  reduce using rule 99 (annotation_argument_value)


State 170

  100 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 100 (annotation_argument_value)


State 171

   98 annotation_argument_value: "name" .

    $default  reduce using rule 98 (annotation_argument_value)


State 172

   97 annotation_argument_value: string_constant .

    $default  reduce using rule 97 (annotation_argument_value)


State 173

  103 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 103 (annotation_argument_value_list)


State 174

  104 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  115 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   48 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 48 (require_module)


State 176

  589 single_alias: optional_public_or_private_alias "name" $@41 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  599 emit_commas: "new line, comma" .

    $default  reduce using rule 599 (emit_commas)


State 178

  600 emit_commas: emit_commas . "new line, comma"
  602 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 602 (optional_emit_commas)


State 179

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas . $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 764 ($@86)

    $@86  go to state 278


State 180

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis . $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 754 ($@78)

    $@78  go to state 279


State 181

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 759 ($@82)

    $@82  go to state 280


State 182

   38 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 183

  124 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 124 (annotation_declaration_basic)


State 184

   62 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 62 (emit_semis)


State 185

  594 enum_name: "name" .

    $default  reduce using rule 594 (enum_name)


State 186

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    ':'  shift, and go to state 281

    $default  reduce using rule 595 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 282


State 187

  144 function_name: "operator" . '!'
  145              | "operator" . '~'
  146              | "operator" . "+="
  147              | "operator" . "-="
  148              | "operator" . "*="
  149              | "operator" . "/="
  150              | "operator" . "%="
  151              | "operator" . "&="
  152              | "operator" . "|="
  153              | "operator" . "^="
  154              | "operator" . "&&="
  155              | "operator" . "||="
  156              | "operator" . "^^="
  157              | "operator" . "&&"
  158              | "operator" . "||"
  159              | "operator" . "^^"
  160              | "operator" . '+'
  161              | "operator" . '-'
  162              | "operator" . '*'
  163              | "operator" . '/'
  164              | "operator" . '%'
  165              | "operator" . '<'
  166              | "operator" . '>'
  167              | "operator" . ".."
  168              | "operator" . "=="
  169              | "operator" . "!="
  170              | "operator" . "<="
  171              | "operator" . ">="
  172              | "operator" . '&'
  173              | "operator" . '|'
  174              | "operator" . '^'
  177              | "operator" . "++"
  178              | "operator" . "--"
  179              | "operator" . "<<"
  180              | "operator" . ">>"
  181              | "operator" . "<<="
  182              | "operator" . ">>="
  183              | "operator" . "<<<"
  184              | "operator" . ">>>"
  185              | "operator" . "<<<="
  186              | "operator" . ">>>="
  187              | "operator" . '[' ']'
  188              | "operator" . "?[" ']'
  189              | "operator" . '.'
  190              | "operator" . "?."
  191              | "operator" . '.' "name"
  192              | "operator" . '.' "name" ":="
  193              | "operator" . "?." "name"
  194              | "operator" . ":="
  195              | "operator" . "delete"
  196              | "operator" . "??"
  197              | "operator" . "is"
  198              | "operator" . "as"
  199              | "operator" . "is" "name"
  200              | "operator" . "as" "name"
  201              | "operator" . '?' "as"
  202              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 283
    "as"      shift, and go to state 284
    "delete"  shift, and go to state 285
    "+="      shift, and go to state 286
    "-="      shift, and go to state 287
    "/="      shift, and go to state 288
    "*="      shift, and go to state 289
    "%="      shift, and go to state 290
    "&="      shift, and go to state 291
    "|="      shift, and go to state 292
    "^="      shift, and go to state 293
    "<<"      shift, and go to state 294
    ">>"      shift, and go to state 295
    "++"      shift, and go to state 296
    "--"      shift, and go to state 297
    "<="      shift, and go to state 298
    "<<="     shift, and go to state 299
    ">>="     shift, and go to state 300
    ">="      shift, and go to state 301
    "=="      shift, and go to state 302
    "!="      shift, and go to state 303
    "??"      shift, and go to state 304
    "?."      shift, and go to state 305
    "?["      shift, and go to state 306
    ":="      shift, and go to state 307
    "<<<"     shift, and go to state 308
    ">>>"     shift, and go to state 309
    "<<<="    shift, and go to state 310
    ">>>="    shift, and go to state 311
    "&&"      shift, and go to state 312
    "||"      shift, and go to state 313
    "^^"      shift, and go to state 314
    "&&="     shift, and go to state 315
    "||="     shift, and go to state 316
    "^^="     shift, and go to state 317
    ".."      shift, and go to state 318
    '?'       shift, and go to state 319
    '|'       shift, and go to state 320
    '^'       shift, and go to state 321
    '&'       shift, and go to state 322
    '<'       shift, and go to state 323
    '>'       shift, and go to state 324
    '-'       shift, and go to state 325
    '+'       shift, and go to state 326
    '*'       shift, and go to state 327
    '/'       shift, and go to state 328
    '%'       shift, and go to state 329
    '~'       shift, and go to state 330
    '!'       shift, and go to state 331
    '.'       shift, and go to state 332
    '['       shift, and go to state 333


State 188

  203 function_name: "bool" .

    $default  reduce using rule 203 (function_name)


State 189

  204 function_name: "string" .

    $default  reduce using rule 204 (function_name)


State 190

  205 function_name: "int" .

    $default  reduce using rule 205 (function_name)


State 191

  206 function_name: "int2" .

    $default  reduce using rule 206 (function_name)


State 192

  207 function_name: "int3" .

    $default  reduce using rule 207 (function_name)


State 193

  208 function_name: "int4" .

    $default  reduce using rule 208 (function_name)


State 194

  209 function_name: "uint" .

    $default  reduce using rule 209 (function_name)


State 195

  210 function_name: "uint2" .

    $default  reduce using rule 210 (function_name)


State 196

  211 function_name: "uint3" .

    $default  reduce using rule 211 (function_name)


State 197

  212 function_name: "uint4" .

    $default  reduce using rule 212 (function_name)


State 198

  213 function_name: "float" .

    $default  reduce using rule 213 (function_name)


State 199

  214 function_name: "float2" .

    $default  reduce using rule 214 (function_name)


State 200

  215 function_name: "float3" .

    $default  reduce using rule 215 (function_name)


State 201

  216 function_name: "float4" .

    $default  reduce using rule 216 (function_name)


State 202

  217 function_name: "range" .

    $default  reduce using rule 217 (function_name)


State 203

  218 function_name: "urange" .

    $default  reduce using rule 218 (function_name)


State 204

  219 function_name: "range64" .

    $default  reduce using rule 219 (function_name)


State 205

  220 function_name: "urange64" .

    $default  reduce using rule 220 (function_name)


State 206

  221 function_name: "int64" .

    $default  reduce using rule 221 (function_name)


State 207

  222 function_name: "uint64" .

    $default  reduce using rule 222 (function_name)


State 208

  223 function_name: "double" .

    $default  reduce using rule 223 (function_name)


State 209

  224 function_name: "int8" .

    $default  reduce using rule 224 (function_name)


State 210

  225 function_name: "uint8" .

    $default  reduce using rule 225 (function_name)


State 211

  226 function_name: "int16" .

    $default  reduce using rule 226 (function_name)


State 212

  227 function_name: "uint16" .

    $default  reduce using rule 227 (function_name)


State 213

  175 function_name: "++" . "operator"

    "operator"  shift, and go to state 334


State 214

  176 function_name: "--" . "operator"

    "operator"  shift, and go to state 335


State 215

  143 function_name: "name" .

    $default  reduce using rule 143 (function_name)


State 216

  232 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 336

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 337


State 217

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 338


State 218

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 . structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 609 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  572 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  574                                 | global_variable_declaration_list . $@39 optional_field_annotation let_variable_declaration
  575 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 573 ($@39)

    SEMICOLON  go to state 343
    $@39       go to state 344


State 220

  118 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 345


State 221

  119 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  501 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 501 (optional_field_annotation)


State 222

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  104 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  115 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 115 (annotation_argument)


State 228

  693 type_declaration_no_options_no_dim: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 351


State 229

  716 type_declaration_no_options_no_dim: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 352


State 230

  719 type_declaration_no_options_no_dim: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 353


State 231

  694 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  722 type_declaration_no_options_no_dim: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 355


State 233

  712 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 356


State 234

  630 basic_type_declaration: "bool" .

    $default  reduce using rule 630 (basic_type_declaration)


State 235

  650 basic_type_declaration: "void" .

    $default  reduce using rule 650 (basic_type_declaration)


State 236

  631 basic_type_declaration: "string" .

    $default  reduce using rule 631 (basic_type_declaration)


State 237

  666 auto_type_declaration: "auto" .
  667                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 666 (auto_type_declaration)


State 238

  632 basic_type_declaration: "int" .

    $default  reduce using rule 632 (basic_type_declaration)


State 239

  636 basic_type_declaration: "int2" .

    $default  reduce using rule 636 (basic_type_declaration)


State 240

  637 basic_type_declaration: "int3" .

    $default  reduce using rule 637 (basic_type_declaration)


State 241

  638 basic_type_declaration: "int4" .

    $default  reduce using rule 638 (basic_type_declaration)


State 242

  639 basic_type_declaration: "uint" .

    $default  reduce using rule 639 (basic_type_declaration)


State 243

  656 basic_type_declaration: "bitfield" .
  676 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 358

    $default  reduce using rule 656 (basic_type_declaration)


State 244

  643 basic_type_declaration: "uint2" .

    $default  reduce using rule 643 (basic_type_declaration)


State 245

  644 basic_type_declaration: "uint3" .

    $default  reduce using rule 644 (basic_type_declaration)


State 246

  645 basic_type_declaration: "uint4" .

    $default  reduce using rule 645 (basic_type_declaration)


State 247

  646 basic_type_declaration: "float" .

    $default  reduce using rule 646 (basic_type_declaration)


State 248

  647 basic_type_declaration: "float2" .

    $default  reduce using rule 647 (basic_type_declaration)


State 249

  648 basic_type_declaration: "float3" .

    $default  reduce using rule 648 (basic_type_declaration)


State 250

  649 basic_type_declaration: "float4" .

    $default  reduce using rule 649 (basic_type_declaration)


State 251

  651 basic_type_declaration: "range" .

    $default  reduce using rule 651 (basic_type_declaration)


State 252

  652 basic_type_declaration: "urange" .

    $default  reduce using rule 652 (basic_type_declaration)


State 253

  653 basic_type_declaration: "range64" .

    $default  reduce using rule 653 (basic_type_declaration)


State 254

  654 basic_type_declaration: "urange64" .

    $default  reduce using rule 654 (basic_type_declaration)


State 255

  723 type_declaration_no_options_no_dim: "block" .
  726                                   | "block" . '<' $@61 type_declaration '>' $@62
  729                                   | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 359

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 256

  635 basic_type_declaration: "int64" .

    $default  reduce using rule 635 (basic_type_declaration)


State 257

  642 basic_type_declaration: "uint64" .

    $default  reduce using rule 642 (basic_type_declaration)


State 258

  655 basic_type_declaration: "double" .

    $default  reduce using rule 655 (basic_type_declaration)


State 259

  730 type_declaration_no_options_no_dim: "function" .
  733                                   | "function" . '<' $@65 type_declaration '>' $@66
  736                                   | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 360

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 260

  737 type_declaration_no_options_no_dim: "lambda" .
  740                                   | "lambda" . '<' $@69 type_declaration '>' $@70
  743                                   | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 361

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 261

  633 basic_type_declaration: "int8" .

    $default  reduce using rule 633 (basic_type_declaration)


State 262

  640 basic_type_declaration: "uint8" .

    $default  reduce using rule 640 (basic_type_declaration)


State 263

  634 basic_type_declaration: "int16" .

    $default  reduce using rule 634 (basic_type_declaration)


State 264

  641 basic_type_declaration: "uint16" .

    $default  reduce using rule 641 (basic_type_declaration)


State 265

  746 type_declaration_no_options_no_dim: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 362


State 266

  749 type_declaration_no_options_no_dim: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 363


State 267

  668 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  695 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  697                                   | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 365


State 269

  665 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 665 (structure_type_declaration)


State 270

  687 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 687 (type_declaration_no_options_no_dim)


State 271

  690 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 690 (type_declaration_no_options_no_dim)


State 272

  688 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 688 (type_declaration_no_options_no_dim)


State 273

  689 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 689 (type_declaration_no_options_no_dim)


State 274

  750 type_declaration: type_declaration_no_options .

    $default  reduce using rule 750 (type_declaration)


State 275

  685 type_declaration_no_options: type_declaration_no_options_no_dim .
  686                            | type_declaration_no_options_no_dim . dim_list
  698 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  699                                   | type_declaration_no_options_no_dim . "explicit"
  700                                   | type_declaration_no_options_no_dim . "const"
  701                                   | type_declaration_no_options_no_dim . '-' "const"
  702                                   | type_declaration_no_options_no_dim . '&'
  703                                   | type_declaration_no_options_no_dim . '-' '&'
  704                                   | type_declaration_no_options_no_dim . '#'
  705                                   | type_declaration_no_options_no_dim . "implicit"
  706                                   | type_declaration_no_options_no_dim . '-' '#'
  707                                   | type_declaration_no_options_no_dim . "==" "const"
  708                                   | type_declaration_no_options_no_dim . "==" '&'
  709                                   | type_declaration_no_options_no_dim . '?'
  713                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    $default  reduce using rule 685 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  589 single_alias: optional_public_or_private_alias "name" $@41 '=' type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 589 (single_alias)


State 277

  600 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 600 (emit_commas)


State 278

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 . '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    '{'  shift, and go to state 378


State 279

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 . '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    '{'  shift, and go to state 379


State 280

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 380


State 281

  596 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 381
    "uint"    shift, and go to state 382
    "int64"   shift, and go to state 383
    "uint64"  shift, and go to state 384
    "int8"    shift, and go to state 385
    "uint8"   shift, and go to state 386
    "int16"   shift, and go to state 387
    "uint16"  shift, and go to state 388

    enum_basic_type_declaration  go to state 389


State 282

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 601 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 390


State 283

  197 function_name: "operator" "is" .
  199              | "operator" "is" . "name"

    "name"  shift, and go to state 391

    $default  reduce using rule 197 (function_name)


State 284

  198 function_name: "operator" "as" .
  200              | "operator" "as" . "name"

    "name"  shift, and go to state 392

    $default  reduce using rule 198 (function_name)


State 285

  195 function_name: "operator" "delete" .

    $default  reduce using rule 195 (function_name)


State 286

  146 function_name: "operator" "+=" .

    $default  reduce using rule 146 (function_name)


State 287

  147 function_name: "operator" "-=" .

    $default  reduce using rule 147 (function_name)


State 288

  149 function_name: "operator" "/=" .

    $default  reduce using rule 149 (function_name)


State 289

  148 function_name: "operator" "*=" .

    $default  reduce using rule 148 (function_name)


State 290

  150 function_name: "operator" "%=" .

    $default  reduce using rule 150 (function_name)


State 291

  151 function_name: "operator" "&=" .

    $default  reduce using rule 151 (function_name)


State 292

  152 function_name: "operator" "|=" .

    $default  reduce using rule 152 (function_name)


State 293

  153 function_name: "operator" "^=" .

    $default  reduce using rule 153 (function_name)


State 294

  179 function_name: "operator" "<<" .

    $default  reduce using rule 179 (function_name)


State 295

  180 function_name: "operator" ">>" .

    $default  reduce using rule 180 (function_name)


State 296

  177 function_name: "operator" "++" .

    $default  reduce using rule 177 (function_name)


State 297

  178 function_name: "operator" "--" .

    $default  reduce using rule 178 (function_name)


State 298

  170 function_name: "operator" "<=" .

    $default  reduce using rule 170 (function_name)


State 299

  181 function_name: "operator" "<<=" .

    $default  reduce using rule 181 (function_name)


State 300

  182 function_name: "operator" ">>=" .

    $default  reduce using rule 182 (function_name)


State 301

  171 function_name: "operator" ">=" .

    $default  reduce using rule 171 (function_name)


State 302

  168 function_name: "operator" "==" .

    $default  reduce using rule 168 (function_name)


State 303

  169 function_name: "operator" "!=" .

    $default  reduce using rule 169 (function_name)


State 304

  196 function_name: "operator" "??" .

    $default  reduce using rule 196 (function_name)


State 305

  190 function_name: "operator" "?." .
  193              | "operator" "?." . "name"

    "name"  shift, and go to state 393

    $default  reduce using rule 190 (function_name)


State 306

  188 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 394


State 307

  194 function_name: "operator" ":=" .

    $default  reduce using rule 194 (function_name)


State 308

  183 function_name: "operator" "<<<" .

    $default  reduce using rule 183 (function_name)


State 309

  184 function_name: "operator" ">>>" .

    $default  reduce using rule 184 (function_name)


State 310

  185 function_name: "operator" "<<<=" .

    $default  reduce using rule 185 (function_name)


State 311

  186 function_name: "operator" ">>>=" .

    $default  reduce using rule 186 (function_name)


State 312

  157 function_name: "operator" "&&" .

    $default  reduce using rule 157 (function_name)


State 313

  158 function_name: "operator" "||" .

    $default  reduce using rule 158 (function_name)


State 314

  159 function_name: "operator" "^^" .

    $default  reduce using rule 159 (function_name)


State 315

  154 function_name: "operator" "&&=" .

    $default  reduce using rule 154 (function_name)


State 316

  155 function_name: "operator" "||=" .

    $default  reduce using rule 155 (function_name)


State 317

  156 function_name: "operator" "^^=" .

    $default  reduce using rule 156 (function_name)


State 318

  167 function_name: "operator" ".." .

    $default  reduce using rule 167 (function_name)


State 319

  201 function_name: "operator" '?' . "as"
  202              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 395


State 320

  173 function_name: "operator" '|' .

    $default  reduce using rule 173 (function_name)


State 321

  174 function_name: "operator" '^' .

    $default  reduce using rule 174 (function_name)


State 322

  172 function_name: "operator" '&' .

    $default  reduce using rule 172 (function_name)


State 323

  165 function_name: "operator" '<' .

    $default  reduce using rule 165 (function_name)


State 324

  166 function_name: "operator" '>' .

    $default  reduce using rule 166 (function_name)


State 325

  161 function_name: "operator" '-' .

    $default  reduce using rule 161 (function_name)


State 326

  160 function_name: "operator" '+' .

    $default  reduce using rule 160 (function_name)


State 327

  162 function_name: "operator" '*' .

    $default  reduce using rule 162 (function_name)


State 328

  163 function_name: "operator" '/' .

    $default  reduce using rule 163 (function_name)


State 329

  164 function_name: "operator" '%' .

    $default  reduce using rule 164 (function_name)


State 330

  145 function_name: "operator" '~' .

    $default  reduce using rule 145 (function_name)


State 331

  144 function_name: "operator" '!' .

    $default  reduce using rule 144 (function_name)


State 332

  189 function_name: "operator" '.' .
  191              | "operator" '.' . "name"
  192              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 396

    $default  reduce using rule 189 (function_name)


State 333

  187 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 397


State 334

  175 function_name: "++" "operator" .

    $default  reduce using rule 175 (function_name)


State 335

  176 function_name: "--" "operator" .

    $default  reduce using rule 176 (function_name)


State 336

  139 optional_function_argument_list: '(' . ')'
  140                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 398
    ')'   shift, and go to state 399
    '@'   shift, and go to state 220

    $default  reduce using rule 500 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 400
    function_argument_declaration  go to state 401
    function_argument_list         go to state 402


State 337

  232 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 403

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 404


State 338

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 405
    $@12              go to state 406


State 339

  610 optional_sealed: "sealed" .

    $default  reduce using rule 610 (optional_sealed)


State 340

  611 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 407


State 341

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name . optional_emit_semis $@47 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 408


State 342

  575 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 575 (global_let)


State 343

  572 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 572 (global_variable_declaration_list)


State 344

  574 global_variable_declaration_list: global_variable_declaration_list $@39 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 500 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 409


State 345

  118 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 410


State 346

  119 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 411


State 347

  555 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 555 (global_let_variable_name_with_pos_list)


State 348

  556 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  563 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  564                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  565                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 412
    ':'  shift, and go to state 413
    '&'  shift, and go to state 414

    $default  reduce using rule 548 (optional_ref)

    optional_ref  go to state 415


State 349

  577 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 577 (global_let)


State 350

  104 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 104 (annotation_argument_value_list)


State 351

  693 type_declaration_no_options_no_dim: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 691 ($@50)

    $@50  go to state 416


State 352

  716 type_declaration_no_options_no_dim: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 714 ($@55)

    $@55  go to state 417


State 353

  719 type_declaration_no_options_no_dim: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 717 ($@57)

    $@57  go to state 418


State 354

  694 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 484
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 355

  722 type_declaration_no_options_no_dim: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 720 ($@59)

    $@59  go to state 494


State 356

  712 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 710 ($@53)

    $@53  go to state 495


State 357

  667 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 496


State 358

  676 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 674 ($@48)

    $@48  go to state 497


State 359

  726 type_declaration_no_options_no_dim: "block" '<' . $@61 type_declaration '>' $@62
  729                                   | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 727 ($@63)
    '>'       reduce using rule 727 ($@63)
    '('       reduce using rule 727 ($@63)
    $default  reduce using rule 724 ($@61)

    $@61  go to state 498
    $@63  go to state 499


State 360

  733 type_declaration_no_options_no_dim: "function" '<' . $@65 type_declaration '>' $@66
  736                                   | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 734 ($@67)
    '>'       reduce using rule 734 ($@67)
    '('       reduce using rule 734 ($@67)
    $default  reduce using rule 731 ($@65)

    $@65  go to state 500
    $@67  go to state 501


State 361

  740 type_declaration_no_options_no_dim: "lambda" '<' . $@69 type_declaration '>' $@70
  743                                   | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 741 ($@71)
    '>'       reduce using rule 741 ($@71)
    '('       reduce using rule 741 ($@71)
    $default  reduce using rule 738 ($@69)

    $@69  go to state 502
    $@71  go to state 503


State 362

  746 type_declaration_no_options_no_dim: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 744 ($@73)

    $@73  go to state 504


State 363

  749 type_declaration_no_options_no_dim: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 747 ($@75)

    $@75  go to state 505


State 364

  668 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 506
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 365

  695 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  697                                   | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 507
    '('  shift, and go to state 508


State 366

  700 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 367

  705 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 368

  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 699 (type_declaration_no_options_no_dim)


State 369

  707 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  708                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 509
    '&'      shift, and go to state 510


State 370

  713 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 371

  709 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 709 (type_declaration_no_options_no_dim)


State 372

  702 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 373

  698 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  701                                   | type_declaration_no_options_no_dim '-' . "const"
  703                                   | type_declaration_no_options_no_dim '-' . '&'
  706                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 511
    '&'      shift, and go to state 512
    '['      shift, and go to state 513
    '#'      shift, and go to state 514


State 374

  681 dim_list: '[' . expr ']'
  682         | '[' . ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    ']'                               shift, and go to state 515
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 516
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 375

  704 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 376

  683 dim_list: dim_list . '[' expr ']'
  684         | dim_list . '[' ']'
  686 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 517

    $default  reduce using rule 686 (type_declaration_no_options)


State 377

  751 type_declaration: type_declaration '|' . type_declaration_no_options
  752                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268
    '#'          shift, and go to state 518

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 519
    type_declaration_no_options_no_dim  go to state 275


State 378

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' . $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 765 ($@87)

    $@87  go to state 520


State 379

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' . $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 755 ($@79)

    $@79  go to state 521


State 380

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 760 ($@83)

    $@83  go to state 522


State 381

  657 enum_basic_type_declaration: "int" .

    $default  reduce using rule 657 (enum_basic_type_declaration)


State 382

  660 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 660 (enum_basic_type_declaration)


State 383

  663 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 663 (enum_basic_type_declaration)


State 384

  664 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 385

  658 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 658 (enum_basic_type_declaration)


State 386

  661 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 661 (enum_basic_type_declaration)


State 387

  659 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 388

  662 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 662 (enum_basic_type_declaration)


State 389

  596 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 596 (optional_enum_basic_type_declaration)


State 390

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@43 enum_list optional_commas $@44 '}'

    '{'  shift, and go to state 523


State 391

  199 function_name: "operator" "is" "name" .

    $default  reduce using rule 199 (function_name)


State 392

  200 function_name: "operator" "as" "name" .

    $default  reduce using rule 200 (function_name)


State 393

  193 function_name: "operator" "?." "name" .

    $default  reduce using rule 193 (function_name)


State 394

  188 function_name: "operator" "?[" ']' .

    $default  reduce using rule 188 (function_name)


State 395

  201 function_name: "operator" '?' "as" .
  202              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 524

    $default  reduce using rule 201 (function_name)


State 396

  191 function_name: "operator" '.' "name" .
  192              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 525

    $default  reduce using rule 191 (function_name)


State 397

  187 function_name: "operator" '[' ']' .

    $default  reduce using rule 187 (function_name)


State 398

  522 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 526


State 399

  139 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 139 (optional_function_argument_list)


State 400

  521 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 527
    "var"  shift, and go to state 528

    $default  reduce using rule 296 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 529


State 401

  523 function_argument_list: function_argument_declaration .

    $default  reduce using rule 523 (function_argument_list)


State 402

  140 optional_function_argument_list: '(' function_argument_list . ')'
  524 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 530
    ';'  shift, and go to state 531


State 403

  142 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 532


State 404

  232 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 232 (function_declaration_header)


State 405

  234 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 234 (function_declaration)


State 406

  241 expression_block: $@12 . '{' expressions $@13 '}' expression_block_finally

    '{'  shift, and go to state 533


State 407

  611 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 534

    $default  reduce using rule 607 (optional_structure_parent)

    optional_structure_parent  go to state 535


State 408

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 623 ($@47)

    $@47  go to state 536


State 409

  574 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 537
    "name"  shift, and go to state 538

    let_variable_name_with_pos_list  go to state 539
    let_variable_declaration         go to state 540


State 410

  118 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 118 (metadata_argument_list)


State 411

  119 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 541


State 412

  556 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 542


State 413

  563 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  564                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 543
    type_declaration_no_options_no_dim  go to state 275


State 414

  549 optional_ref: '&' .

    $default  reduce using rule 549 (optional_ref)


State 415

  565 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 547


State 416

  693 type_declaration_no_options_no_dim: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 548


State 417

  716 type_declaration_no_options_no_dim: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 549


State 418

  719 type_declaration_no_options_no_dim: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 550
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 551


State 419

  793 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 552


State 420

  796 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 553


State 421

  405 expr: "true" .

    $default  reduce using rule 405 (expr)


State 422

  406 expr: "false" .

    $default  reduce using rule 406 (expr)


State 423

  280 expr_new: "new" . new_type_declaration
  281         | "new" . new_type_declaration '(' use_initializer ')'
  282         | "new" . new_type_declaration '(' expr_list ')'
  283         | "new" . new_type_declaration '(' make_struct_single ')'
  284         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  285         | "new" . make_decl

    "struct"       shift, and go to state 419
    "class"        shift, and go to state 420
    "array"        shift, and go to state 426
    "table"        shift, and go to state 428
    "fixed_array"  shift, and go to state 435
    "default"      shift, and go to state 436
    "tuple"        shift, and go to state 438
    "variant"      shift, and go to state 439
    "::"           shift, and go to state 58
    "name"         shift, and go to state 59
    '<'            shift, and go to state 554
    '['            shift, and go to state 463
    '{'            shift, and go to state 467

    name_in_namespace           go to state 269
    new_type_declaration        go to state 555
    structure_type_declaration  go to state 556
    make_decl                   go to state 557
    make_struct_decl            go to state 489
    make_tuple_call             go to state 490
    make_dim_decl               go to state 491
    make_table_decl             go to state 492
    array_comprehension         go to state 493


State 424

  320 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  321               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  322               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 558


State 425

  319 expr_type_decl: "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 559


State 426

  812 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  815              | "array" . "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  818              | "array" . "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  819              | "array" . '(' expr_list optional_comma ')'
  822              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 560
    "tuple"    shift, and go to state 561
    "variant"  shift, and go to state 562
    '<'        shift, and go to state 563
    '('        shift, and go to state 564


State 427

  399 expr: "null" .

    $default  reduce using rule 399 (expr)


State 428

  830 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  831                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  832                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 565
    '('  shift, and go to state 566


State 429

  449 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 567


State 430

  310 expr_cast: "cast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 568


State 431

  313 expr_cast: "upcast" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 569


State 432

  450 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 570


State 433

  316 expr_cast: "reinterpret" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 571


State 434

  480 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 572


State 435

  823 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  826              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 573
    '('  shift, and go to state 574


State 436

  802 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 575


State 437

  656 basic_type_declaration: "bitfield" .

    $default  reduce using rule 656 (basic_type_declaration)


State 438

  805 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  808                | "tuple" . '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 576
    '('  shift, and go to state 577


State 439

  799 make_struct_decl: "variant" . '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    '<'  shift, and go to state 578


State 440

  481 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  482               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  483               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 579


State 441

  435 expr: "++" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 580
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 442

  436 expr: "--" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 581
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 443

  484 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 582


State 444

  485 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 583


State 445

  486 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 584


State 446

  487 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 585


State 447

  488 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 586


State 448

  490 expr_mtag: "$c" . '(' expr ')' '(' ')'
  491          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 587


State 449

  489 expr_mtag: "..." .

    $default  reduce using rule 489 (expr_mtag)


State 450

  343 expr_numeric_const: "integer constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 451

  345 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 452

  344 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 453

  346 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 454

  347 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 455

  348 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 456

  349 expr_numeric_const: "double constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 457

   36 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 33 (string_builder_body)

    string_builder_body  go to state 588


State 458

  412 expr: '-' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 589
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 459

  411 expr: '+' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 590
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 460

  448 expr: '*' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 591
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 461

  410 expr: '~' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 592
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 462

  409 expr: '!' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 593
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 463

  809 make_dim_decl: '[' . expr_list optional_comma ']'
  837 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  838                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 596
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 464

  439 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 465

  328 block_or_lambda: '$' .

    $default  reduce using rule 328 (block_or_lambda)


State 466

  329 block_or_lambda: '@' .
  330                | '@' . '@'
  375 func_addr_expr: '@' . '@' func_addr_name
  378               | '@' . '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  381               | '@' . '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  499 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 599

    $default  reduce using rule 329 (block_or_lambda)


State 467

  829 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  839 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 600
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 601
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 602
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    expr_map_tuple_list     go to state 603
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 468

  403 expr: string_builder .

    $default  reduce using rule 403 (expr)


State 469

  402 expr: expr_reader .

    $default  reduce using rule 402 (expr)


State 470

  479 expr: expr_call_pipe .

    $default  reduce using rule 479 (expr)


State 471

  369 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  370                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  392 expr_call: name_in_namespace . '(' ')'
  393          | name_in_namespace . '(' "uninitialized" ')'
  394          | name_in_namespace . '(' make_struct_single ')'
  395          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  396          | name_in_namespace . '(' expr_list ')'
  400 expr: name_in_namespace .

    '('  shift, and go to state 604

    $default  reduce using rule 400 (expr)


State 472

  472 expr: expr_new .

    $default  reduce using rule 472 (expr)


State 473

  471 expr: expr_cast .

    $default  reduce using rule 471 (expr)


State 474

  470 expr: expr_type_decl .

    $default  reduce using rule 470 (expr)


State 475

  469 expr: expr_type_info .

    $default  reduce using rule 469 (expr)


State 476

  340 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 605

    $default  reduce using rule 134 (optional_annotation_list)

    optional_annotation_list  go to state 606


State 477

  475 expr: expr_full_block .

    $default  reduce using rule 475 (expr)


State 478

  401 expr: expr_numeric_const .

    $default  reduce using rule 401 (expr)


State 479

  474 expr: expr_named_call .

    $default  reduce using rule 474 (expr)


State 480

  473 expr: expr_method_call .

    $default  reduce using rule 473 (expr)


State 481

  446 expr: func_addr_expr .

    $default  reduce using rule 446 (expr)


State 482

  407 expr: expr_field .

    $default  reduce using rule 407 (expr)


State 483

  242 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  447 expr: expr_call .

    '$'  shift, and go to state 465
    '@'  shift, and go to state 607
    '{'  shift, and go to state 608

    $default  reduce using rule 447 (expr)

    block_or_lambda                go to state 609
    expr_full_block_assumed_piped  go to state 610


State 484

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  694 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 646


State 485

  451 expr: expr_generator .

    $default  reduce using rule 451 (expr)


State 486

  408 expr: expr_mtag .

    $default  reduce using rule 408 (expr)


State 487

  397 expr_call: basic_type_declaration . '(' ')'
  398          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 647


State 488

  404 expr: make_decl .

    $default  reduce using rule 404 (expr)


State 489

  768 make_decl: make_struct_decl .

    $default  reduce using rule 768 (make_decl)


State 490

  772 make_decl: make_tuple_call .

    $default  reduce using rule 772 (make_decl)


State 491

  769 make_decl: make_dim_decl .

    $default  reduce using rule 769 (make_decl)


State 492

  770 make_decl: make_table_decl .

    $default  reduce using rule 770 (make_decl)


State 493

  771 make_decl: array_comprehension .

    $default  reduce using rule 771 (make_decl)


State 494

  722 type_declaration_no_options_no_dim: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 648


State 495

  712 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 649


State 496

  667 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 650


State 497

  676 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 651

    bitfield_bits  go to state 652


State 498

  726 type_declaration_no_options_no_dim: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 653


State 499

  729 type_declaration_no_options_no_dim: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 336

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 654


State 500

  733 type_declaration_no_options_no_dim: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 655


State 501

  736 type_declaration_no_options_no_dim: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 336

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 656


State 502

  740 type_declaration_no_options_no_dim: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 657


State 503

  743 type_declaration_no_options_no_dim: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 336

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 658


State 504

  746 type_declaration_no_options_no_dim: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 659
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 660
    tuple_type_list                     go to state 661
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 662


State 505

  749 type_declaration_no_options_no_dim: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 663

    variant_type       go to state 664
    variant_type_list  go to state 665


State 506

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  668 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 666


State 507

  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 696 ($@52)

    $@52  go to state 667


State 508

  695 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 265 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 668
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 669
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 509

  707 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 510

  708 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 511

  701 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 512

  703 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 703 (type_declaration_no_options_no_dim)


State 513

  698 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 670


State 514

  706 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 515

  682 dim_list: '[' ']' .

    $default  reduce using rule 682 (dim_list)


State 516

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  681 dim_list: '[' expr . ']'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ']'    shift, and go to state 671


State 517

  683 dim_list: dim_list '[' . expr ']'
  684         | dim_list '[' . ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    ']'                               shift, and go to state 672
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 673
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 518

  752 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 752 (type_declaration)


State 519

  751 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 751 (type_declaration)


State 520

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 . bitfield_alias_bits optional_commas $@88 '}'

    "name"  shift, and go to state 674

    $default  reduce using rule 671 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 675


State 521

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 . tuple_alias_type_list optional_semis $@80 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 659
    '$'          shift, and go to state 268

    $default  reduce using rule 529 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 676
    tuple_alias_type_list               go to state 677
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 662


State 522

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . variant_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 663

    $default  reduce using rule 535 (variant_alias_type_list)

    variant_type             go to state 678
    variant_alias_type_list  go to state 679


State 523

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@43 enum_list optional_commas $@44 '}'

    $default  reduce using rule 604 ($@43)

    $@43  go to state 680


State 524

  202 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 202 (function_name)


State 525

  192 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 192 (function_name)


State 526

  522 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 681
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 527

  294 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 294 (kwd_let_var_or_nothing)


State 528

  295 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 295 (kwd_let_var_or_nothing)


State 529

  521 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 682
    "name"  shift, and go to state 683

    variable_declaration         go to state 684
    variable_name_with_pos_list  go to state 685


State 530

  140 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 140 (optional_function_argument_list)


State 531

  524 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 398
    '@'   shift, and go to state 220

    $default  reduce using rule 500 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 400
    function_argument_declaration  go to state 686


State 532

  142 optional_function_type: ':' type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 142 (optional_function_type)


State 533

  241 expression_block: $@12 '{' . expressions $@13 '}' expression_block_finally

    $default  reduce using rule 262 (expressions)

    expressions  go to state 687


State 534

  608 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 688


State 535

  611 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 611 (structure_name)


State 536

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 689
    '{'  shift, and go to state 690

    optional_struct_variable_declaration_list  go to state 691


State 537

  551 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 692


State 538

  550 let_variable_name_with_pos_list: "name" .
  552                                | "name" . "aka" "name"

    "aka"  shift, and go to state 693

    $default  reduce using rule 550 (let_variable_name_with_pos_list)


State 539

  553 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  554                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  560 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  561                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  562                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 694
    ':'  shift, and go to state 695
    '&'  shift, and go to state 414

    $default  reduce using rule 548 (optional_ref)

    optional_ref  go to state 696


State 540

  574 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 574 (global_variable_declaration_list)


State 541

  119 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 119 (metadata_argument_list)


State 542

  556 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 556 (global_let_variable_name_with_pos_list)


State 543

  563 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  564                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"                   shift, and go to state 544
    ":="                   shift, and go to state 545
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 546
    ';'                    shift, and go to state 16

    SEMICOLON              go to state 697
    copy_or_move_or_clone  go to state 698


State 544

  546 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 546 (copy_or_move_or_clone)


State 545

  547 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 547 (copy_or_move_or_clone)


State 546

  545 copy_or_move_or_clone: '=' .

    $default  reduce using rule 545 (copy_or_move_or_clone)


State 547

  565 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 699
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 548

  693 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration . '>' $@51
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 700


State 549

  716 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration . '>' $@56
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 701


State 550

  719 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 702


State 551

  679 table_type_pair: type_declaration .
  680                | type_declaration . c_or_s type_declaration
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 703
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 704
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 679 (table_type_pair)

    COMMA      go to state 705
    SEMICOLON  go to state 706
    c_or_s     go to state 707


State 552

  793 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 791 ($@89)

    $@89  go to state 708


State 553

  796 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 794 ($@91)

    $@91  go to state 709


State 554

  278 new_type_declaration: '<' . $@14 type_declaration '>' $@15

    $default  reduce using rule 276 ($@14)

    $@14  go to state 710


State 555

  280 expr_new: "new" new_type_declaration .
  281         | "new" new_type_declaration . '(' use_initializer ')'
  282         | "new" new_type_declaration . '(' expr_list ')'
  283         | "new" new_type_declaration . '(' make_struct_single ')'
  284         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 711

    $default  reduce using rule 280 (expr_new)


State 556

  279 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 279 (new_type_declaration)


State 557

  285 expr_new: "new" make_decl .

    $default  reduce using rule 285 (expr_new)


State 558

  320 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  321               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 712
    '('  shift, and go to state 713


State 559

  319 expr_type_decl: "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 317 ($@22)

    $@22  go to state 714


State 560

  812 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 715


State 561

  815 make_dim_decl: "array" "tuple" . '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 716


State 562

  818 make_dim_decl: "array" "variant" . '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 717


State 563

  822 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 820 ($@105)

    $@105  go to state 718


State 564

  819 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 719
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 565

  831 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  832                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 720
    type_declaration_no_options_no_dim  go to state 275


State 566

  830 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 601
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 602
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    expr_map_tuple_list     go to state 721
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 567

  449 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 722
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 568

  310 expr_cast: "cast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 308 ($@16)

    $@16  go to state 723


State 569

  313 expr_cast: "upcast" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 311 ($@18)

    $@18  go to state 724


State 570

  450 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 725
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 571

  316 expr_cast: "reinterpret" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 314 ($@20)

    $@20  go to state 726


State 572

  480 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 727
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 573

  826 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 824 ($@107)

    $@107  go to state 728


State 574

  823 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 729
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 575

  802 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 800 ($@95)

    $@95  go to state 730


State 576

  808 make_tuple_call: "tuple" '<' . $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 806 ($@97)

    $@97  go to state 731


State 577

  805 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 732
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 578

  799 make_struct_decl: "variant" '<' . $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    $default  reduce using rule 797 ($@93)

    $@93  go to state 733


State 579

  481 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  482               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  483               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 734
    type_declaration_no_options_no_dim  go to state 275


State 580

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  435     | "++" expr .
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 435 (expr)


State 581

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  436     | "--" expr .
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 436 (expr)


State 582

  484 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 735
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 583

  485 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 736
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 584

  486 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 737
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 585

  487 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 738
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 586

  488 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 739
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 587

  490 expr_mtag: "$c" '(' . expr ')' '(' ')'
  491          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 740
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 588

   34 string_builder_body: string_builder_body . character_sequence
   35                    | string_builder_body . "{" expr "}"
   36 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 741
    "{"                   shift, and go to state 742

    character_sequence  go to state 743


State 589

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  412 expr: '-' expr .
  413     | expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 412 (expr)


State 590

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  411 expr: '+' expr .
  413     | expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 411 (expr)


State 591

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  448     | '*' expr .
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 448 (expr)


State 592

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  410 expr: '~' expr .
  413     | expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 410 (expr)


State 593

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  409 expr: '!' expr .
  413     | expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 409 (expr)


State 594

  837 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 744


State 595

  838 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 745


State 596

  324 expr_list: expr_list . ',' expr
  809 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 746

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 747


State 597

  323 expr_list: expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 323 (expr_list)


State 598

  324 expr_list: expr_list . ',' expr
  439 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 746

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 748


State 599

  330 block_or_lambda: '@' '@' .
  375 func_addr_expr: '@' '@' . func_addr_name
  378               | '@' '@' . '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  381               | '@' '@' . '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  499 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 749
    "$c"    shift, and go to state 750
    "name"  shift, and go to state 59
    '<'     shift, and go to state 751

    $default  reduce using rule 330 (block_or_lambda)

    name_in_namespace  go to state 752
    func_addr_name     go to state 753


State 600

  839 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 754


State 601

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  803 make_map_tuple: expr . "=>" expr
  804               | expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "=>"   shift, and go to state 755
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 804 (make_map_tuple)


State 602

  827 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 827 (expr_map_tuple_list)


State 603

  828 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  829 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 756

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 757


State 604

  369 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  370                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  392 expr_call: name_in_namespace '(' . ')'
  393          | name_in_namespace '(' . "uninitialized" ')'
  394          | name_in_namespace '(' . make_struct_single ')'
  395          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  396          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "uninitialized"                   shift, and go to state 758
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 759
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 760
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 761
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 762
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 763
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 764
    make_struct_single      go to state 765
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 605

  135 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 766
    name_in_namespace             go to state 70


State 606

  340 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 767

    $default  reduce using rule 338 (optional_capture_list)

    optional_capture_list  go to state 768


State 607

  329 block_or_lambda: '@' .
  330                | '@' . '@'

    '@'  shift, and go to state 769

    $default  reduce using rule 329 (block_or_lambda)


State 608

  342 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 262 (expressions)

    expressions  go to state 770


State 609

  341 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 605

    $default  reduce using rule 134 (optional_annotation_list)

    optional_annotation_list  go to state 771


State 610

  242 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 242 (expr_call_pipe)


State 611

  456 expr: expr "is" . "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr "is" . basic_type_declaration
  458     | expr "is" . "name"
  498 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 772
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 773
    "name"      shift, and go to state 774

    basic_type_declaration  go to state 775


State 612

  459 expr: expr "as" . "name"
  462     | expr "as" . "type" '<' $@32 type_declaration '>' $@33
  463     | expr "as" . basic_type_declaration
  496 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 776
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 777
    "name"      shift, and go to state 778

    basic_type_declaration  go to state 779


State 613

  413 expr: expr "<<" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 780
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 614

  414 expr: expr ">>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 781
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 615

  437 expr: expr "++" .

    $default  reduce using rule 437 (expr)


State 616

  438 expr: expr "--" .

    $default  reduce using rule 438 (expr)


State 617

  426 expr: expr "<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 782
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 618

  427 expr: expr ">=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 783
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 619

  424 expr: expr "==" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 784
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 620

  425 expr: expr "!=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 785
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 621

  371 expr_method_call: expr "->" . "name" '(' ')'
  372                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 786


State 622

  452 expr: expr "??" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 787
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 623

  444 expr: expr "?." . "name"
  493 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 788
    "name"  shift, and go to state 789


State 624

  442 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 790
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 625

  476 expr: expr "<|" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 791
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 626

  477 expr: expr "|>" . expr
  478     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 792
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 793
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 627

  415 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 794
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 628

  416 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 795
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 629

  431 expr: expr "&&" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 796
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 630

  432 expr: expr "||" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 797
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 631

  433 expr: expr "^^" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 798
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 632

  434 expr: expr ".." . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 799
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 633

  453 expr: expr '?' . expr ':' expr
  464     | expr '?' . "as" "name"
  467     | expr '?' . "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr '?' . "as" basic_type_declaration
  497 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "as"                              shift, and go to state 800
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 801
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 634

  429 expr: expr '|' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 802
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 635

  430 expr: expr '^' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 803
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 636

  428 expr: expr '&' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 804
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 637

  422 expr: expr '<' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 805
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 638

  423 expr: expr '>' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 806
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 639

  418 expr: expr '-' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 807
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 640

  417 expr: expr '+' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 808
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 641

  419 expr: expr '*' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 809
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 642

  420 expr: expr '/' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 810
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 643

  421 expr: expr '%' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 811
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 644

  382 expr_field: expr '.' . "name"
  383           | expr '.' . '.' "name"
  384           | expr '.' . "name" '(' ')'
  385           | expr '.' . "name" '(' expr_list ')'
  386           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  387           | expr '.' . basic_type_declaration '(' ')'
  388           | expr '.' . basic_type_declaration '(' expr_list ')'
  391           | expr '.' . $@28 error $@29
  441 expr: expr '.' . '[' expr ']'
  443     | expr '.' . "?[" expr ']'
  445     | expr '.' . "?." "name"
  492 expr_mtag: expr '.' . "$f" '(' expr ')'
  494          | expr '.' . '.' "$f" '(' expr ')'
  495          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 812
    "?["        shift, and go to state 813
    "$f"        shift, and go to state 814
    "name"      shift, and go to state 815
    '.'         shift, and go to state 816
    '['         shift, and go to state 817

    $default  reduce using rule 389 ($@28)

    $@28                    go to state 818
    basic_type_declaration  go to state 819


State 645

  440 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 820
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 646

  694 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 647

  397 expr_call: basic_type_declaration '(' . ')'
  398          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 821
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 822
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 648

  722 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration . '>' $@60
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 823


State 649

  712 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 824


State 650

  667 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 667 (auto_type_declaration)


State 651

  669 bitfield_bits: "name" .

    $default  reduce using rule 669 (bitfield_bits)


State 652

  670 bitfield_bits: bitfield_bits . ';' "name"
  676 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    '>'  shift, and go to state 825
    ';'  shift, and go to state 826


State 653

  726 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration . '>' $@62
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 827


State 654

  729 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 403

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 828


State 655

  733 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration . '>' $@66
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 829


State 656

  736 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 403

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 830


State 657

  740 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration . '>' $@70
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 831


State 658

  743 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 403

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 832


State 659

  271 name_in_namespace: "name" .
  272                  | "name" . "::" "name"
  526 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 833

    $default  reduce using rule 271 (name_in_namespace)


State 660

  527 tuple_type_list: tuple_type .

    $default  reduce using rule 527 (tuple_type_list)


State 661

  528 tuple_type_list: tuple_type_list . c_or_s tuple_type
  746 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "new line, comma"      shift, and go to state 703
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 704
    '>'                    shift, and go to state 834
    ';'                    shift, and go to state 16

    COMMA      go to state 705
    SEMICOLON  go to state 706
    c_or_s     go to state 835


State 662

  525 tuple_type: type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 525 (tuple_type)


State 663

  532 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 836


State 664

  533 variant_type_list: variant_type .

    $default  reduce using rule 533 (variant_type_list)


State 665

  534 variant_type_list: variant_type_list . c_or_s variant_type
  749 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list . '>' $@76

    "new line, comma"      shift, and go to state 703
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 704
    '>'                    shift, and go to state 837
    ';'                    shift, and go to state 16

    COMMA      go to state 705
    SEMICOLON  go to state 706
    c_or_s     go to state 838


State 666

  668 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 668 (auto_type_declaration)


State 667

  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 839
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 840


State 668

  695 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 841


State 669

  266 optional_expr_list: expr_list . optional_comma
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 746

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 842


State 670

  698 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 698 (type_declaration_no_options_no_dim)


State 671

  681 dim_list: '[' expr ']' .

    $default  reduce using rule 681 (dim_list)


State 672

  684 dim_list: dim_list '[' ']' .

    $default  reduce using rule 684 (dim_list)


State 673

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  683 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ']'    shift, and go to state 843


State 674

  672 bitfield_alias_bits: "name" .

    $default  reduce using rule 672 (bitfield_alias_bits)


State 675

  673 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits . optional_commas $@88 '}'

    "new line, comma"  shift, and go to state 703
    ','                shift, and go to state 704

    $default  reduce using rule 597 (optional_commas)

    COMMA            go to state 844
    commas           go to state 845
    optional_commas  go to state 846


State 676

  530 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 530 (tuple_alias_type_list)


State 677

  531 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list . optional_semis $@80 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 847
    semis           go to state 848
    optional_semis  go to state 849


State 678

  536 variant_alias_type_list: variant_type .

    $default  reduce using rule 536 (variant_alias_type_list)


State 679

  537 variant_alias_type_list: variant_alias_type_list . semis variant_type
  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 847
    semis           go to state 850
    optional_semis  go to state 851


State 680

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 . enum_list optional_commas $@44 '}'

    "name"  shift, and go to state 852

    $default  reduce using rule 582 (enum_list)

    enum_expression  go to state 853
    enum_list        go to state 854


State 681

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  522 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 855


State 682

  626 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 856


State 683

  625 variable_name_with_pos_list: "name" .
  627                            | "name" . "aka" "name"

    "aka"  shift, and go to state 857

    $default  reduce using rule 625 (variable_name_with_pos_list)


State 684

  521 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 521 (function_argument_declaration)


State 685

  540 variable_declaration: variable_name_with_pos_list .
  541                     | variable_name_with_pos_list . '&'
  542                     | variable_name_with_pos_list . ':' type_declaration
  543                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  544                     | variable_name_with_pos_list . copy_or_move expr
  628 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  629                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 858
    ','   shift, and go to state 859
    '='   shift, and go to state 860
    ':'   shift, and go to state 861
    '&'   shift, and go to state 862

    $default  reduce using rule 540 (variable_declaration)

    copy_or_move  go to state 863


State 686

  524 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 524 (function_argument_list)


State 687

  241 expression_block: $@12 '{' expressions . $@13 '}' expression_block_finally
  263 expressions: expressions . expression_any
  264            | expressions . error

    error                             shift, and go to state 864
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 865
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 866
    "try"                             shift, and go to state 867
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 868
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 869
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 870
    "pass"                            shift, and go to state 871
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 872
    "goto"                            shift, and go to state 873
    "unsafe"                          shift, and go to state 874
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 875
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 240 ($@13)

    SEMICOLON                         go to state 876
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 877
    expression_goto                   go to state 878
    expression_if_one_liner           go to state 879
    expression_if_then_else           go to state 880
    $@5                               go to state 881
    expression_if_then_else_oneliner  go to state 882
    expression_for_loop               go to state 883
    $@6                               go to state 884
    expression_unsafe                 go to state 885
    expression_while_loop             go to state 886
    $@7                               go to state 887
    expression_with                   go to state 888
    $@8                               go to state 889
    expression_with_alias             go to state 890
    $@13                              go to state 891
    expr_call_pipe                    go to state 470
    expression_any                    go to state 892
    name_in_namespace                 go to state 471
    expression_delete                 go to state 893
    expr_new                          go to state 472
    expression_break                  go to state 894
    expression_continue               go to state 895
    expression_return                 go to state 896
    expression_yield                  go to state 897
    expression_try_catch              go to state 898
    kwd_let                           go to state 899
    expression_let                    go to state 900
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 901
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 902
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 688

  608 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 608 (optional_structure_parent)


State 689

  619 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 619 (optional_struct_variable_declaration_list)


State 690

  620 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 513 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 903


State 691

  624 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 624 (structure_declaration)


State 692

  551 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 904
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 693

  552 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 905


State 694

  553 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  554                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 906


State 695

  560 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  561                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 907
    type_declaration_no_options_no_dim  go to state 275


State 696

  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 908


State 697

  563 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 563 (global_let_variable_declaration)


State 698

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 909
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 699

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  565 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 611
    "as"                   shift, and go to state 612
    "<<"                   shift, and go to state 613
    ">>"                   shift, and go to state 614
    "++"                   shift, and go to state 615
    "--"                   shift, and go to state 616
    "<="                   shift, and go to state 617
    ">="                   shift, and go to state 618
    "=="                   shift, and go to state 619
    "!="                   shift, and go to state 620
    "->"                   shift, and go to state 621
    "??"                   shift, and go to state 622
    "?."                   shift, and go to state 623
    "?["                   shift, and go to state 624
    "<|"                   shift, and go to state 625
    "|>"                   shift, and go to state 626
    "<<<"                  shift, and go to state 627
    ">>>"                  shift, and go to state 628
    "&&"                   shift, and go to state 629
    "||"                   shift, and go to state 630
    "^^"                   shift, and go to state 631
    ".."                   shift, and go to state 632
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 633
    '|'                    shift, and go to state 634
    '^'                    shift, and go to state 635
    '&'                    shift, and go to state 636
    '<'                    shift, and go to state 637
    '>'                    shift, and go to state 638
    '-'                    shift, and go to state 639
    '+'                    shift, and go to state 640
    '*'                    shift, and go to state 641
    '/'                    shift, and go to state 642
    '%'                    shift, and go to state 643
    '.'                    shift, and go to state 644
    '['                    shift, and go to state 645
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 910


State 700

  693 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 692 ($@51)

    $@51  go to state 911


State 701

  716 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 715 ($@56)

    $@56  go to state 912


State 702

  719 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 718 ($@58)

    $@58  go to state 913


State 703

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 704

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 705

  677 c_or_s: COMMA .

    $default  reduce using rule 677 (c_or_s)


State 706

  678 c_or_s: SEMICOLON .

    $default  reduce using rule 678 (c_or_s)


State 707

  680 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 914


State 708

  793 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 915
    type_declaration_no_options_no_dim  go to state 275


State 709

  796 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 916
    type_declaration_no_options_no_dim  go to state 275


State 710

  278 new_type_declaration: '<' $@14 . type_declaration '>' $@15

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 917


State 711

  281 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  282         | "new" new_type_declaration '(' . expr_list ')'
  283         | "new" new_type_declaration '(' . make_struct_single ')'
  284         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "uninitialized"                   shift, and go to state 918
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 759
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 760
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 789 (use_initializer)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 919
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 764
    make_struct_single      go to state 920
    use_initializer         go to state 921
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 712

  321 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 922


State 713

  320 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 923
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 714

  319 expr_type_decl: "type" '<' $@22 . type_declaration '>' $@23

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 924


State 715

  812 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 810 ($@99)

    $@99  go to state 925


State 716

  815 make_dim_decl: "array" "tuple" '<' . $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 813 ($@101)

    $@101  go to state 926


State 717

  818 make_dim_decl: "array" "variant" '<' . $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 816 ($@103)

    $@103  go to state 927


State 718

  822 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 928
    type_declaration_no_options_no_dim  go to state 275


State 719

  324 expr_list: expr_list . ',' expr
  819 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 746

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 929


State 720

  831 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  832                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "new line, comma"      shift, and go to state 703
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 704
    '>'                    shift, and go to state 930
    ';'                    shift, and go to state 16

    COMMA      go to state 705
    SEMICOLON  go to state 706
    c_or_s     go to state 931


State 721

  828 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  830 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 756

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 932


State 722

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  449     | "deref" '(' expr . ')'
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 933


State 723

  310 expr_cast: "cast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 934
    type_declaration_no_options_no_dim  go to state 275


State 724

  313 expr_cast: "upcast" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 935
    type_declaration_no_options_no_dim  go to state 275


State 725

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  450     | "addr" '(' expr . ')'
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 936


State 726

  316 expr_cast: "reinterpret" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 937
    type_declaration_no_options_no_dim  go to state 275


State 727

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  480     | "unsafe" '(' expr . ')'
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 938


State 728

  826 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 939
    type_declaration_no_options_no_dim  go to state 275


State 729

  324 expr_list: expr_list . ',' expr
  823 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 746

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 940


State 730

  802 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 941
    type_declaration_no_options_no_dim  go to state 275


State 731

  808 make_tuple_call: "tuple" '<' $@97 . type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 942
    type_declaration_no_options_no_dim  go to state 275


State 732

  324 expr_list: expr_list . ',' expr
  805 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 746

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 943


State 733

  799 make_struct_decl: "variant" '<' $@93 . type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 944
    type_declaration_no_options_no_dim  go to state 275


State 734

  481 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  482               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  483               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block

    '>'  shift, and go to state 945


State 735

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  484 expr_mtag: "$$" '(' expr . ')'
  492          | expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 946


State 736

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  485 expr_mtag: "$i" '(' expr . ')'
  492          | expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 947


State 737

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  486 expr_mtag: "$v" '(' expr . ')'
  492          | expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 948


State 738

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  487 expr_mtag: "$b" '(' expr . ')'
  492          | expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 949


State 739

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  488 expr_mtag: "$a" '(' expr . ')'
  492          | expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 950


State 740

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  490 expr_mtag: "$c" '(' expr . ')' '(' ')'
  491          | "$c" '(' expr . ')' '(' expr_list ')'
  492          | expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 951


State 741

   36 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 36 (string_builder)


State 742

   35 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 952
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 743

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   34 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 34 (string_builder_body)


State 744

  837 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 682
    "name"  shift, and go to state 683

    variable_name_with_pos_list  go to state 953


State 745

  838 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 954


State 746

  324 expr_list: expr_list ',' . expr
  836 optional_comma: ',' .

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 836 (optional_comma)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 955
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 747

  809 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 956


State 748

  439 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 957


State 749

  374 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 958


State 750

  499 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 959


State 751

  378 func_addr_expr: '@' '@' '<' . $@24 type_declaration_no_options '>' $@25 func_addr_name
  381               | '@' '@' '<' . $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    ':'       reduce using rule 379 ($@26)
    '>'       reduce using rule 379 ($@26)
    '('       reduce using rule 379 ($@26)
    $default  reduce using rule 376 ($@24)

    $@24  go to state 960
    $@26  go to state 961


State 752

  373 func_addr_name: name_in_namespace .

    $default  reduce using rule 373 (func_addr_name)


State 753

  375 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 375 (func_addr_expr)


State 754

  839 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 682
    "name"  shift, and go to state 683

    variable_name_with_pos_list  go to state 962


State 755

  803 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 963
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 756

  828 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  836 optional_comma: ',' .

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 836 (optional_comma)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 601
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 964
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 757

  829 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 965


State 758

  393 expr_call: name_in_namespace '(' "uninitialized" . ')'
  395          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966
    ')'     shift, and go to state 967

    make_struct_fields  go to state 764
    make_struct_single  go to state 968


State 759

  777 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  778                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 969


State 760

  271 name_in_namespace: "name" .
  272                  | "name" . "::" "name"
  773 make_struct_fields: "name" . copy_or_move expr
  774                   | "name" . ":=" expr

    "<-"  shift, and go to state 858
    ":="  shift, and go to state 970
    "::"  shift, and go to state 96
    '='   shift, and go to state 860

    $default  reduce using rule 271 (name_in_namespace)

    copy_or_move  go to state 971


State 761

  369 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  809 make_dim_decl: '[' . expr_list optional_comma ']'
  837 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  838                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 759
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 760
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 596
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 972
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 762

  392 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 392 (expr_call)


State 763

  324 expr_list: expr_list . ',' expr
  370 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  396 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 973
    ')'  shift, and go to state 974


State 764

  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  782 make_struct_single: make_struct_fields .

    ','  shift, and go to state 975

    $default  reduce using rule 782 (make_struct_single)


State 765

  394 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 976


State 766

  133 annotation_list: annotation_list . ',' annotation_declaration
  135 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 977


State 767

  339 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 978


State 768

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 336

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 979


State 769

  330 block_or_lambda: '@' '@' .

    $default  reduce using rule 330 (block_or_lambda)


State 770

  263 expressions: expressions . expression_any
  264            | expressions . error
  342 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 864
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 865
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 866
    "try"                             shift, and go to state 867
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 868
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 869
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 870
    "pass"                            shift, and go to state 871
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 872
    "goto"                            shift, and go to state 873
    "unsafe"                          shift, and go to state 874
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 875
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467
    '}'                               shift, and go to state 980

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)

    SEMICOLON                         go to state 876
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 877
    expression_goto                   go to state 878
    expression_if_one_liner           go to state 879
    expression_if_then_else           go to state 880
    $@5                               go to state 881
    expression_if_then_else_oneliner  go to state 882
    expression_for_loop               go to state 883
    $@6                               go to state 884
    expression_unsafe                 go to state 885
    expression_while_loop             go to state 886
    $@7                               go to state 887
    expression_with                   go to state 888
    $@8                               go to state 889
    expression_with_alias             go to state 890
    expr_call_pipe                    go to state 470
    expression_any                    go to state 892
    name_in_namespace                 go to state 471
    expression_delete                 go to state 893
    expr_new                          go to state 472
    expression_break                  go to state 894
    expression_continue               go to state 895
    expression_return                 go to state 896
    expression_yield                  go to state 897
    expression_try_catch              go to state 898
    kwd_let                           go to state 899
    expression_let                    go to state 900
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 901
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 902
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 771

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 767

    $default  reduce using rule 338 (optional_capture_list)

    optional_capture_list  go to state 981


State 772

  456 expr: expr "is" "type" . '<' $@30 type_declaration_no_options '>' $@31

    '<'  shift, and go to state 982


State 773

  498 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 983


State 774

  458 expr: expr "is" "name" .

    $default  reduce using rule 458 (expr)


State 775

  457 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 457 (expr)


State 776

  462 expr: expr "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 984


State 777

  496 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 985


State 778

  459 expr: expr "as" "name" .

    $default  reduce using rule 459 (expr)


State 779

  463 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 463 (expr)


State 780

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  413     | expr "<<" expr .
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '-'   shift, and go to state 639
    '+'   shift, and go to state 640
    '*'   shift, and go to state 641
    '/'   shift, and go to state 642
    '%'   shift, and go to state 643
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 413 (expr)


State 781

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  414     | expr ">>" expr .
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '-'   shift, and go to state 639
    '+'   shift, and go to state 640
    '*'   shift, and go to state 641
    '/'   shift, and go to state 642
    '%'   shift, and go to state 643
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 414 (expr)


State 782

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  426     | expr "<=" expr .
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 426 (expr)


State 783

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  427     | expr ">=" expr .
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 427 (expr)


State 784

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  424     | expr "==" expr .
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 424 (expr)


State 785

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  425     | expr "!=" expr .
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 425 (expr)


State 786

  371 expr_method_call: expr "->" "name" . '(' ')'
  372                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 986


State 787

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  452     | expr "??" expr .
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 452 (expr)


State 788

  493 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 987


State 789

  444 expr: expr "?." "name" .

    $default  reduce using rule 444 (expr)


State 790

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  442     | expr "?[" expr . ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ']'    shift, and go to state 988


State 791

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  476     | expr "<|" expr .
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 476 (expr)


State 792

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  477     | expr "|>" expr .
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 621
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 477 (expr)


State 793

  397 expr_call: basic_type_declaration . '(' ')'
  398          | basic_type_declaration . '(' expr_list ')'
  478 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 647

    $default  reduce using rule 478 (expr)


State 794

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  415     | expr "<<<" expr .
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '-'   shift, and go to state 639
    '+'   shift, and go to state 640
    '*'   shift, and go to state 641
    '/'   shift, and go to state 642
    '%'   shift, and go to state 643
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 415 (expr)


State 795

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  416     | expr ">>>" expr .
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '-'   shift, and go to state 639
    '+'   shift, and go to state 640
    '*'   shift, and go to state 641
    '/'   shift, and go to state 642
    '%'   shift, and go to state 643
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 416 (expr)


State 796

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  431     | expr "&&" expr .
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 431 (expr)


State 797

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  432     | expr "||" expr .
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "^^"   shift, and go to state 631
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 432 (expr)


State 798

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  433     | expr "^^" expr .
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 433 (expr)


State 799

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  434     | expr ".." expr .
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    ".."  error (nonassociative)

    $default  reduce using rule 434 (expr)


State 800

  464 expr: expr '?' "as" . "name"
  467     | expr '?' "as" . "type" '<' $@34 type_declaration '>' $@35
  468     | expr '?' "as" . basic_type_declaration
  497 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 989
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 990
    "name"      shift, and go to state 991

    basic_type_declaration  go to state 992


State 801

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  453     | expr '?' expr . ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    ':'    shift, and go to state 993
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645


State 802

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  429     | expr '|' expr .
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 429 (expr)


State 803

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  430     | expr '^' expr .
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 430 (expr)


State 804

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  428     | expr '&' expr .
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 428 (expr)


State 805

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  422     | expr '<' expr .
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 422 (expr)


State 806

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  423     | expr '>' expr .
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 423 (expr)


State 807

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  418     | expr '-' expr .
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '*'   shift, and go to state 641
    '/'   shift, and go to state 642
    '%'   shift, and go to state 643
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 418 (expr)


State 808

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  417     | expr '+' expr .
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '*'   shift, and go to state 641
    '/'   shift, and go to state 642
    '%'   shift, and go to state 643
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 417 (expr)


State 809

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  419     | expr '*' expr .
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 419 (expr)


State 810

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  420     | expr '/' expr .
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 420 (expr)


State 811

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  421     | expr '%' expr .
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 611
    "as"  shift, and go to state 612
    "++"  shift, and go to state 615
    "--"  shift, and go to state 616
    "->"  shift, and go to state 621
    "??"  shift, and go to state 622
    "?."  shift, and go to state 623
    "?["  shift, and go to state 624
    "<|"  shift, and go to state 625
    "|>"  shift, and go to state 626
    '.'   shift, and go to state 644
    '['   shift, and go to state 645

    $default  reduce using rule 421 (expr)


State 812

  445 expr: expr '.' "?." . "name"
  495 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 994
    "name"  shift, and go to state 995


State 813

  443 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 996
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 814

  492 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 997


State 815

  382 expr_field: expr '.' "name" .
  384           | expr '.' "name" . '(' ')'
  385           | expr '.' "name" . '(' expr_list ')'
  386           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 998

    $default  reduce using rule 382 (expr_field)


State 816

  383 expr_field: expr '.' '.' . "name"
  494 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 999
    "name"  shift, and go to state 1000


State 817

  441 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1001
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 818

  391 expr_field: expr '.' $@28 . error $@29

    error  shift, and go to state 1002


State 819

  387 expr_field: expr '.' basic_type_declaration . '(' ')'
  388           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1003


State 820

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  440     | expr '[' expr . ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ']'    shift, and go to state 1004


State 821

  397 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 397 (expr_call)


State 822

  324 expr_list: expr_list . ',' expr
  398 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1006


State 823

  722 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 721 ($@60)

    $@60  go to state 1007


State 824

  712 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 711 ($@54)

    $@54  go to state 1008


State 825

  676 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 675 ($@49)

    $@49  go to state 1009


State 826

  670 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1010


State 827

  726 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 725 ($@62)

    $@62  go to state 1011


State 828

  729 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1012


State 829

  733 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 732 ($@66)

    $@66  go to state 1013


State 830

  736 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1014


State 831

  740 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 739 ($@70)

    $@70  go to state 1015


State 832

  743 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1016


State 833

  526 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1017


State 834

  746 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 745 ($@74)

    $@74  go to state 1018


State 835

  528 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 659
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1019
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 662


State 836

  532 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1020


State 837

  749 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 748 ($@76)

    $@76  go to state 1021


State 838

  534 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 663

    variant_type  go to state 1022


State 839

  270 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 703
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 704
    '>'                    shift, and go to state 1023
    ';'                    shift, and go to state 16

    COMMA      go to state 705
    SEMICOLON  go to state 706
    c_or_s     go to state 1024


State 840

  269 type_declaration_no_options_list: type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 269 (type_declaration_no_options_list)


State 841

  695 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 842

  266 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 266 (optional_expr_list)


State 843

  683 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 683 (dim_list)


State 844

  580 commas: COMMA .

    $default  reduce using rule 580 (commas)


State 845

  581 commas: commas . COMMA
  598 optional_commas: commas .
  673 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1025
    "new line, comma"  shift, and go to state 703
    ','                shift, and go to state 704

    $default  reduce using rule 598 (optional_commas)

    COMMA  go to state 1026


State 846

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas . $@88 '}'

    $default  reduce using rule 766 ($@88)

    $@88  go to state 1027


State 847

   77 semis: SEMICOLON .

    $default  reduce using rule 77 (semis)


State 848

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  531 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 58
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 659
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON                           go to state 1028
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1029
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 662


State 849

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis . $@80 '}'

    $default  reduce using rule 756 ($@80)

    $@80  go to state 1030


State 850

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  537 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 663
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON     go to state 1028
    variant_type  go to state 1031


State 851

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 761 ($@84)

    $@84  go to state 1032


State 852

  578 enum_expression: "name" .
  579                | "name" . '=' expr

    '='  shift, and go to state 1033

    $default  reduce using rule 578 (enum_expression)


State 853

  583 enum_list: enum_expression .

    $default  reduce using rule 583 (enum_list)


State 854

  584 enum_list: enum_list . commas enum_expression
  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list . optional_commas $@44 '}'

    "new line, comma"  shift, and go to state 703
    ','                shift, and go to state 704

    $default  reduce using rule 597 (optional_commas)

    COMMA            go to state 844
    commas           go to state 1034
    optional_commas  go to state 1035


State 855

  522 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 522 (function_argument_declaration)


State 856

  626 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1036
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 857

  627 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1037


State 858

  539 copy_or_move: "<-" .

    $default  reduce using rule 539 (copy_or_move)


State 859

  628 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  629                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1038


State 860

  538 copy_or_move: '=' .

    $default  reduce using rule 538 (copy_or_move)


State 861

  542 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  543                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1039


State 862

  541 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 541 (variable_declaration)


State 863

  544 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1040
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 864

  264 expressions: expressions error .

    $default  reduce using rule 264 (expressions)


State 865

  288 expression_return: "return" .
  289                  | "return" . expr
  290                  | "return" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1041
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 288 (expression_return)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1042
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 866

  286 expression_break: "break" .

    $default  reduce using rule 286 (expression_break)


State 867

  293 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1043
    $@12              go to state 406


State 868

  274 expression_delete: "delete" . expr
  275                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "explicit"                        shift, and go to state 1044
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1045
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 869

   96 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1046


State 870

  287 expression_continue: "continue" .

    $default  reduce using rule 287 (expression_continue)


State 871

  261 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1047


State 872

   56 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1048


State 873

   57 expression_goto: "goto" . "label" "integer constant"
   58                | "goto" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 1049
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1050
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 874

   91 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  480 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 572

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1051


State 875

  291 expression_yield: "yield" . expr
  292                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1052
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1053
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 876

  243 expression_any: SEMICOLON .

    $default  reduce using rule 243 (expression_any)


State 877

  259 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1054


State 878

  260 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1055


State 879

   88 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1056


State 880

  256 expression_any: expression_if_then_else .

    $default  reduce using rule 256 (expression_any)


State 881

   87 expression_if_then_else: $@5 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1057
    "static_if"  shift, and go to state 1058

    if_or_static_if  go to state 1059


State 882

  257 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 257 (expression_any)


State 883

  251 expression_any: expression_for_loop .

    $default  reduce using rule 251 (expression_any)


State 884

   90 expression_for_loop: $@6 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1060


State 885

  248 expression_any: expression_unsafe .

    $default  reduce using rule 248 (expression_any)


State 886

  247 expression_any: expression_while_loop .

    $default  reduce using rule 247 (expression_any)


State 887

   93 expression_while_loop: $@7 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1061


State 888

  249 expression_any: expression_with .

    $default  reduce using rule 249 (expression_any)


State 889

   95 expression_with: $@8 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1062


State 890

  250 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1063


State 891

  241 expression_block: $@12 '{' expressions $@13 . '}' expression_block_finally

    '}'  shift, and go to state 1064


State 892

  263 expressions: expressions expression_any .

    $default  reduce using rule 263 (expressions)


State 893

  245 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1065


State 894

   75 expression_if_one_liner: expression_break .
  252 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 75 (expression_if_one_liner)

    SEMICOLON  go to state 1066


State 895

   76 expression_if_one_liner: expression_continue .
  253 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 76 (expression_if_one_liner)

    SEMICOLON  go to state 1067


State 896

   73 expression_if_one_liner: expression_return .
  254 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 73 (expression_if_one_liner)

    SEMICOLON  go to state 1068


State 897

   74 expression_if_one_liner: expression_yield .
  255 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 74 (expression_if_one_liner)

    SEMICOLON  go to state 1069


State 898

  258 expression_any: expression_try_catch .

    $default  reduce using rule 258 (expression_any)


State 899

  305 expression_let: kwd_let . optional_in_scope let_variable_declaration
  306               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  307               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1070

    $default  reduce using rule 300 (optional_in_scope)

    optional_in_scope  go to state 1071


State 900

  246 expression_any: expression_let .

    $default  reduce using rule 246 (expression_any)


State 901

  244 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1072


State 902

   72 expression_if_one_liner: expr .
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 611
    "as"    shift, and go to state 612
    "+="    shift, and go to state 1073
    "-="    shift, and go to state 1074
    "/="    shift, and go to state 1075
    "*="    shift, and go to state 1076
    "%="    shift, and go to state 1077
    "&="    shift, and go to state 1078
    "|="    shift, and go to state 1079
    "^="    shift, and go to state 1080
    "<<"    shift, and go to state 613
    ">>"    shift, and go to state 614
    "++"    shift, and go to state 615
    "--"    shift, and go to state 616
    "<="    shift, and go to state 617
    "<<="   shift, and go to state 1081
    ">>="   shift, and go to state 1082
    ">="    shift, and go to state 618
    "=="    shift, and go to state 619
    "!="    shift, and go to state 620
    "->"    shift, and go to state 621
    "<-"    shift, and go to state 1083
    "??"    shift, and go to state 622
    "?."    shift, and go to state 623
    "?["    shift, and go to state 624
    "<|"    shift, and go to state 625
    "|>"    shift, and go to state 626
    ":="    shift, and go to state 1084
    "<<<"   shift, and go to state 627
    ">>>"   shift, and go to state 628
    "<<<="  shift, and go to state 1085
    ">>>="  shift, and go to state 1086
    "&&"    shift, and go to state 629
    "||"    shift, and go to state 630
    "^^"    shift, and go to state 631
    "&&="   shift, and go to state 1087
    "||="   shift, and go to state 1088
    "^^="   shift, and go to state 1089
    ".."    shift, and go to state 632
    '='     shift, and go to state 1090
    '?'     shift, and go to state 633
    '|'     shift, and go to state 634
    '^'     shift, and go to state 635
    '&'     shift, and go to state 636
    '<'     shift, and go to state 637
    '>'     shift, and go to state 638
    '-'     shift, and go to state 639
    '+'     shift, and go to state 640
    '*'     shift, and go to state 641
    '/'     shift, and go to state 642
    '%'     shift, and go to state 643
    '.'     shift, and go to state 644
    '['     shift, and go to state 645

    "if"      reduce using rule 72 (expression_if_one_liner)
    $default  reduce using rule 350 (expr_assign)


State 903

  514 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  516                                 | struct_variable_declaration_list . $@36 structure_variable_declaration SEMICOLON
  518                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  520                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block
  620 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1091
    '['                    shift, and go to state 1092
    '}'                    shift, and go to state 1093

    "def"     reduce using rule 136 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 515 ($@36)

    optional_annotation_list_with_emit_semis  go to state 1094
    $@36                                      go to state 1095


State 904

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  551 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1096


State 905

  552 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 552 (let_variable_name_with_pos_list)


State 906

  553 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  554                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1097

    $default  reduce using rule 553 (let_variable_name_with_pos_list)


State 907

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"                   shift, and go to state 544
    ":="                   shift, and go to state 545
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 546
    ';'                    shift, and go to state 16

    SEMICOLON              go to state 1098
    copy_or_move_or_clone  go to state 1099


State 908

  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1100
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 909

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  564 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 611
    "as"                   shift, and go to state 612
    "<<"                   shift, and go to state 613
    ">>"                   shift, and go to state 614
    "++"                   shift, and go to state 615
    "--"                   shift, and go to state 616
    "<="                   shift, and go to state 617
    ">="                   shift, and go to state 618
    "=="                   shift, and go to state 619
    "!="                   shift, and go to state 620
    "->"                   shift, and go to state 621
    "??"                   shift, and go to state 622
    "?."                   shift, and go to state 623
    "?["                   shift, and go to state 624
    "<|"                   shift, and go to state 625
    "|>"                   shift, and go to state 626
    "<<<"                  shift, and go to state 627
    ">>>"                  shift, and go to state 628
    "&&"                   shift, and go to state 629
    "||"                   shift, and go to state 630
    "^^"                   shift, and go to state 631
    ".."                   shift, and go to state 632
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 633
    '|'                    shift, and go to state 634
    '^'                    shift, and go to state 635
    '&'                    shift, and go to state 636
    '<'                    shift, and go to state 637
    '>'                    shift, and go to state 638
    '-'                    shift, and go to state 639
    '+'                    shift, and go to state 640
    '*'                    shift, and go to state 641
    '/'                    shift, and go to state 642
    '%'                    shift, and go to state 643
    '.'                    shift, and go to state 644
    '['                    shift, and go to state 645
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1101


State 910

  565 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 565 (global_let_variable_declaration)


State 911

  693 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 693 (type_declaration_no_options_no_dim)


State 912

  716 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 913

  719 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 914

  680 table_type_pair: type_declaration c_or_s type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 680 (table_type_pair)


State 915

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1102


State 916

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1103


State 917

  278 new_type_declaration: '<' $@14 type_declaration . '>' $@15
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1104


State 918

  284 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  790 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966

    $default  reduce using rule 790 (use_initializer)

    make_struct_fields  go to state 764
    make_struct_single  go to state 1105


State 919

  282 expr_new: "new" new_type_declaration '(' expr_list . ')'
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1106


State 920

  283 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1107


State 921

  281 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1108


State 922

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  322               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 703
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 704
    '>'                    shift, and go to state 1109
    ';'                    shift, and go to state 16

    COMMA      go to state 705
    SEMICOLON  go to state 706
    c_or_s     go to state 1110


State 923

  320 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1111


State 924

  319 expr_type_decl: "type" '<' $@22 type_declaration . '>' $@23
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1112


State 925

  812 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1113
    type_declaration_no_options_no_dim  go to state 275


State 926

  815 make_dim_decl: "array" "tuple" '<' $@101 . type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1114
    type_declaration_no_options_no_dim  go to state 275


State 927

  818 make_dim_decl: "array" "variant" '<' $@103 . type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1115
    type_declaration_no_options_no_dim  go to state 275


State 928

  822 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    '>'  shift, and go to state 1116


State 929

  819 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1117


State 930

  831 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1118


State 931

  832 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1119
    type_declaration_no_options_no_dim  go to state 275


State 932

  830 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1120


State 933

  449 expr: "deref" '(' expr ')' .

    $default  reduce using rule 449 (expr)


State 934

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options . '>' $@17 expr

    '>'  shift, and go to state 1121


State 935

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options . '>' $@19 expr

    '>'  shift, and go to state 1122


State 936

  450 expr: "addr" '(' expr ')' .

    $default  reduce using rule 450 (expr)


State 937

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options . '>' $@21 expr

    '>'  shift, and go to state 1123


State 938

  480 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 480 (expr)


State 939

  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1124


State 940

  823 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1125


State 941

  802 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    '>'  shift, and go to state 1126


State 942

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1127


State 943

  805 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1128


State 944

  799 make_struct_decl: "variant" '<' $@93 type_declaration_no_options . '>' $@94 '(' make_variant_dim ')'

    '>'  shift, and go to state 1129


State 945

  481 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  482               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  483               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 767

    $default  reduce using rule 338 (optional_capture_list)

    optional_capture_list  go to state 1130


State 946

  484 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 484 (expr_mtag)


State 947

  485 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 485 (expr_mtag)


State 948

  486 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 486 (expr_mtag)


State 949

  487 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 487 (expr_mtag)


State 950

  488 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 488 (expr_mtag)


State 951

  490 expr_mtag: "$c" '(' expr ')' . '(' ')'
  491          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1131


State 952

   35 string_builder_body: string_builder_body "{" expr . "}"
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    "}"    shift, and go to state 1132
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645


State 953

  628 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  629                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1133
    ','   shift, and go to state 859


State 954

  838 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 682
    "name"  shift, and go to state 683

    variable_name_with_pos_list  go to state 1134


State 955

  324 expr_list: expr_list ',' expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 324 (expr_list)


State 956

  809 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 809 (make_dim_decl)


State 957

  439 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 439 (expr)


State 958

  374 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1135
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 959

  499 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1136
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 960

  378 func_addr_expr: '@' '@' '<' $@24 . type_declaration_no_options '>' $@25 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1137
    type_declaration_no_options_no_dim  go to state 275


State 961

  381 func_addr_expr: '@' '@' '<' $@26 . optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    '('  shift, and go to state 336

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 1138


State 962

  628 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  629                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1139
    ','   shift, and go to state 859


State 963

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  803 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 803 (make_map_tuple)


State 964

  828 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 828 (expr_map_tuple_list)


State 965

  829 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 829 (make_table_decl)


State 966

  773 make_struct_fields: "name" . copy_or_move expr
  774                   | "name" . ":=" expr

    "<-"  shift, and go to state 858
    ":="  shift, and go to state 970
    '='   shift, and go to state 860

    copy_or_move  go to state 971


State 967

  393 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 393 (expr_call)


State 968

  395 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1140


State 969

  777 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  778                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1141
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 970

  774 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1142
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 971

  773 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1143
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 972

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 975
    ']'  shift, and go to state 1144


State 973

  324 expr_list: expr_list ',' . expr
  370 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 1145
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 955
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 974

  396 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 396 (expr_call)


State 975

  775 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  776                   | make_struct_fields ',' . "name" ":=" expr
  779                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1146
    "name"  shift, and go to state 1147


State 976

  394 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 394 (expr_call)


State 977

  135 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 135 (optional_annotation_list)


State 978

  339 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1148
    ":="    shift, and go to state 1149
    "name"  shift, and go to state 1150
    '='     shift, and go to state 1151
    '&'     shift, and go to state 1152

    capture_entry  go to state 1153
    capture_list   go to state 1154


State 979

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 403

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 1155


State 980

  342 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 342 (expr_full_block_assumed_piped)


State 981

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 336

    $default  reduce using rule 138 (optional_function_argument_list)

    optional_function_argument_list  go to state 1156


State 982

  456 expr: expr "is" "type" '<' . $@30 type_declaration_no_options '>' $@31

    $default  reduce using rule 454 ($@30)

    $@30  go to state 1157


State 983

  498 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1158
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 984

  462 expr: expr "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 460 ($@32)

    $@32  go to state 1159


State 985

  496 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1160
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 986

  371 expr_method_call: expr "->" "name" '(' . ')'
  372                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1161
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1162
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 987

  493 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1163
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 988

  442 expr: expr "?[" expr ']' .

    $default  reduce using rule 442 (expr)


State 989

  467 expr: expr '?' "as" "type" . '<' $@34 type_declaration '>' $@35

    '<'  shift, and go to state 1164


State 990

  497 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1165


State 991

  464 expr: expr '?' "as" "name" .

    $default  reduce using rule 464 (expr)


State 992

  468 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 468 (expr)


State 993

  453 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1166
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 994

  495 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1167


State 995

  445 expr: expr '.' "?." "name" .

    $default  reduce using rule 445 (expr)


State 996

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  443     | expr '.' "?[" expr . ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ']'    shift, and go to state 1168


State 997

  492 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1169
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 998

  384 expr_field: expr '.' "name" '(' . ')'
  385           | expr '.' "name" '(' . expr_list ')'
  386           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 1170
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1171
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1172
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 999

  494 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1173


State 1000

  383 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 383 (expr_field)


State 1001

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  441     | expr '.' '[' expr . ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ']'    shift, and go to state 1174


State 1002

  391 expr_field: expr '.' $@28 error . $@29

    $default  reduce using rule 390 ($@29)

    $@29  go to state 1175


State 1003

  387 expr_field: expr '.' basic_type_declaration '(' . ')'
  388           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1176
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1177
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1004

  440 expr: expr '[' expr ']' .

    $default  reduce using rule 440 (expr)


State 1005

  324 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 955
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1006

  398 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 398 (expr_call)


State 1007

  722 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 1008

  712 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 712 (type_declaration_no_options_no_dim)


State 1009

  676 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 676 (bitfield_type_declaration)


State 1010

  670 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 670 (bitfield_bits)


State 1011

  726 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 1012

  729 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 728 ($@64)

    $@64  go to state 1178


State 1013

  733 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 1014

  736 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 735 ($@68)

    $@68  go to state 1179


State 1015

  740 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 1016

  743 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 742 ($@72)

    $@72  go to state 1180


State 1017

  526 tuple_type: "name" ':' type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 526 (tuple_type)


State 1018

  746 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 1019

  528 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 528 (tuple_type_list)


State 1020

  532 variant_type: "name" ':' type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 532 (variant_type)


State 1021

  749 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 1022

  534 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 534 (variant_type_list)


State 1023

  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1181


State 1024

  270 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1182


State 1025

  673 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 673 (bitfield_alias_bits)


State 1026

  581 commas: commas COMMA .

    $default  reduce using rule 581 (commas)


State 1027

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 . '}'

    '}'  shift, and go to state 1183


State 1028

   78 semis: semis SEMICOLON .

    $default  reduce using rule 78 (semis)


State 1029

  531 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 531 (tuple_alias_type_list)


State 1030

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 . '}'

    '}'  shift, and go to state 1184


State 1031

  537 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 537 (variant_alias_type_list)


State 1032

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1185


State 1033

  579 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1186
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1034

  581 commas: commas . COMMA
  584 enum_list: enum_list commas . enum_expression
  598 optional_commas: commas .

    "name"             shift, and go to state 852
    "new line, comma"  shift, and go to state 703
    ','                shift, and go to state 704

    $default  reduce using rule 598 (optional_commas)

    COMMA            go to state 1026
    enum_expression  go to state 1187


State 1035

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas . $@44 '}'

    $default  reduce using rule 605 ($@44)

    $@44  go to state 1188


State 1036

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  626 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1189


State 1037

  627 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 627 (variable_name_with_pos_list)


State 1038

  628 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  629                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1190

    $default  reduce using rule 628 (variable_name_with_pos_list)


State 1039

  542 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  543                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 858
    '='   shift, and go to state 860
    '|'   shift, and go to state 377

    $default  reduce using rule 542 (variable_declaration)

    copy_or_move  go to state 1191


State 1040

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  544 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 544 (variable_declaration)


State 1041

  290 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1192
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1042

  289 expression_return: "return" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 289 (expression_return)


State 1043

  293 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1193


State 1044

  275 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1194
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1045

  274 expression_delete: "delete" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 274 (expression_delete)


State 1046

   96 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1195


State 1047

  261 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 1048

   56 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1196


State 1049

   57 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1197


State 1050

   58 expression_goto: "goto" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 58 (expression_goto)


State 1051

   91 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1198
    $@12              go to state 406


State 1052

  292 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1199
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1053

  291 expression_yield: "yield" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 291 (expression_yield)


State 1054

  259 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 259 (expression_any)


State 1055

  260 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 260 (expression_any)


State 1056

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1200


State 1057

   68 if_or_static_if: "if" .

    $default  reduce using rule 68 (if_or_static_if)


State 1058

   69 if_or_static_if: "static_if" .

    $default  reduce using rule 69 (if_or_static_if)


State 1059

   87 expression_if_then_else: $@5 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1201


State 1060

   90 expression_for_loop: $@6 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1202


State 1061

   93 expression_while_loop: $@7 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1203


State 1062

   95 expression_with: $@8 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1204


State 1063

  250 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 250 (expression_any)


State 1064

  241 expression_block: $@12 '{' expressions $@13 '}' . expression_block_finally

    "finally"  shift, and go to state 1205

    $default  reduce using rule 235 (expression_block_finally)

    expression_block_finally  go to state 1206


State 1065

  245 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 245 (expression_any)


State 1066

  252 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 252 (expression_any)


State 1067

  253 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 253 (expression_any)


State 1068

  254 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 254 (expression_any)


State 1069

  255 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 255 (expression_any)


State 1070

  299 optional_in_scope: "inscope" .

    $default  reduce using rule 299 (optional_in_scope)


State 1071

  305 expression_let: kwd_let optional_in_scope . let_variable_declaration
  306               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  307               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 537
    "name"  shift, and go to state 538
    '('     shift, and go to state 1207
    '{'     shift, and go to state 1208

    tuple_expansion_variable_declaration  go to state 1209
    let_variable_name_with_pos_list       go to state 539
    let_variable_declaration              go to state 1210


State 1072

  244 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 244 (expression_any)


State 1073

  360 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1211
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1074

  361 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1212
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1075

  363 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1213
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1076

  362 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1214
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1077

  364 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1215
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1078

  354 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1216
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1079

  355 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1217
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1080

  356 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1218
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1081

  365 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1219
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1082

  366 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1220
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1083

  352 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1221
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1084

  353 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1222
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1085

  367 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1223
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1086

  368 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1224
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1087

  357 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1225
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1088

  358 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1226
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1089

  359 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1227
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1090

  351 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1228
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1091

  514 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 514 (struct_variable_declaration_list)


State 1092

  137 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1229
    name_in_namespace             go to state 70


State 1093

  620 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 620 (optional_struct_variable_declaration_list)


State 1094

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  520                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1230


State 1095

  516 struct_variable_declaration_list: struct_variable_declaration_list $@36 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 500 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1231
    structure_variable_declaration  go to state 1232


State 1096

  551 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 551 (let_variable_name_with_pos_list)


State 1097

  554 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1233


State 1098

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 560 (let_variable_declaration)


State 1099

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1234
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1100

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 611
    "as"                   shift, and go to state 612
    "<<"                   shift, and go to state 613
    ">>"                   shift, and go to state 614
    "++"                   shift, and go to state 615
    "--"                   shift, and go to state 616
    "<="                   shift, and go to state 617
    ">="                   shift, and go to state 618
    "=="                   shift, and go to state 619
    "!="                   shift, and go to state 620
    "->"                   shift, and go to state 621
    "??"                   shift, and go to state 622
    "?."                   shift, and go to state 623
    "?["                   shift, and go to state 624
    "<|"                   shift, and go to state 625
    "|>"                   shift, and go to state 626
    "<<<"                  shift, and go to state 627
    ">>>"                  shift, and go to state 628
    "&&"                   shift, and go to state 629
    "||"                   shift, and go to state 630
    "^^"                   shift, and go to state 631
    ".."                   shift, and go to state 632
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 633
    '|'                    shift, and go to state 634
    '^'                    shift, and go to state 635
    '&'                    shift, and go to state 636
    '<'                    shift, and go to state 637
    '>'                    shift, and go to state 638
    '-'                    shift, and go to state 639
    '+'                    shift, and go to state 640
    '*'                    shift, and go to state 641
    '/'                    shift, and go to state 642
    '%'                    shift, and go to state 643
    '.'                    shift, and go to state 644
    '['                    shift, and go to state 645
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1235


State 1101

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 564 (global_let_variable_declaration)


State 1102

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 792 ($@90)

    $@90  go to state 1236


State 1103

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 795 ($@92)

    $@92  go to state 1237


State 1104

  278 new_type_declaration: '<' $@14 type_declaration '>' . $@15

    $default  reduce using rule 277 ($@15)

    $@15  go to state 1238


State 1105

  284 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1239


State 1106

  282 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 282 (expr_new)


State 1107

  283 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 283 (expr_new)


State 1108

  281 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 281 (expr_new)


State 1109

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1240


State 1110

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1241


State 1111

  320 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 320 (expr_type_info)


State 1112

  319 expr_type_decl: "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 318 ($@23)

    $@23  go to state 1242


State 1113

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1243


State 1114

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1244


State 1115

  818 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options . '>' $@104 '(' make_variant_dim ')'

    '>'  shift, and go to state 1245


State 1116

  822 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 821 ($@106)

    $@106  go to state 1246


State 1117

  819 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 819 (make_dim_decl)


State 1118

  831 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 1247
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 601
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 602
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 1248
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 1119

  832 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1249


State 1120

  830 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 830 (make_table_decl)


State 1121

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 309 ($@17)

    $@17  go to state 1250


State 1122

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 312 ($@19)

    $@19  go to state 1251


State 1123

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 315 ($@21)

    $@21  go to state 1252


State 1124

  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 825 ($@108)

    $@108  go to state 1253


State 1125

  823 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 823 (make_dim_decl)


State 1126

  802 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 801 ($@96)

    $@96  go to state 1254


State 1127

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 807 ($@98)

    $@98  go to state 1255


State 1128

  805 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 805 (make_tuple_call)


State 1129

  799 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' . $@94 '(' make_variant_dim ')'

    $default  reduce using rule 798 ($@94)

    $@94  go to state 1256


State 1130

  481 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  482               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  483               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1257

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1258


State 1131

  490 expr_mtag: "$c" '(' expr ')' '(' . ')'
  491          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1259
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1260
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1132

   35 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 35 (string_builder_body)


State 1133

  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1261
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1134

  628 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  629                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1262
    ','   shift, and go to state 859


State 1135

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  374 func_addr_name: "$i" '(' expr . ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1263


State 1136

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  499          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1264


State 1137

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options . '>' $@25 func_addr_name

    '>'  shift, and go to state 1265


State 1138

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list . optional_function_type '>' $@27 func_addr_name

    ':'  shift, and go to state 403

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 1266


State 1139

  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1267
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1140

  395 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 395 (expr_call)


State 1141

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  778                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1268


State 1142

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 774 (make_struct_fields)


State 1143

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  773 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 773 (make_struct_fields)


State 1144

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1269


State 1145

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  809 make_dim_decl: '[' . expr_list optional_comma ']'
  837 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  838                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 759
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 760
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 596
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 1270
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1146

  779 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  780                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1271


State 1147

  775 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  776                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 858
    ":="  shift, and go to state 1272
    '='   shift, and go to state 860

    copy_or_move  go to state 1273


State 1148

  333 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1274


State 1149

  334 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1275


State 1150

  335 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1276


State 1151

  332 capture_entry: '=' . "name"

    "name"  shift, and go to state 1277


State 1152

  331 capture_entry: '&' . "name"

    "name"  shift, and go to state 1278


State 1153

  336 capture_list: capture_entry .

    $default  reduce using rule 336 (capture_list)


State 1154

  337 capture_list: capture_list . ',' capture_entry
  339 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1279
    ')'  shift, and go to state 1280


State 1155

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1281


State 1156

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 403

    $default  reduce using rule 141 (optional_function_type)

    optional_function_type  go to state 1282


State 1157

  456 expr: expr "is" "type" '<' $@30 . type_declaration_no_options '>' $@31

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1283
    type_declaration_no_options_no_dim  go to state 275


State 1158

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  498          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1284


State 1159

  462 expr: expr "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1285


State 1160

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  496          | expr "as" "$f" '(' expr . ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1286


State 1161

  371 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 371 (expr_method_call)


State 1162

  324 expr_list: expr_list . ',' expr
  372 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1287


State 1163

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  493          | expr "?." "$f" '(' expr . ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1288


State 1164

  467 expr: expr '?' "as" "type" '<' . $@34 type_declaration '>' $@35

    $default  reduce using rule 465 ($@34)

    $@34  go to state 1289


State 1165

  497 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1290
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1166

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  453     | expr '?' expr ':' expr .
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 453 (expr)


State 1167

  495 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1291
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1168

  443 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 443 (expr)


State 1169

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  492          | expr '.' "$f" '(' expr . ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1292


State 1170

  386 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  809 make_dim_decl: '[' . expr_list optional_comma ']'
  837 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  838                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 759
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 760
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 596
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 1293
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1171

  384 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 384 (expr_field)


State 1172

  324 expr_list: expr_list . ',' expr
  385 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1294


State 1173

  494 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1295
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1174

  441 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 441 (expr)


State 1175

  391 expr_field: expr '.' $@28 error $@29 .

    $default  reduce using rule 391 (expr_field)


State 1176

  387 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 387 (expr_field)


State 1177

  324 expr_list: expr_list . ',' expr
  388 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1296


State 1178

  729 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 1179

  736 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 736 (type_declaration_no_options_no_dim)


State 1180

  743 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 1181

  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 265 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 1297
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 669
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1182

  270 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 270 (type_declaration_no_options_list)


State 1183

  767 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}' .

    $default  reduce using rule 767 (bitfield_alias_declaration)


State 1184

  757 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}' .

    $default  reduce using rule 757 (tuple_alias_declaration)


State 1185

  762 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 762 (variant_alias_declaration)


State 1186

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  579 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 579 (enum_expression)


State 1187

  584 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 584 (enum_list)


State 1188

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 . '}'

    '}'  shift, and go to state 1298


State 1189

  626 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 626 (variable_name_with_pos_list)


State 1190

  629 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1299


State 1191

  543 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1300
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1192

  290 expression_return: "return" "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 290 (expression_return)


State 1193

  293 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1301
    $@12              go to state 406


State 1194

  275 expression_delete: "delete" "explicit" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 275 (expression_delete)


State 1195

   96 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1302
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1196

   56 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 56 (expression_label)


State 1197

   57 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 57 (expression_goto)


State 1198

   91 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 91 (expression_unsafe)


State 1199

  292 expression_yield: "yield" "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 292 (expression_yield)


State 1200

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1303
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1201

   87 expression_if_then_else: $@5 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1304
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1202

   90 expression_for_loop: $@6 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 682
    "name"  shift, and go to state 683

    variable_name_with_pos_list  go to state 1305


State 1203

   93 expression_while_loop: $@7 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1306
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1204

   95 expression_with: $@8 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1307
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1205

  238 expression_block_finally: "finally" . $@10 '{' expressions $@11 '}'

    $default  reduce using rule 236 ($@10)

    $@10  go to state 1308


State 1206

  241 expression_block: $@12 '{' expressions $@13 '}' expression_block_finally .

    $default  reduce using rule 241 (expression_block)


State 1207

  303 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1309

    tuple_expansion  go to state 1310


State 1208

  307 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 557 (variable_declaration_list)

    variable_declaration_list  go to state 1311


State 1209

  306 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 306 (expression_let)


State 1210

  305 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 305 (expression_let)


State 1211

  360 expr_assign: expr "+=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 360 (expr_assign)


State 1212

  361 expr_assign: expr "-=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 361 (expr_assign)


State 1213

  363 expr_assign: expr "/=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 363 (expr_assign)


State 1214

  362 expr_assign: expr "*=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 362 (expr_assign)


State 1215

  364 expr_assign: expr "%=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 364 (expr_assign)


State 1216

  354 expr_assign: expr "&=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 354 (expr_assign)


State 1217

  355 expr_assign: expr "|=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 355 (expr_assign)


State 1218

  356 expr_assign: expr "^=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 356 (expr_assign)


State 1219

  365 expr_assign: expr "<<=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 365 (expr_assign)


State 1220

  366 expr_assign: expr ">>=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 366 (expr_assign)


State 1221

  352 expr_assign: expr "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 352 (expr_assign)


State 1222

  353 expr_assign: expr ":=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 353 (expr_assign)


State 1223

  367 expr_assign: expr "<<<=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 367 (expr_assign)


State 1224

  368 expr_assign: expr ">>>=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 368 (expr_assign)


State 1225

  357 expr_assign: expr "&&=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 357 (expr_assign)


State 1226

  358 expr_assign: expr "||=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 358 (expr_assign)


State 1227

  359 expr_assign: expr "^^=" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 359 (expr_assign)


State 1228

  351 expr_assign: expr '=' expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 351 (expr_assign)


State 1229

  133 annotation_list: annotation_list . ',' annotation_declaration
  137 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 1312


State 1230

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  520                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1313
    "private"  shift, and go to state 1314

    $default  reduce using rule 507 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1315


State 1231

  512 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1316

    $default  reduce using rule 510 (optional_static_member_variable)

    optional_static_member_variable  go to state 1317


State 1232

  516 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1318


State 1233

  554 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 554 (let_variable_name_with_pos_list)


State 1234

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 611
    "as"                   shift, and go to state 612
    "<<"                   shift, and go to state 613
    ">>"                   shift, and go to state 614
    "++"                   shift, and go to state 615
    "--"                   shift, and go to state 616
    "<="                   shift, and go to state 617
    ">="                   shift, and go to state 618
    "=="                   shift, and go to state 619
    "!="                   shift, and go to state 620
    "->"                   shift, and go to state 621
    "??"                   shift, and go to state 622
    "?."                   shift, and go to state 623
    "?["                   shift, and go to state 624
    "<|"                   shift, and go to state 625
    "|>"                   shift, and go to state 626
    "<<<"                  shift, and go to state 627
    ">>>"                  shift, and go to state 628
    "&&"                   shift, and go to state 629
    "||"                   shift, and go to state 630
    "^^"                   shift, and go to state 631
    ".."                   shift, and go to state 632
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 633
    '|'                    shift, and go to state 634
    '^'                    shift, and go to state 635
    '&'                    shift, and go to state 636
    '<'                    shift, and go to state 637
    '>'                    shift, and go to state 638
    '-'                    shift, and go to state 639
    '+'                    shift, and go to state 640
    '*'                    shift, and go to state 641
    '/'                    shift, and go to state 642
    '%'                    shift, and go to state 643
    '.'                    shift, and go to state 644
    '['                    shift, and go to state 645
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1319


State 1235

  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 562 (let_variable_declaration)


State 1236

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1320


State 1237

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1321


State 1238

  278 new_type_declaration: '<' $@14 type_declaration '>' $@15 .

    $default  reduce using rule 278 (new_type_declaration)


State 1239

  284 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 284 (expr_new)


State 1240

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1322
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1241

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1323


State 1242

  319 expr_type_decl: "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 319 (expr_type_decl)


State 1243

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 811 ($@100)

    $@100  go to state 1324


State 1244

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 814 ($@102)

    $@102  go to state 1325


State 1245

  818 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 817 ($@104)

    $@104  go to state 1326


State 1246

  822 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1327


State 1247

  831 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1328


State 1248

  268 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  828 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 756

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 1329


State 1249

  832 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1330


State 1250

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1331
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1251

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1332
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1252

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1333
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1253

  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1334


State 1254

  802 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 789 (use_initializer)

    use_initializer  go to state 1336


State 1255

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1337


State 1256

  799 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 . '(' make_variant_dim ')'

    '('  shift, and go to state 1338


State 1257

  481 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  482               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1339
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1340
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1258

  483 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1341
    $@12              go to state 406


State 1259

  490 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1260

  324 expr_list: expr_list . ',' expr
  491 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1342


State 1261

  324 expr_list: expr_list . ',' expr
  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1343


State 1262

  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1344
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1263

  374 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 374 (func_addr_name)


State 1264

  499 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1265

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' . $@25 func_addr_name

    $default  reduce using rule 377 ($@25)

    $@25  go to state 1345


State 1266

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type . '>' $@27 func_addr_name

    '>'  shift, and go to state 1346


State 1267

  324 expr_list: expr_list . ',' expr
  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1347


State 1268

  777 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  778                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 858
    ":="  shift, and go to state 1348
    '='   shift, and go to state 860

    copy_or_move  go to state 1349


State 1269

  369 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 369 (expr_named_call)


State 1270

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 975
    ']'  shift, and go to state 1350


State 1271

  779 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  780                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1351
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1272

  776 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1352
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1273

  775 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1353
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1274

  333 capture_entry: "<-" "name" .

    $default  reduce using rule 333 (capture_entry)


State 1275

  334 capture_entry: ":=" "name" .

    $default  reduce using rule 334 (capture_entry)


State 1276

  335 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1354


State 1277

  332 capture_entry: '=' "name" .

    $default  reduce using rule 332 (capture_entry)


State 1278

  331 capture_entry: '&' "name" .

    $default  reduce using rule 331 (capture_entry)


State 1279

  337 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1148
    ":="    shift, and go to state 1149
    "name"  shift, and go to state 1150
    '='     shift, and go to state 1151
    '&'     shift, and go to state 1152

    capture_entry  go to state 1355


State 1280

  339 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 339 (optional_capture_list)


State 1281

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1356

    $default  reduce using rule 239 ($@12)

    expression_block       go to state 1357
    $@12                   go to state 406
    block_or_simple_block  go to state 1358


State 1282

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1359


State 1283

  456 expr: expr "is" "type" '<' $@30 type_declaration_no_options . '>' $@31

    '>'  shift, and go to state 1360


State 1284

  498 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1285

  462 expr: expr "as" "type" '<' $@32 type_declaration . '>' $@33
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1361


State 1286

  496 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1287

  372 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 372 (expr_method_call)


State 1288

  493 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1289

  467 expr: expr '?' "as" "type" '<' $@34 . type_declaration '>' $@35

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1362


State 1290

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  497          | expr '?' "as" "$f" '(' expr . ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1363


State 1291

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  495          | expr '.' "?." "$f" '(' expr . ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1364


State 1292

  492 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1293

  386 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 975
    ']'  shift, and go to state 1365


State 1294

  385 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 385 (expr_field)


State 1295

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  494          | expr '.' '.' "$f" '(' expr . ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1366


State 1296

  388 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 388 (expr_field)


State 1297

  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1367


State 1298

  606 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}' .

    $default  reduce using rule 606 (enum_declaration)


State 1299

  629 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 629 (variable_name_with_pos_list)


State 1300

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  543 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 543 (variable_declaration)


State 1301

  293 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 293 (expression_try_catch)


State 1302

   96 expression_with_alias: "assume" "name" '=' expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 96 (expression_with_alias)


State 1303

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1368


State 1304

   87 expression_if_then_else: $@5 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1369


State 1305

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  628 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  629                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1370
    ','   shift, and go to state 859


State 1306

   93 expression_while_loop: $@7 "while" '(' expr . ')' optional_emit_semis expression_block
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1371


State 1307

   95 expression_with: $@8 "with" '(' expr . ')' optional_emit_semis expression_block
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1372


State 1308

  238 expression_block_finally: "finally" $@10 . '{' expressions $@11 '}'

    '{'  shift, and go to state 1373


State 1309

  301 tuple_expansion: "name" .

    $default  reduce using rule 301 (tuple_expansion)


State 1310

  302 tuple_expansion: tuple_expansion . ',' "name"
  303 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1374
    ')'  shift, and go to state 1375


State 1311

  307 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  558 variable_declaration_list: variable_declaration_list . SEMICOLON
  559                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 537
    "name"                 shift, and go to state 538
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1376

    SEMICOLON                        go to state 1377
    let_variable_name_with_pos_list  go to state 539
    let_variable_declaration         go to state 1378


State 1312

  137 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 1313

  508 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 508 (optional_public_or_private_member_variable)


State 1314

  509 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 509 (optional_public_or_private_member_variable)


State 1315

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  520                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1379
    "static"    shift, and go to state 1316

    $default  reduce using rule 510 (optional_static_member_variable)

    optional_static_member_variable  go to state 1380


State 1316

  511 optional_static_member_variable: "static" .

    $default  reduce using rule 511 (optional_static_member_variable)


State 1317

  512 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1381
    "sealed"    shift, and go to state 1382

    $default  reduce using rule 502 (optional_override)

    optional_override  go to state 1383


State 1318

  516 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 516 (struct_variable_declaration_list)


State 1319

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 561 (let_variable_declaration)


State 1320

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 789 (use_initializer)

    use_initializer  go to state 1384


State 1321

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 789 (use_initializer)

    use_initializer  go to state 1385


State 1322

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1386


State 1323

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1387


State 1324

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1388


State 1325

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1389


State 1326

  818 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1390


State 1327

  822 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 265 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 1391
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 669
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1328

  831 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 831 (make_table_decl)


State 1329

  268 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 268 (optional_expr_map_tuple_list)


State 1330

  832 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 1392
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 601
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 602
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 1248
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 1331

  310 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 310 (expr_cast)


State 1332

  313 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 313 (expr_cast)


State 1333

  316 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 316 (expr_cast)


State 1334

  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1393
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1335

  790 use_initializer: "uninitialized" .

    $default  reduce using rule 790 (use_initializer)


State 1336

  802 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 802 (make_struct_decl)


State 1337

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 789 (use_initializer)

    use_initializer  go to state 1394


State 1338

  799 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966

    make_struct_fields  go to state 1395
    make_variant_dim    go to state 1396


State 1339

  481 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 481 (expr_generator)


State 1340

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1397


State 1341

  483 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 483 (expr_generator)


State 1342

  491 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1343

  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1398


State 1344

  324 expr_list: expr_list . ',' expr
  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1399


State 1345

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 749
    "name"  shift, and go to state 59

    name_in_namespace  go to state 752
    func_addr_name     go to state 1400


State 1346

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' . $@27 func_addr_name

    $default  reduce using rule 380 ($@27)

    $@27  go to state 1401


State 1347

  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1402


State 1348

  778 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1403
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1349

  777 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1404
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1350

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1405


State 1351

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  779 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  780                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1406


State 1352

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 776 (make_struct_fields)


State 1353

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 775 (make_struct_fields)


State 1354

  335 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1407


State 1355

  337 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 337 (capture_list)


State 1356

  326 block_or_simple_block: "=>" . expr
  327                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1408
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1409
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1357

  325 block_or_simple_block: expression_block .

    $default  reduce using rule 325 (block_or_simple_block)


State 1358

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 340 (expr_full_block)


State 1359

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1410
    $@12              go to state 406


State 1360

  456 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' . $@31

    $default  reduce using rule 455 ($@31)

    $@31  go to state 1411


State 1361

  462 expr: expr "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 461 ($@33)

    $@33  go to state 1412


State 1362

  467 expr: expr '?' "as" "type" '<' $@34 type_declaration . '>' $@35
  751 type_declaration: type_declaration . '|' type_declaration_no_options
  752                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1413


State 1363

  497 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1364

  495 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1365

  386 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1414


State 1366

  494 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1367

  697 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 1368

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1415

    $default  reduce using rule 70 (expression_else_one_liner)

    expression_else_one_liner  go to state 1416


State 1369

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1417


State 1370

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1418
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 597
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1371

   93 expression_while_loop: $@7 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1419


State 1372

   95 expression_with: $@8 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1420


State 1373

  238 expression_block_finally: "finally" $@10 '{' . expressions $@11 '}'

    $default  reduce using rule 262 (expressions)

    expressions  go to state 1421


State 1374

  302 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1422


State 1375

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  304                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1423
    '&'  shift, and go to state 414

    $default  reduce using rule 548 (optional_ref)

    optional_ref  go to state 1424


State 1376

  307 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 307 (expression_let)


State 1377

  558 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 558 (variable_declaration_list)


State 1378

  559 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 559 (variable_declaration_list)


State 1379

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@37 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1425

    $default  reduce using rule 505 (optional_constant)

    optional_constant  go to state 1426


State 1380

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1381
    "sealed"    shift, and go to state 1382

    $default  reduce using rule 502 (optional_override)

    optional_override  go to state 1427


State 1381

  503 optional_override: "override" .

    $default  reduce using rule 503 (optional_override)


State 1382

  504 optional_override: "sealed" .

    $default  reduce using rule 504 (optional_override)


State 1383

  512 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1313
    "private"  shift, and go to state 1314

    $default  reduce using rule 507 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1428


State 1384

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966
    '('     shift, and go to state 1429

    $default  reduce using rule 788 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1430
    make_struct_dim_list           go to state 1431
    make_struct_dim_decl           go to state 1432
    optional_make_struct_dim_decl  go to state 1433


State 1385

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966
    '('     shift, and go to state 1429

    $default  reduce using rule 788 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1430
    make_struct_dim_list           go to state 1431
    make_struct_dim_decl           go to state 1432
    optional_make_struct_dim_decl  go to state 1434


State 1386

  321 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 321 (expr_type_info)


State 1387

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1435
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1388

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 789 (use_initializer)

    use_initializer  go to state 1436


State 1389

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 789 (use_initializer)

    use_initializer  go to state 1437


State 1390

  818 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966

    make_struct_fields  go to state 1395
    make_variant_dim    go to state 1438


State 1391

  822 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1439


State 1392

  832 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1440


State 1393

  324 expr_list: expr_list . ',' expr
  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 746

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 1441


State 1394

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966
    '('     shift, and go to state 1429

    $default  reduce using rule 788 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1430
    make_struct_dim_list           go to state 1431
    make_struct_dim_decl           go to state 1432
    optional_make_struct_dim_decl  go to state 1442


State 1395

  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  781 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 975

    $default  reduce using rule 781 (make_variant_dim)


State 1396

  799 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1443


State 1397

  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 482 (expr_generator)


State 1398

  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1444
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1399

  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1445


State 1400

  378 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name .

    $default  reduce using rule 378 (func_addr_expr)


State 1401

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 749
    "name"  shift, and go to state 59

    name_in_namespace  go to state 752
    func_addr_name     go to state 1446


State 1402

  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 601
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 1447
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1403

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 778 (make_struct_fields)


State 1404

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 777 (make_struct_fields)


State 1405

  370 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 370 (expr_named_call)


State 1406

  779 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  780                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 858
    ":="  shift, and go to state 1448
    '='   shift, and go to state 860

    copy_or_move  go to state 1449


State 1407

  335 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 335 (capture_entry)


State 1408

  327 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1450
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1409

  326 block_or_simple_block: "=>" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    ".."  error (nonassociative)

    $default  reduce using rule 326 (block_or_simple_block)


State 1410

  341 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 341 (expr_full_block_assumed_piped)


State 1411

  456 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31 .

    $default  reduce using rule 456 (expr)


State 1412

  462 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 462 (expr)


State 1413

  467 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' . $@35

    $default  reduce using rule 466 ($@35)

    $@35  go to state 1451


State 1414

  386 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 386 (expr_field)


State 1415

   71 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 865
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 866
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 870
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 875
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder           go to state 468
    expr_reader              go to state 469
    expression_if_one_liner  go to state 1452
    expr_call_pipe           go to state 470
    name_in_namespace        go to state 471
    expr_new                 go to state 472
    expression_break         go to state 1453
    expression_continue      go to state 1454
    expression_return        go to state 1455
    expression_yield         go to state 1456
    expr_cast                go to state 473
    expr_type_decl           go to state 474
    expr_type_info           go to state 475
    block_or_lambda          go to state 476
    expr_full_block          go to state 477
    expr_numeric_const       go to state 478
    expr_named_call          go to state 479
    expr_method_call         go to state 480
    func_addr_expr           go to state 481
    expr_field               go to state 482
    expr_call                go to state 483
    expr                     go to state 1457
    expr_generator           go to state 485
    expr_mtag                go to state 486
    basic_type_declaration   go to state 487
    make_decl                go to state 488
    make_struct_decl         go to state 489
    make_tuple_call          go to state 490
    make_dim_decl            go to state 491
    make_table_decl          go to state 492
    array_comprehension      go to state 493


State 1416

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1458


State 1417

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 81 ($@2)
    '{'       [reduce using rule 84 ($@4)]
    $default  reduce using rule 84 ($@4)

    expression_if_block  go to state 1459
    $@2                  go to state 1460
    $@4                  go to state 1461


State 1418

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1005
    ')'  shift, and go to state 1462


State 1419

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1463
    $@12              go to state 406


State 1420

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1464
    $@12              go to state 406


State 1421

  238 expression_block_finally: "finally" $@10 '{' expressions . $@11 '}'
  263 expressions: expressions . expression_any
  264            | expressions . error

    error                             shift, and go to state 864
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 865
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 866
    "try"                             shift, and go to state 867
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 868
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 869
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 870
    "pass"                            shift, and go to state 871
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 872
    "goto"                            shift, and go to state 873
    "unsafe"                          shift, and go to state 874
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 875
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 237 ($@11)

    SEMICOLON                         go to state 876
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 877
    expression_goto                   go to state 878
    expression_if_one_liner           go to state 879
    expression_if_then_else           go to state 880
    $@5                               go to state 881
    expression_if_then_else_oneliner  go to state 882
    expression_for_loop               go to state 883
    $@6                               go to state 884
    expression_unsafe                 go to state 885
    expression_while_loop             go to state 886
    $@7                               go to state 887
    expression_with                   go to state 888
    $@8                               go to state 889
    expression_with_alias             go to state 890
    $@11                              go to state 1465
    expr_call_pipe                    go to state 470
    expression_any                    go to state 892
    name_in_namespace                 go to state 471
    expression_delete                 go to state 893
    expr_new                          go to state 472
    expression_break                  go to state 894
    expression_continue               go to state 895
    expression_return                 go to state 896
    expression_yield                  go to state 897
    expression_try_catch              go to state 898
    kwd_let                           go to state 899
    expression_let                    go to state 900
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 901
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 902
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 1422

  302 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 302 (tuple_expansion)


State 1423

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 59
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1466
    type_declaration_no_options_no_dim  go to state 275


State 1424

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 1467


State 1425

  506 optional_constant: "const" .

    $default  reduce using rule 506 (optional_constant)


State 1426

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@37 function_declaration_header SEMICOLON

    $default  reduce using rule 517 ($@37)

    $@37  go to state 1468


State 1427

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1425

    $default  reduce using rule 505 (optional_constant)

    optional_constant  go to state 1469


State 1428

  512 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 682
    "name"  shift, and go to state 683

    variable_declaration         go to state 1470
    variable_name_with_pos_list  go to state 685


State 1429

  783 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966

    make_struct_fields  go to state 1471


State 1430

  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  785 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 975

    $default  reduce using rule 785 (make_struct_dim_decl)


State 1431

  784 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  786 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1472

    $default  reduce using rule 835 (optional_comma)

    optional_comma  go to state 1473


State 1432

  787 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 787 (optional_make_struct_dim_decl)


State 1433

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1474


State 1434

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1475


State 1435

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1476


State 1436

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966
    '('     shift, and go to state 1429

    $default  reduce using rule 788 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1430
    make_struct_dim_list           go to state 1431
    make_struct_dim_decl           go to state 1432
    optional_make_struct_dim_decl  go to state 1477


State 1437

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966
    '('     shift, and go to state 1429

    $default  reduce using rule 788 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1430
    make_struct_dim_list           go to state 1431
    make_struct_dim_decl           go to state 1432
    optional_make_struct_dim_decl  go to state 1478


State 1438

  818 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1479


State 1439

  822 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 822 (make_dim_decl)


State 1440

  832 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 832 (make_table_decl)


State 1441

  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1480


State 1442

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1481


State 1443

  799 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')' .

    $default  reduce using rule 799 (make_struct_decl)


State 1444

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ';'    shift, and go to state 1482

    $default  reduce using rule 833 (array_comprehension_where)

    array_comprehension_where  go to state 1483


State 1445

  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1484
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1446

  381 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name .

    $default  reduce using rule 381 (func_addr_expr)


State 1447

  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1482

    $default  reduce using rule 833 (array_comprehension_where)

    array_comprehension_where  go to state 1485


State 1448

  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1486
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1449

  779 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1487
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1450

  327 block_or_simple_block: "=>" "<-" expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 327 (block_or_simple_block)


State 1451

  467 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35 .

    $default  reduce using rule 467 (expr)


State 1452

   71 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 71 (expression_else_one_liner)


State 1453

   75 expression_if_one_liner: expression_break .

    $default  reduce using rule 75 (expression_if_one_liner)


State 1454

   76 expression_if_one_liner: expression_continue .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1455

   73 expression_if_one_liner: expression_return .

    $default  reduce using rule 73 (expression_if_one_liner)


State 1456

   74 expression_if_one_liner: expression_yield .

    $default  reduce using rule 74 (expression_if_one_liner)


State 1457

   72 expression_if_one_liner: expr .
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 72 (expression_if_one_liner)


State 1458

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 88 (expression_if_then_else_oneliner)


State 1459

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1488
    "elif"         shift, and go to state 1489
    "static_elif"  shift, and go to state 1490

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1491
    expression_else      go to state 1492


State 1460

   83 expression_if_block: $@2 . '{' expressions $@3 '}' expression_block_finally

    '{'  shift, and go to state 1493


State 1461

   85 expression_if_block: $@4 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 865
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 866
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 870
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 875
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder           go to state 468
    expr_reader              go to state 469
    expression_if_one_liner  go to state 1494
    expr_call_pipe           go to state 470
    name_in_namespace        go to state 471
    expr_new                 go to state 472
    expression_break         go to state 1453
    expression_continue      go to state 1454
    expression_return        go to state 1455
    expression_yield         go to state 1456
    expr_cast                go to state 473
    expr_type_decl           go to state 474
    expr_type_info           go to state 475
    block_or_lambda          go to state 476
    expr_full_block          go to state 477
    expr_numeric_const       go to state 478
    expr_named_call          go to state 479
    expr_method_call         go to state 480
    func_addr_expr           go to state 481
    expr_field               go to state 482
    expr_call                go to state 483
    expr                     go to state 1457
    expr_generator           go to state 485
    expr_mtag                go to state 486
    basic_type_declaration   go to state 487
    make_decl                go to state 488
    make_struct_decl         go to state 489
    make_tuple_call          go to state 490
    make_dim_decl            go to state 491
    make_table_decl          go to state 492
    array_comprehension      go to state 493


State 1462

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1495


State 1463

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 93 (expression_while_loop)


State 1464

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 95 (expression_with)


State 1465

  238 expression_block_finally: "finally" $@10 '{' expressions $@11 . '}'

    '}'  shift, and go to state 1496


State 1466

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 1497


State 1467

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1498
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1468

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1499


State 1469

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@38 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 519 ($@38)

    $@38  go to state 1500


State 1470

  512 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 512 (structure_variable_declaration)


State 1471

  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  783 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 975
    ')'  shift, and go to state 1501


State 1472

  784 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  836 optional_comma: ',' .

    '('  shift, and go to state 1502

    $default  reduce using rule 836 (optional_comma)


State 1473

  786 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 786 (make_struct_dim_decl)


State 1474

  793 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 793 (make_struct_decl)


State 1475

  796 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 796 (make_struct_decl)


State 1476

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 322 (expr_type_info)


State 1477

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1503


State 1478

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1504


State 1479

  818 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 818 (make_dim_decl)


State 1480

  826 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 826 (make_dim_decl)


State 1481

  808 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 808 (make_tuple_call)


State 1482

  834 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1505


State 1483

  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1506


State 1484

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ';'    shift, and go to state 1482

    $default  reduce using rule 833 (array_comprehension_where)

    array_comprehension_where  go to state 1507


State 1485

  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1508


State 1486

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 780 (make_struct_fields)


State 1487

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  779 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 779 (make_struct_fields)


State 1488

   66 expression_else: "else" . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1509


State 1489

   59 elif_or_static_elif: "elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1490

   60 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 60 (elif_or_static_elif)


State 1491

   67 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1510


State 1492

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 87 (expression_if_then_else)


State 1493

   83 expression_if_block: $@2 '{' . expressions $@3 '}' expression_block_finally

    $default  reduce using rule 262 (expressions)

    expressions  go to state 1511


State 1494

   85 expression_if_block: $@4 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1512


State 1495

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1513
    $@12              go to state 406


State 1496

  238 expression_block_finally: "finally" $@10 '{' expressions $@11 '}' .

    $default  reduce using rule 238 (expression_block_finally)


State 1497

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1514
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1498

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 611
    "as"                   shift, and go to state 612
    "<<"                   shift, and go to state 613
    ">>"                   shift, and go to state 614
    "++"                   shift, and go to state 615
    "--"                   shift, and go to state 616
    "<="                   shift, and go to state 617
    ">="                   shift, and go to state 618
    "=="                   shift, and go to state 619
    "!="                   shift, and go to state 620
    "->"                   shift, and go to state 621
    "??"                   shift, and go to state 622
    "?."                   shift, and go to state 623
    "?["                   shift, and go to state 624
    "<|"                   shift, and go to state 625
    "|>"                   shift, and go to state 626
    "<<<"                  shift, and go to state 627
    ">>>"                  shift, and go to state 628
    "&&"                   shift, and go to state 629
    "||"                   shift, and go to state 630
    "^^"                   shift, and go to state 631
    ".."                   shift, and go to state 632
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 633
    '|'                    shift, and go to state 634
    '^'                    shift, and go to state 635
    '&'                    shift, and go to state 636
    '<'                    shift, and go to state 637
    '>'                    shift, and go to state 638
    '-'                    shift, and go to state 639
    '+'                    shift, and go to state 640
    '*'                    shift, and go to state 641
    '/'                    shift, and go to state 642
    '%'                    shift, and go to state 643
    '.'                    shift, and go to state 644
    '['                    shift, and go to state 645
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1515


State 1499

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1516


State 1500

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 187
    "bool"      shift, and go to state 188
    "string"    shift, and go to state 189
    "int"       shift, and go to state 190
    "int2"      shift, and go to state 191
    "int3"      shift, and go to state 192
    "int4"      shift, and go to state 193
    "uint"      shift, and go to state 194
    "uint2"     shift, and go to state 195
    "uint3"     shift, and go to state 196
    "uint4"     shift, and go to state 197
    "float"     shift, and go to state 198
    "float2"    shift, and go to state 199
    "float3"    shift, and go to state 200
    "float4"    shift, and go to state 201
    "range"     shift, and go to state 202
    "urange"    shift, and go to state 203
    "range64"   shift, and go to state 204
    "urange64"  shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1517


State 1501

  783 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 783 (make_struct_dim_list)


State 1502

  784 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 759
    "name"  shift, and go to state 966

    make_struct_fields  go to state 1518


State 1503

  812 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 812 (make_dim_decl)


State 1504

  815 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 815 (make_dim_decl)


State 1505

  834 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1519
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1506

  837 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 837 (array_comprehension)


State 1507

  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1520


State 1508

  839 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 839 (array_comprehension)


State 1509

   66 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1521
    $@12              go to state 406


State 1510

   67 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1522
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1511

   83 expression_if_block: $@2 '{' expressions . $@3 '}' expression_block_finally
  263 expressions: expressions . expression_any
  264            | expressions . error

    error                             shift, and go to state 864
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 865
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 866
    "try"                             shift, and go to state 867
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 868
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 869
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 870
    "pass"                            shift, and go to state 871
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 872
    "goto"                            shift, and go to state 873
    "unsafe"                          shift, and go to state 874
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 875
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 82 ($@3)

    SEMICOLON                         go to state 876
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 877
    expression_goto                   go to state 878
    expression_if_one_liner           go to state 879
    $@3                               go to state 1523
    expression_if_then_else           go to state 880
    $@5                               go to state 881
    expression_if_then_else_oneliner  go to state 882
    expression_for_loop               go to state 883
    $@6                               go to state 884
    expression_unsafe                 go to state 885
    expression_while_loop             go to state 886
    $@7                               go to state 887
    expression_with                   go to state 888
    $@8                               go to state 889
    expression_with_alias             go to state 890
    expr_call_pipe                    go to state 470
    expression_any                    go to state 892
    name_in_namespace                 go to state 471
    expression_delete                 go to state 893
    expr_new                          go to state 472
    expression_break                  go to state 894
    expression_continue               go to state 895
    expression_return                 go to state 896
    expression_yield                  go to state 897
    expression_try_catch              go to state 898
    kwd_let                           go to state 899
    expression_let                    go to state 900
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 901
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 902
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 1512

   85 expression_if_block: $@4 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 85 (expression_if_block)


State 1513

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 90 (expression_for_loop)


State 1514

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 611
    "as"                   shift, and go to state 612
    "<<"                   shift, and go to state 613
    ">>"                   shift, and go to state 614
    "++"                   shift, and go to state 615
    "--"                   shift, and go to state 616
    "<="                   shift, and go to state 617
    ">="                   shift, and go to state 618
    "=="                   shift, and go to state 619
    "!="                   shift, and go to state 620
    "->"                   shift, and go to state 621
    "??"                   shift, and go to state 622
    "?."                   shift, and go to state 623
    "?["                   shift, and go to state 624
    "<|"                   shift, and go to state 625
    "|>"                   shift, and go to state 626
    "<<<"                  shift, and go to state 627
    ">>>"                  shift, and go to state 628
    "&&"                   shift, and go to state 629
    "||"                   shift, and go to state 630
    "^^"                   shift, and go to state 631
    ".."                   shift, and go to state 632
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 633
    '|'                    shift, and go to state 634
    '^'                    shift, and go to state 635
    '&'                    shift, and go to state 636
    '<'                    shift, and go to state 637
    '>'                    shift, and go to state 638
    '-'                    shift, and go to state 639
    '+'                    shift, and go to state 640
    '*'                    shift, and go to state 641
    '/'                    shift, and go to state 642
    '%'                    shift, and go to state 643
    '.'                    shift, and go to state 644
    '['                    shift, and go to state 645
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1524


State 1515

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 304 (tuple_expansion_variable_declaration)


State 1516

  518 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON .

    $default  reduce using rule 518 (struct_variable_declaration_list)


State 1517

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1525


State 1518

  775 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  776                   | make_struct_fields . ',' "name" ":=" expr
  779                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  784 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 975
    ')'  shift, and go to state 1526


State 1519

  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'
  834 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645

    $default  reduce using rule 834 (array_comprehension_where)


State 1520

  838 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 838 (array_comprehension)


State 1521

   66 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 66 (expression_else)


State 1522

   67 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  371 expr_method_call: expr . "->" "name" '(' ')'
  372                 | expr . "->" "name" '(' expr_list ')'
  382 expr_field: expr . '.' "name"
  383           | expr . '.' '.' "name"
  384           | expr . '.' "name" '(' ')'
  385           | expr . '.' "name" '(' expr_list ')'
  386           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  387           | expr . '.' basic_type_declaration '(' ')'
  388           | expr . '.' basic_type_declaration '(' expr_list ')'
  391           | expr . '.' $@28 error $@29
  413 expr: expr . "<<" expr
  414     | expr . ">>" expr
  415     | expr . "<<<" expr
  416     | expr . ">>>" expr
  417     | expr . '+' expr
  418     | expr . '-' expr
  419     | expr . '*' expr
  420     | expr . '/' expr
  421     | expr . '%' expr
  422     | expr . '<' expr
  423     | expr . '>' expr
  424     | expr . "==" expr
  425     | expr . "!=" expr
  426     | expr . "<=" expr
  427     | expr . ">=" expr
  428     | expr . '&' expr
  429     | expr . '|' expr
  430     | expr . '^' expr
  431     | expr . "&&" expr
  432     | expr . "||" expr
  433     | expr . "^^" expr
  434     | expr . ".." expr
  437     | expr . "++"
  438     | expr . "--"
  440     | expr . '[' expr ']'
  441     | expr . '.' '[' expr ']'
  442     | expr . "?[" expr ']'
  443     | expr . '.' "?[" expr ']'
  444     | expr . "?." "name"
  445     | expr . '.' "?." "name"
  452     | expr . "??" expr
  453     | expr . '?' expr ':' expr
  456     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  457     | expr . "is" basic_type_declaration
  458     | expr . "is" "name"
  459     | expr . "as" "name"
  462     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  463     | expr . "as" basic_type_declaration
  464     | expr . '?' "as" "name"
  467     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  468     | expr . '?' "as" basic_type_declaration
  476     | expr . "<|" expr
  477     | expr . "|>" expr
  478     | expr . "|>" basic_type_declaration
  492 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr . "?." "$f" '(' expr ')'
  494          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr . "as" "$f" '(' expr ')'
  497          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 611
    "as"   shift, and go to state 612
    "<<"   shift, and go to state 613
    ">>"   shift, and go to state 614
    "++"   shift, and go to state 615
    "--"   shift, and go to state 616
    "<="   shift, and go to state 617
    ">="   shift, and go to state 618
    "=="   shift, and go to state 619
    "!="   shift, and go to state 620
    "->"   shift, and go to state 621
    "??"   shift, and go to state 622
    "?."   shift, and go to state 623
    "?["   shift, and go to state 624
    "<|"   shift, and go to state 625
    "|>"   shift, and go to state 626
    "<<<"  shift, and go to state 627
    ">>>"  shift, and go to state 628
    "&&"   shift, and go to state 629
    "||"   shift, and go to state 630
    "^^"   shift, and go to state 631
    ".."   shift, and go to state 632
    '?'    shift, and go to state 633
    '|'    shift, and go to state 634
    '^'    shift, and go to state 635
    '&'    shift, and go to state 636
    '<'    shift, and go to state 637
    '>'    shift, and go to state 638
    '-'    shift, and go to state 639
    '+'    shift, and go to state 640
    '*'    shift, and go to state 641
    '/'    shift, and go to state 642
    '%'    shift, and go to state 643
    '.'    shift, and go to state 644
    '['    shift, and go to state 645
    ')'    shift, and go to state 1527


State 1523

   83 expression_if_block: $@2 '{' expressions $@3 . '}' expression_block_finally

    '}'  shift, and go to state 1528


State 1524

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 303 (tuple_expansion_variable_declaration)


State 1525

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1529
    $@12              go to state 406


State 1526

  784 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 784 (make_struct_dim_list)


State 1527

   67 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1530


State 1528

   83 expression_if_block: $@2 '{' expressions $@3 '}' . expression_block_finally

    "finally"  shift, and go to state 1205

    $default  reduce using rule 235 (expression_block_finally)

    expression_block_finally  go to state 1531


State 1529

  520 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 520 (struct_variable_declaration_list)


State 1530

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 239 ($@12)

    expression_block  go to state 1532
    $@12              go to state 406


State 1531

   83 expression_if_block: $@2 '{' expressions $@3 '}' expression_block_finally .

    $default  reduce using rule 83 (expression_if_block)


State 1532

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1488
    "elif"         shift, and go to state 1489
    "static_elif"  shift, and go to state 1490

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1491
    expression_else      go to state 1533


State 1533

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 67 (expression_else)
