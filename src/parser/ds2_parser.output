Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1422 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 format_string: %empty
   34              | format_string STRING_CHARACTER

   35 optional_format_string: %empty

   36 $@1: %empty

   37 optional_format_string: ':' $@1 format_string

   38 string_builder_body: %empty
   39                    | string_builder_body character_sequence
   40                    | string_builder_body "{" expr optional_format_string "}"

   41 string_builder: "start of the string" string_builder_body "end of the string"

   42 reader_character_sequence: STRING_CHARACTER
   43                          | reader_character_sequence STRING_CHARACTER

   44 $@2: %empty

   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   46 options_declaration: "options" annotation_argument_list

   47 require_declaration: "require" require_module

   48 require_module_name: "name"
   49                    | '%' require_module_name
   50                    | require_module_name '.' "name"
   51                    | require_module_name '/' "name"

   52 require_module: require_module_name is_public_module
   53               | require_module_name "as" "name" is_public_module

   54 is_public_module: %empty
   55                 | "public"

   56 expect_declaration: "expect" expect_list

   57 expect_list: expect_error
   58            | expect_list ',' expect_error

   59 expect_error: "integer constant"
   60             | "integer constant" ':' "integer constant"

   61 expression_label: "label" "integer constant" ':'

   62 expression_goto: "goto" "label" "integer constant"
   63                | "goto" expr

   64 elif_or_static_elif: "elif"
   65                    | "static_elif"

   66 emit_semis: "new line, semicolon"
   67           | emit_semis "new line, semicolon"

   68 optional_emit_semis: %empty
   69                    | emit_semis

   70 expression_else: %empty
   71                | "else" optional_emit_semis expression_block
   72                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   73 if_or_static_if: "if"
   74                | "static_if"

   75 expression_else_one_liner: %empty
   76                          | "else" expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return
   79                        | expression_yield
   80                        | expression_break
   81                        | expression_continue

   82 semis: SEMICOLON
   83      | semis SEMICOLON

   84 optional_semis: %empty
   85               | semis

   86 $@3: %empty

   87 $@4: %empty

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   89 $@5: %empty

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   91 $@6: %empty

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   94 $@7: %empty

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   96 expression_unsafe: "unsafe" optional_emit_semis expression_block

   97 $@8: %empty

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block

   99 $@9: %empty

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block

  101 expression_with_alias: "assume" "name" '=' expr

  102 annotation_argument_value: string_constant
  103                          | "name"
  104                          | "integer constant"
  105                          | "floating point constant"
  106                          | "true"
  107                          | "false"

  108 annotation_argument_value_list: annotation_argument_value
  109                               | annotation_argument_value_list ',' annotation_argument_value

  110 annotation_argument_name: "name"
  111                         | "type"
  112                         | "in"

  113 annotation_argument: annotation_argument_name '=' string_constant
  114                    | annotation_argument_name '=' "name"
  115                    | annotation_argument_name '=' "integer constant"
  116                    | annotation_argument_name '=' "floating point constant"
  117                    | annotation_argument_name '=' "true"
  118                    | annotation_argument_name '=' "false"
  119                    | annotation_argument_name
  120                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  121 annotation_argument_list: annotation_argument
  122                         | annotation_argument_list ',' annotation_argument

  123 metadata_argument_list: '@' annotation_argument optional_emit_semis
  124                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  125 annotation_declaration_name: name_in_namespace
  126                            | "require"
  127                            | "private"
  128                            | "template"

  129 annotation_declaration_basic: annotation_declaration_name
  130                             | annotation_declaration_name '(' annotation_argument_list ')'

  131 annotation_declaration: annotation_declaration_basic
  132                       | '!' annotation_declaration
  133                       | annotation_declaration "&&" annotation_declaration
  134                       | annotation_declaration "||" annotation_declaration
  135                       | annotation_declaration "^^" annotation_declaration
  136                       | '(' annotation_declaration ')'
  137                       | "|>" annotation_declaration

  138 annotation_list: annotation_declaration
  139                | annotation_list ',' annotation_declaration

  140 optional_annotation_list: %empty
  141                         | '[' annotation_list ']'

  142 optional_annotation_list_with_emit_semis: %empty
  143                                         | '[' annotation_list ']' optional_emit_semis

  144 optional_function_argument_list: %empty
  145                                | '(' ')'
  146                                | '(' function_argument_list ')'

  147 optional_function_type: %empty
  148                       | ':' type_declaration

  149 function_name: "name"
  150              | "operator" '!'
  151              | "operator" '~'
  152              | "operator" "+="
  153              | "operator" "-="
  154              | "operator" "*="
  155              | "operator" "/="
  156              | "operator" "%="
  157              | "operator" "&="
  158              | "operator" "|="
  159              | "operator" "^="
  160              | "operator" "&&="
  161              | "operator" "||="
  162              | "operator" "^^="
  163              | "operator" "&&"
  164              | "operator" "||"
  165              | "operator" "^^"
  166              | "operator" '+'
  167              | "operator" '-'
  168              | "operator" '*'
  169              | "operator" '/'
  170              | "operator" '%'
  171              | "operator" '<'
  172              | "operator" '>'
  173              | "operator" ".."
  174              | "operator" "=="
  175              | "operator" "!="
  176              | "operator" "<="
  177              | "operator" ">="
  178              | "operator" '&'
  179              | "operator" '|'
  180              | "operator" '^'
  181              | "++" "operator"
  182              | "--" "operator"
  183              | "operator" "++"
  184              | "operator" "--"
  185              | "operator" "<<"
  186              | "operator" ">>"
  187              | "operator" "<<="
  188              | "operator" ">>="
  189              | "operator" "<<<"
  190              | "operator" ">>>"
  191              | "operator" "<<<="
  192              | "operator" ">>>="
  193              | "operator" '[' ']'
  194              | "operator" "?[" ']'
  195              | "operator" '.'
  196              | "operator" "?."
  197              | "operator" '.' "name"
  198              | "operator" '.' "name" ":="
  199              | "operator" "?." "name"
  200              | "operator" ":="
  201              | "operator" "delete"
  202              | "operator" "??"
  203              | "operator" "is"
  204              | "operator" "as"
  205              | "operator" "is" "name"
  206              | "operator" "as" "name"
  207              | "operator" '?' "as"
  208              | "operator" '?' "as" "name"
  209              | "bool"
  210              | "string"
  211              | "int"
  212              | "int2"
  213              | "int3"
  214              | "int4"
  215              | "uint"
  216              | "uint2"
  217              | "uint3"
  218              | "uint4"
  219              | "float"
  220              | "float2"
  221              | "float3"
  222              | "float4"
  223              | "range"
  224              | "urange"
  225              | "range64"
  226              | "urange64"
  227              | "int64"
  228              | "uint64"
  229              | "double"
  230              | "int8"
  231              | "uint8"
  232              | "int16"
  233              | "uint16"

  234 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  235 optional_public_or_private_function: %empty
  236                                    | "private"
  237                                    | "public"

  238 function_declaration_header: function_name optional_function_argument_list optional_function_type

  239 $@10: %empty

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block

  241 expression_block_finally: %empty

  242 $@11: %empty

  243 $@12: %empty

  244 expression_block_finally: "finally" $@11 '{' expressions $@12 '}'

  245 $@13: %empty

  246 $@14: %empty

  247 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally

  248 expr_call_pipe: expr_call expr_full_block_assumed_piped

  249 expression_any: SEMICOLON
  250               | expr_assign SEMICOLON
  251               | expression_delete SEMICOLON
  252               | expression_let
  253               | expression_while_loop
  254               | expression_unsafe
  255               | expression_with
  256               | expression_with_alias SEMICOLON
  257               | expression_for_loop
  258               | expression_break SEMICOLON
  259               | expression_continue SEMICOLON
  260               | expression_return SEMICOLON
  261               | expression_yield SEMICOLON
  262               | expression_if_then_else
  263               | expression_if_then_else_oneliner
  264               | expression_try_catch
  265               | expression_label SEMICOLON
  266               | expression_goto SEMICOLON
  267               | "pass" SEMICOLON

  268 expressions: %empty
  269            | expressions expression_any
  270            | expressions error

  271 optional_expr_list: %empty
  272                   | expr_list optional_comma

  273 optional_expr_map_tuple_list: %empty
  274                             | expr_map_tuple_list optional_comma

  275 type_declaration_no_options_list: type_declaration
  276                                 | type_declaration_no_options_list c_or_s type_declaration

  277 name_in_namespace: "name"
  278                  | "name" "::" "name"
  279                  | "::" "name"

  280 expression_delete: "delete" expr
  281                  | "delete" "explicit" expr

  282 $@15: %empty

  283 $@16: %empty

  284 new_type_declaration: '<' $@15 type_declaration '>' $@16
  285                     | structure_type_declaration

  286 expr_new: "new" new_type_declaration
  287         | "new" new_type_declaration '(' use_initializer ')'
  288         | "new" new_type_declaration '(' expr_list ')'
  289         | "new" new_type_declaration '(' make_struct_single ')'
  290         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  291         | "new" make_decl

  292 expression_break: "break"

  293 expression_continue: "continue"

  294 expression_return: "return"
  295                  | "return" expr
  296                  | "return" "<-" expr

  297 expression_yield: "yield" expr
  298                 | "yield" "<-" expr

  299 expression_try_catch: "try" expression_block "recover" expression_block

  300 kwd_let_var_or_nothing: "let"
  301                       | "var"
  302                       | %empty

  303 kwd_let: "let"
  304        | "var"

  305 optional_in_scope: "inscope"
  306                  | %empty

  307 tuple_expansion: "name"
  308                | tuple_expansion ',' "name"

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  311 expression_let: kwd_let optional_in_scope let_variable_declaration
  312               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  313               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  314 $@17: %empty

  315 $@18: %empty

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr

  317 $@19: %empty

  318 $@20: %empty

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr

  320 $@21: %empty

  321 $@22: %empty

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr

  323 $@23: %empty

  324 $@24: %empty

  325 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  327               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  329 expr_list: expr
  330          | expr_list ',' expr

  331 block_or_simple_block: expression_block
  332                      | "=>" expr
  333                      | "=>" "<-" expr

  334 block_or_lambda: '$'
  335                | '@'
  336                | '@' '@'

  337 capture_entry: '&' "name"
  338              | '=' "name"
  339              | "<-" "name"
  340              | ":=" "name"
  341              | "name" '(' "name" ')'

  342 capture_list: capture_entry
  343             | capture_list ',' capture_entry

  344 optional_capture_list: %empty
  345                      | "capture" '(' capture_list ')'

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  348                              | '{' expressions '}'

  349 expr_numeric_const: "integer constant"
  350                   | "unsigned integer constant"
  351                   | "long integer constant"
  352                   | "unsigned long integer constant"
  353                   | "unsigned int8 constant"
  354                   | "floating point constant"
  355                   | "double constant"

  356 expr_assign: expr
  357            | expr '=' expr
  358            | expr "<-" expr
  359            | expr ":=" expr
  360            | expr "&=" expr
  361            | expr "|=" expr
  362            | expr "^=" expr
  363            | expr "&&=" expr
  364            | expr "||=" expr
  365            | expr "^^=" expr
  366            | expr "+=" expr
  367            | expr "-=" expr
  368            | expr "*=" expr
  369            | expr "/=" expr
  370            | expr "%=" expr
  371            | expr "<<=" expr
  372            | expr ">>=" expr
  373            | expr "<<<=" expr
  374            | expr ">>>=" expr

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  376                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  377 expr_method_call: expr "->" "name" '(' ')'
  378                 | expr "->" "name" '(' expr_list ')'

  379 func_addr_name: name_in_namespace
  380               | "$i" '(' expr ')'

  381 func_addr_expr: '@' '@' func_addr_name

  382 $@25: %empty

  383 $@26: %empty

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name

  385 $@27: %empty

  386 $@28: %empty

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

  388 expr_field: expr '.' "name"
  389           | expr '.' '.' "name"
  390           | expr '.' "name" '(' ')'
  391           | expr '.' "name" '(' expr_list ')'
  392           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr '.' basic_type_declaration '(' ')'
  394           | expr '.' basic_type_declaration '(' expr_list ')'

  395 $@29: %empty

  396 $@30: %empty

  397 expr_field: expr '.' $@29 error $@30

  398 expr_call: name_in_namespace '(' ')'
  399          | name_in_namespace '(' "uninitialized" ')'
  400          | name_in_namespace '(' make_struct_single ')'
  401          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  402          | name_in_namespace '(' expr_list ')'
  403          | basic_type_declaration '(' ')'
  404          | basic_type_declaration '(' expr_list ')'

  405 expr: "null"
  406     | name_in_namespace
  407     | expr_numeric_const
  408     | expr_reader
  409     | string_builder
  410     | make_decl
  411     | "true"
  412     | "false"
  413     | expr_field
  414     | expr_mtag
  415     | '!' expr
  416     | '~' expr
  417     | '+' expr
  418     | '-' expr
  419     | expr "<<" expr
  420     | expr ">>" expr
  421     | expr "<<<" expr
  422     | expr ">>>" expr
  423     | expr '+' expr
  424     | expr '-' expr
  425     | expr '*' expr
  426     | expr '/' expr
  427     | expr '%' expr
  428     | expr '<' expr
  429     | expr '>' expr
  430     | expr "==" expr
  431     | expr "!=" expr
  432     | expr "<=" expr
  433     | expr ">=" expr
  434     | expr '&' expr
  435     | expr '|' expr
  436     | expr '^' expr
  437     | expr "&&" expr
  438     | expr "||" expr
  439     | expr "^^" expr
  440     | expr ".." expr
  441     | "++" expr
  442     | "--" expr
  443     | expr "++"
  444     | expr "--"
  445     | '(' expr_list optional_comma ')'
  446     | '(' make_struct_single ')'
  447     | expr '[' expr ']'
  448     | expr '.' '[' expr ']'
  449     | expr "?[" expr ']'
  450     | expr '.' "?[" expr ']'
  451     | expr "?." "name"
  452     | expr '.' "?." "name"
  453     | func_addr_expr
  454     | expr_call
  455     | '*' expr
  456     | "deref" '(' expr ')'
  457     | "addr" '(' expr ')'
  458     | expr_generator
  459     | expr "??" expr
  460     | expr '?' expr ':' expr

  461 $@31: %empty

  462 $@32: %empty

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr "is" basic_type_declaration
  465     | expr "is" "name"
  466     | expr "as" "name"

  467 $@33: %empty

  468 $@34: %empty

  469 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr "as" basic_type_declaration
  471     | expr '?' "as" "name"

  472 $@35: %empty

  473 $@36: %empty

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr '?' "as" basic_type_declaration
  476     | expr_type_info
  477     | expr_type_decl
  478     | expr_cast
  479     | expr_new
  480     | expr_method_call
  481     | expr_named_call
  482     | expr_full_block
  483     | expr "<|" expr
  484     | expr "|>" expr
  485     | expr "|>" basic_type_declaration
  486     | expr_call_pipe
  487     | "unsafe" '(' expr ')'

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  489               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  490               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  491 expr_mtag: "$$" '(' expr ')'
  492          | "$i" '(' expr ')'
  493          | "$v" '(' expr ')'
  494          | "$b" '(' expr ')'
  495          | "$a" '(' expr ')'
  496          | "..."
  497          | "$c" '(' expr ')' '(' ')'
  498          | "$c" '(' expr ')' '(' expr_list ')'
  499          | expr '.' "$f" '(' expr ')'
  500          | expr "?." "$f" '(' expr ')'
  501          | expr '.' '.' "$f" '(' expr ')'
  502          | expr '.' "?." "$f" '(' expr ')'
  503          | expr "as" "$f" '(' expr ')'
  504          | expr '?' "as" "$f" '(' expr ')'
  505          | expr "is" "$f" '(' expr ')'
  506          | '@' '@' "$c" '(' expr ')'

  507 optional_field_annotation: %empty
  508                          | metadata_argument_list

  509 optional_override: %empty
  510                  | "override"
  511                  | "sealed"

  512 optional_constant: %empty
  513                  | "const"

  514 optional_public_or_private_member_variable: %empty
  515                                           | "public"
  516                                           | "private"

  517 optional_static_member_variable: %empty
  518                                | "static"

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  520 struct_variable_declaration_list: %empty
  521                                 | struct_variable_declaration_list "new line, semicolon"

  522 $@37: %empty

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON

  524 $@38: %empty

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON

  526 $@39: %empty

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

  528 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  529                              | "$a" '(' expr ')'

  530 function_argument_list: function_argument_declaration
  531                       | function_argument_list ';' function_argument_declaration

  532 tuple_type: type_declaration
  533           | "name" ':' type_declaration

  534 tuple_type_list: tuple_type
  535                | tuple_type_list c_or_s tuple_type

  536 tuple_alias_type_list: %empty
  537                      | tuple_type
  538                      | tuple_alias_type_list semis tuple_type

  539 variant_type: "name" ':' type_declaration

  540 variant_type_list: variant_type
  541                  | variant_type_list c_or_s variant_type

  542 variant_alias_type_list: %empty
  543                        | variant_type
  544                        | variant_alias_type_list semis variant_type

  545 copy_or_move: '='
  546             | "<-"

  547 variable_declaration: variable_name_with_pos_list
  548                     | variable_name_with_pos_list '&'
  549                     | variable_name_with_pos_list ':' type_declaration
  550                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  551                     | variable_name_with_pos_list copy_or_move expr

  552 copy_or_move_or_clone: '='
  553                      | "<-"
  554                      | ":="

  555 optional_ref: %empty
  556             | '&'

  557 let_variable_name_with_pos_list: "name"
  558                                | "$i" '(' expr ')'
  559                                | "name" "aka" "name"
  560                                | let_variable_name_with_pos_list ',' "name"
  561                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  562 global_let_variable_name_with_pos_list: "name"
  563                                       | global_let_variable_name_with_pos_list ',' "name"

  564 variable_declaration_list: %empty
  565                          | variable_declaration_list SEMICOLON
  566                          | variable_declaration_list let_variable_declaration

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  568                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  569                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  570 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  571                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  572                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  573 optional_shared: %empty
  574                | "shared"

  575 optional_public_or_private_variable: %empty
  576                                    | "private"
  577                                    | "public"

  578 global_variable_declaration_list: %empty
  579                                 | global_variable_declaration_list SEMICOLON

  580 $@40: %empty

  581 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration

  582 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  583 $@41: %empty

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

  585 enum_expression: "name"
  586                | "name" '=' expr

  587 commas: COMMA
  588       | commas COMMA

  589 enum_list: %empty
  590          | enum_expression
  591          | enum_list commas enum_expression

  592 optional_public_or_private_alias: %empty
  593                                 | "private"
  594                                 | "public"

  595 $@42: %empty

  596 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration

  597 alias_declaration: "typedef" single_alias SEMICOLON

  598 optional_public_or_private_enum: %empty
  599                                | "private"
  600                                | "public"

  601 enum_name: "name"

  602 optional_enum_basic_type_declaration: %empty
  603                                     | ':' enum_basic_type_declaration

  604 optional_commas: %empty
  605                | commas

  606 emit_commas: "new line, comma"
  607            | emit_commas "new line, comma"

  608 optional_emit_commas: %empty
  609                     | emit_commas

  610 $@43: %empty

  611 $@44: %empty

  612 $@45: %empty

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

  614 optional_structure_parent: %empty
  615                          | ':' name_in_namespace

  616 optional_sealed: %empty
  617                | "sealed"

  618 structure_name: optional_sealed "name" optional_structure_parent

  619 class_or_struct: "class"
  620                | "struct"
  621                | "template" "class"
  622                | "template" "struct"

  623 optional_public_or_private_structure: %empty
  624                                     | "private"
  625                                     | "public"

  626 optional_struct_variable_declaration_list: ';'
  627                                          | '{' struct_variable_declaration_list '}'

  628 $@46: %empty

  629 $@47: %empty

  630 $@48: %empty

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

  632 variable_name_with_pos_list: "name"
  633                            | "$i" '(' expr ')'
  634                            | "name" "aka" "name"
  635                            | variable_name_with_pos_list ',' "name"
  636                            | variable_name_with_pos_list ',' "name" "aka" "name"

  637 basic_type_declaration: "bool"
  638                       | "string"
  639                       | "int"
  640                       | "int8"
  641                       | "int16"
  642                       | "int64"
  643                       | "int2"
  644                       | "int3"
  645                       | "int4"
  646                       | "uint"
  647                       | "uint8"
  648                       | "uint16"
  649                       | "uint64"
  650                       | "uint2"
  651                       | "uint3"
  652                       | "uint4"
  653                       | "float"
  654                       | "float2"
  655                       | "float3"
  656                       | "float4"
  657                       | "void"
  658                       | "range"
  659                       | "urange"
  660                       | "range64"
  661                       | "urange64"
  662                       | "double"
  663                       | "bitfield"

  664 enum_basic_type_declaration: "int"
  665                            | "int8"
  666                            | "int16"
  667                            | "uint"
  668                            | "uint8"
  669                            | "uint16"
  670                            | "int64"
  671                            | "uint64"

  672 structure_type_declaration: name_in_namespace

  673 auto_type_declaration: "auto"
  674                      | "auto" '(' "name" ')'
  675                      | "$t" '(' expr ')'

  676 bitfield_bits: "name"
  677              | bitfield_bits ';' "name"

  678 bitfield_alias_bits: %empty
  679                    | "name"
  680                    | bitfield_alias_bits commas "name"

  681 $@49: %empty

  682 $@50: %empty

  683 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50

  684 c_or_s: COMMA
  685       | SEMICOLON

  686 table_type_pair: type_declaration
  687                | type_declaration c_or_s type_declaration

  688 dim_list: '[' expr ']'
  689         | '[' ']'
  690         | dim_list '[' expr ']'
  691         | dim_list '[' ']'

  692 type_declaration_no_options: type_declaration_no_options_no_dim
  693                            | type_declaration_no_options_no_dim dim_list

  694 type_declaration_no_options_no_dim: basic_type_declaration
  695                                   | auto_type_declaration
  696                                   | bitfield_type_declaration
  697                                   | structure_type_declaration

  698 $@51: %empty

  699 $@52: %empty

  700 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52
  701                                   | "typedecl" '(' expr ')'
  702                                   | '$' name_in_namespace '(' optional_expr_list ')'

  703 $@53: %empty

  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  705                                   | type_declaration_no_options '-' '[' ']'
  706                                   | type_declaration_no_options "explicit"
  707                                   | type_declaration_no_options "const"
  708                                   | type_declaration_no_options '-' "const"
  709                                   | type_declaration_no_options '&'
  710                                   | type_declaration_no_options '-' '&'
  711                                   | type_declaration_no_options '#'
  712                                   | type_declaration_no_options "implicit"
  713                                   | type_declaration_no_options '-' '#'
  714                                   | type_declaration_no_options "==" "const"
  715                                   | type_declaration_no_options "==" '&'
  716                                   | type_declaration_no_options '?'

  717 $@54: %empty

  718 $@55: %empty

  719 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55
  720                                   | type_declaration_no_options "??"

  721 $@56: %empty

  722 $@57: %empty

  723 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57

  724 $@58: %empty

  725 $@59: %empty

  726 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59

  727 $@60: %empty

  728 $@61: %empty

  729 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61
  730                                   | "block"

  731 $@62: %empty

  732 $@63: %empty

  733 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63

  734 $@64: %empty

  735 $@65: %empty

  736 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  737                                   | "function"

  738 $@66: %empty

  739 $@67: %empty

  740 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67

  741 $@68: %empty

  742 $@69: %empty

  743 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69
  744                                   | "lambda"

  745 $@70: %empty

  746 $@71: %empty

  747 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71

  748 $@72: %empty

  749 $@73: %empty

  750 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73

  751 $@74: %empty

  752 $@75: %empty

  753 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75

  754 $@76: %empty

  755 $@77: %empty

  756 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77

  757 type_declaration: type_declaration_no_options
  758                 | type_declaration '|' type_declaration_no_options
  759                 | type_declaration '|' '#'

  760 $@78: %empty

  761 $@79: %empty

  762 $@80: %empty

  763 $@81: %empty

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

  765 $@82: %empty

  766 $@83: %empty

  767 $@84: %empty

  768 $@85: %empty

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

  770 $@86: %empty

  771 $@87: %empty

  772 $@88: %empty

  773 $@89: %empty

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

  775 make_decl: make_struct_decl
  776          | make_dim_decl
  777          | make_table_decl
  778          | array_comprehension
  779          | make_tuple_call

  780 make_struct_fields: "name" copy_or_move expr
  781                   | "name" ":=" expr
  782                   | make_struct_fields ',' "name" copy_or_move expr
  783                   | make_struct_fields ',' "name" ":=" expr
  784                   | "$f" '(' expr ')' copy_or_move expr
  785                   | "$f" '(' expr ')' ":=" expr
  786                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  788 make_variant_dim: %empty
  789                 | make_struct_fields

  790 make_struct_single: make_struct_fields

  791 make_struct_dim_list: '(' make_struct_fields ')'
  792                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  793 make_struct_dim_decl: make_struct_fields
  794                     | make_struct_dim_list optional_comma

  795 optional_make_struct_dim_decl: make_struct_dim_decl
  796                              | %empty

  797 use_initializer: %empty
  798                | "uninitialized"

  799 $@90: %empty

  800 $@91: %empty

  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  802 $@92: %empty

  803 $@93: %empty

  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

  805 $@94: %empty

  806 $@95: %empty

  807 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

  808 $@96: %empty

  809 $@97: %empty

  810 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer

  811 make_map_tuple: expr "=>" expr
  812               | expr

  813 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  814 $@98: %empty

  815 $@99: %empty

  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  817 make_dim_decl: '[' optional_expr_list ']'

  818 $@100: %empty

  819 $@101: %empty

  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  821 $@102: %empty

  822 $@103: %empty

  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

  824 $@104: %empty

  825 $@105: %empty

  826 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  827              | "array" '(' expr_list optional_comma ')'

  828 $@106: %empty

  829 $@107: %empty

  830 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'
  831              | "fixed_array" '(' expr_list optional_comma ')'

  832 $@108: %empty

  833 $@109: %empty

  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

  835 expr_map_tuple_list: make_map_tuple
  836                    | expr_map_tuple_list ',' make_map_tuple

  837 $@110: %empty

  838 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  839                | "table" '(' expr_map_tuple_list optional_comma ')'
  840                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  841                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  842 array_comprehension_where: %empty
  843                          | ';' "where" expr

  844 optional_comma: %empty
  845               | ','

  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  847                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  848                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 132 150 415
    '#' (35) 711 713 759
    '$' (36) 24 334 702 704
    '%' (37) 45 49 170 427
    '&' (38) 178 337 434 548 556 709 710 715
    '(' (40) 72 92 93 95 98 100 120 130 136 145 146 287 288 289 290 309 310 326 327 328 341 345 375 376 377 378 380 390 391 392 393 394 398 399 400 401 402 403 404 445 446 456 457 487 488 489 491 492 493 494 495 497 498 499 500 501 502 503 504 505 506 529 558 633 674 675 701 702 704 784 785 786 787 791 792 801 804 807 813 816 820 823 826 827 830 831 834 839 840 841 846 847 848
    ')' (41) 72 92 93 95 98 100 120 130 136 145 146 287 288 289 290 309 310 326 327 328 341 345 375 376 377 378 380 390 391 392 393 394 398 399 400 401 402 403 404 445 446 456 457 487 488 489 491 492 493 494 495 497 498 499 500 501 502 503 504 505 506 529 558 633 674 675 701 702 704 784 785 786 787 791 792 801 804 807 813 816 820 823 826 827 830 831 834 839 840 841 846 847 848
    '*' (42) 168 425 455
    '+' (43) 166 417 423
    ',' (44) 16 58 109 122 139 308 330 343 376 560 561 563 635 636 782 783 786 787 792 836 845
    '-' (45) 167 418 424 705 708 710 713
    '.' (46) 50 195 197 198 388 389 390 391 392 393 394 397 448 450 452 499 501 502
    '/' (47) 51 169 426
    ':' (58) 37 60 61 148 309 460 533 539 549 550 567 568 570 571 603 615
    ';' (59) 18 531 626 677 843 846 847 848
    '<' (60) 171 284 316 319 322 325 327 328 384 387 428 463 469 474 488 489 490 683 700 704 719 723 726 729 733 736 740 743 747 750 753 756 801 804 807 810 816 820 823 826 830 834 840 841
    '=' (61) 101 113 114 115 116 117 118 120 338 357 545 552 586 596
    '>' (62) 172 284 316 319 322 325 327 328 384 387 429 463 469 474 488 489 490 683 700 704 719 723 726 729 733 736 740 743 747 750 753 756 801 804 807 810 816 820 823 826 830 834 840 841
    '?' (63) 207 208 460 471 474 475 504 716
    '@' (64) 123 124 335 336 381 384 387 506
    '[' (91) 141 143 193 375 376 392 447 448 688 689 690 691 705 817 846 847
    ']' (93) 141 143 193 194 375 376 392 447 448 449 450 688 689 690 691 705 817 846 847
    '^' (94) 180 436
    '{' (123) 88 244 247 313 348 582 613 627 764 769 774 838 848
    '|' (124) 179 435 758 759
    '}' (125) 88 244 247 313 348 582 613 627 764 769 774 838 848
    '~' (126) 151 416
    error (256) 270 397
    "lexer error" (258)
    "capture" (259) 345
    "struct" (260) 620 622 801 820
    "class" (261) 619 621 804
    "let" (262) 300 303
    "def" (263) 234 525 527
    "while" (264) 98
    "if" (265) 73 93
    "static_if" (266) 74
    "else" (267) 71 76
    "for" (268) 95 846 847 848
    "recover" (269) 299
    "true" (270) 106 117 411
    "false" (271) 107 118 412
    "new" (272) 286 287 288 289 290 291
    "typeinfo" (273) 326 327 328
    "type" (274) 111 325 463 469 474 700
    "in" (275) 95 112 846 847 848
    "is" (276) 203 205 463 464 465 505
    "as" (277) 53 204 206 207 208 466 469 470 471 474 475 503 504
    "elif" (278) 64
    "static_elif" (279) 65
    "array" (280) 723 820 823 826 827 830
    "return" (281) 294 295 296
    "null" (282) 405
    "break" (283) 292
    "try" (284) 299
    "options" (285) 46
    "table" (286) 726 839 840 841
    "expect" (287) 56
    "const" (288) 513 707 708 714
    "require" (289) 47 126
    "operator" (290) 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
    "enum" (291) 613
    "finally" (292) 244
    "delete" (293) 201 280 281
    "deref" (294) 456
    "typedef" (295) 597
    "typedecl" (296) 701
    "with" (297) 100
    "aka" (298) 559 561 634 636
    "assume" (299) 101
    "cast" (300) 316
    "override" (301) 510
    "abstract" (302) 525
    "upcast" (303) 319
    "iterator" (304) 729 847
    "var" (305) 301 304
    "addr" (306) 457
    "continue" (307) 293
    "where" (308) 843
    "pass" (309) 267
    "reinterpret" (310) 322
    "module" (311) 26
    "public" (312) 22 55 237 515 577 594 600 625
    "label" (313) 61 62
    "goto" (314) 62 63
    "implicit" (315) 712
    "explicit" (316) 281 706
    "shared" (317) 574
    "private" (318) 23 127 236 516 576 593 599 624
    "smart_ptr" (319) 719
    "unsafe" (320) 96 487
    "inscope" (321) 305
    "static" (322) 518
    "fixed_array" (323) 831 834
    "default" (324) 810
    "uninitialized" (325) 290 399 401 798
    "bool" (326) 209 637
    "void" (327) 657
    "string" (328) 210 638
    "auto" (329) 673 674
    "int" (330) 211 639 664
    "int2" (331) 212 643
    "int3" (332) 213 644
    "int4" (333) 214 645
    "uint" (334) 215 646 667
    "bitfield" (335) 663 683 774
    "uint2" (336) 216 650
    "uint3" (337) 217 651
    "uint4" (338) 218 652
    "float" (339) 219 653
    "float2" (340) 220 654
    "float3" (341) 221 655
    "float4" (342) 222 656
    "range" (343) 223 658
    "urange" (344) 224 659
    "range64" (345) 225 660
    "urange64" (346) 226 661
    "block" (347) 730 733 736
    "int64" (348) 227 642 670
    "uint64" (349) 228 649 671
    "double" (350) 229 662
    "function" (351) 737 740 743
    "lambda" (352) 744 747 750
    "int8" (353) 230 640 665
    "uint8" (354) 231 647 668
    "int16" (355) 232 641 666
    "uint16" (356) 233 648 669
    "tuple" (357) 753 764 813 816 823
    "variant" (358) 756 769 807 826
    "generator" (359) 488 489 490
    "yield" (360) 297 298
    "sealed" (361) 511 617
    "template" (362) 128 621 622
    "+=" (363) 152 366
    "-=" (364) 153 367
    "/=" (365) 155 369
    "*=" (366) 154 368
    "%=" (367) 156 370
    "&=" (368) 157 360
    "|=" (369) 158 361
    "^=" (370) 159 362
    "<<" (371) 185 419
    ">>" (372) 186 420
    "++" (373) 181 183 441 443
    "--" (374) 182 184 442 444
    "<=" (375) 176 432
    "<<=" (376) 187 371
    ">>=" (377) 188 372
    ">=" (378) 177 433
    "==" (379) 174 430 714 715
    "!=" (380) 175 431
    "->" (381) 377 378
    "<-" (382) 296 298 333 339 358 546 553
    "??" (383) 202 459 720
    "?." (384) 196 199 451 452 500 502
    "?[" (385) 194 449 450
    "<|" (386) 483
    "|>" (387) 137 484 485
    ":=" (388) 198 200 340 359 554 781 783 785 787
    "<<<" (389) 189 421
    ">>>" (390) 190 422
    "<<<=" (391) 191 373
    ">>>=" (392) 192 374
    "=>" (393) 332 333 811
    "::" (394) 278 279
    "&&" (395) 133 163 437
    "||" (396) 134 164 438
    "^^" (397) 135 165 439
    "&&=" (398) 160 363
    "||=" (399) 161 364
    "^^=" (400) 162 365
    ".." (401) 173 440
    "$$" (402) 491
    "$i" (403) 380 492 558 633
    "$v" (404) 493
    "$b" (405) 494
    "$a" (406) 495 529
    "$t" (407) 675
    "$c" (408) 497 498 506
    "$f" (409) 499 500 501 502 503 504 505 784 785 786 787
    "..." (410) 496
    "integer constant" <i> (411) 59 60 61 62 104 115 349
    "long integer constant" <i64> (412) 351
    "unsigned integer constant" <ui> (413) 350
    "unsigned long integer constant" <ui64> (414) 352
    "unsigned int8 constant" <ui> (415) 353
    "floating point constant" <fd> (416) 105 116 354
    "double constant" <d> (417) 355
    "name" <s> (418) 25 48 50 51 53 101 103 110 114 149 197 198 199 205 206 208 277 278 279 307 308 327 328 337 338 339 340 341 377 378 388 389 390 391 392 451 452 465 466 471 533 539 557 559 560 561 562 563 585 586 596 601 618 632 634 635 636 674 676 677 679 680 764 769 774 780 781 782 783
    "new line, comma" (419) 17 606 607
    "new line, semicolon" (420) 19 66 67 521
    "start of the string" (421) 31 32 41
    STRING_CHARACTER <ch> (422) 27 29 34 42 43
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 41
    "{" (425) 40
    "}" (426) 40
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 587 588 684
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 82 83 90 93 249 250 251 256 258 259 260 261 265 266 267 309 310 523 525 565 567 568 569 570 571 572 579 597 685
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 39
    string_constant <s> (217)
        on left: 31 32
        on right: 102 113
    format_string <s> (218)
        on left: 33 34
        on right: 34 37
    optional_format_string <s> (219)
        on left: 35 37
        on right: 40
    $@1 (220)
        on left: 36
        on right: 37
    string_builder_body <pExpression> (221)
        on left: 38 39 40
        on right: 39 40 41
    string_builder <pExpression> (222)
        on left: 41
        on right: 409
    reader_character_sequence (223)
        on left: 42 43
        on right: 43 45
    expr_reader <pExpression> (224)
        on left: 45
        on right: 20 408
    $@2 (225)
        on left: 44
        on right: 45
    options_declaration (226)
        on left: 46
        on right: 9
    require_declaration (227)
        on left: 47
        on right: 8
    require_module_name <s> (228)
        on left: 48 49 50 51
        on right: 49 50 51 52 53
    require_module (229)
        on left: 52 53
        on right: 47
    is_public_module <b> (230)
        on left: 54 55
        on right: 52 53
    expect_declaration (231)
        on left: 56
        on right: 7
    expect_list (232)
        on left: 57 58
        on right: 56 58
    expect_error (233)
        on left: 59 60
        on right: 57 58
    expression_label <pExpression> (234)
        on left: 61
        on right: 265
    expression_goto <pExpression> (235)
        on left: 62 63
        on right: 266
    elif_or_static_elif <b> (236)
        on left: 64 65
        on right: 72
    emit_semis (237)
        on left: 66 67
        on right: 67 69
    optional_emit_semis (238)
        on left: 68 69
        on right: 71 72 92 95 96 98 100 123 124 143 240 346 347 490 527 631 764 769 838
    expression_else <pExpression> (239)
        on left: 70 71 72
        on right: 72 92
    if_or_static_if <b> (240)
        on left: 73 74
        on right: 92
    expression_else_one_liner <pExpression> (241)
        on left: 75 76
        on right: 93
    expression_if_one_liner <pExpression> (242)
        on left: 77 78 79 80 81
        on right: 76 90 93
    semis (243)
        on left: 82 83
        on right: 83 85 538 544
    optional_semis (244)
        on left: 84 85
        on right: 764 769
    expression_if_block <pExpression> (245)
        on left: 88 90
        on right: 92
    $@3 (246)
        on left: 86
        on right: 88
    $@4 (247)
        on left: 87
        on right: 88
    $@5 (248)
        on left: 89
        on right: 90
    expression_if_then_else <pExpression> (249)
        on left: 92
        on right: 262
    $@6 (250)
        on left: 91
        on right: 92
    expression_if_then_else_oneliner <pExpression> (251)
        on left: 93
        on right: 263
    expression_for_loop <pExpression> (252)
        on left: 95
        on right: 257
    $@7 (253)
        on left: 94
        on right: 95
    expression_unsafe <pExpression> (254)
        on left: 96
        on right: 254
    expression_while_loop <pExpression> (255)
        on left: 98
        on right: 253
    $@8 (256)
        on left: 97
        on right: 98
    expression_with <pExpression> (257)
        on left: 100
        on right: 255
    $@9 (258)
        on left: 99
        on right: 100
    expression_with_alias <pExpression> (259)
        on left: 101
        on right: 256
    annotation_argument_value <aa> (260)
        on left: 102 103 104 105 106 107
        on right: 108 109
    annotation_argument_value_list <aaList> (261)
        on left: 108 109
        on right: 109 120
    annotation_argument_name <s> (262)
        on left: 110 111 112
        on right: 113 114 115 116 117 118 119 120
    annotation_argument <aa> (263)
        on left: 113 114 115 116 117 118 119 120
        on right: 121 122 123 124
    annotation_argument_list <aaList> (264)
        on left: 121 122
        on right: 46 122 130
    metadata_argument_list <aaList> (265)
        on left: 123 124
        on right: 124 508
    annotation_declaration_name <s> (266)
        on left: 125 126 127 128
        on right: 129 130
    annotation_declaration_basic <fa> (267)
        on left: 129 130
        on right: 131
    annotation_declaration <fa> (268)
        on left: 131 132 133 134 135 136 137
        on right: 132 133 134 135 136 137 138 139
    annotation_list <faList> (269)
        on left: 138 139
        on right: 139 141 143
    optional_annotation_list <faList> (270)
        on left: 140 141
        on right: 346 347
    optional_annotation_list_with_emit_semis <faList> (271)
        on left: 142 143
        on right: 234 525 527 613 631
    optional_function_argument_list <pVarDeclList> (272)
        on left: 144 145 146
        on right: 238 346 347 387 736 743 750
    optional_function_type <pTypeDecl> (273)
        on left: 147 148
        on right: 238 346 347 387 736 743 750
    function_name <s> (274)
        on left: 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
        on right: 238
    global_function_declaration (275)
        on left: 234
        on right: 6
    optional_public_or_private_function <b> (276)
        on left: 235 236 237
        on right: 240
    function_declaration_header <pFuncDecl> (277)
        on left: 238
        on right: 240 525 527
    function_declaration <pFuncDecl> (278)
        on left: 240
        on right: 234
    $@10 (279)
        on left: 239
        on right: 240
    expression_block_finally <pExpression> (280)
        on left: 241 244
        on right: 88 247
    $@11 (281)
        on left: 242
        on right: 244
    $@12 (282)
        on left: 243
        on right: 244
    expression_block <pExpression> (283)
        on left: 247
        on right: 71 72 95 96 98 100 240 299 331 347 490 527
    $@13 (284)
        on left: 245
        on right: 247
    $@14 (285)
        on left: 246
        on right: 247
    expr_call_pipe <pExpression> (286)
        on left: 248
        on right: 486
    expression_any <pExpression> (287)
        on left: 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267
        on right: 269
    expressions <pExpression> (288)
        on left: 268 269 270
        on right: 88 244 247 269 270 348
    optional_expr_list <pExpression> (289)
        on left: 271 272
        on right: 702 704 817 830
    optional_expr_map_tuple_list <pExpression> (290)
        on left: 273 274
        on right: 838 840 841
    type_declaration_no_options_list <pTypeDeclList> (291)
        on left: 275 276
        on right: 276 704
    name_in_namespace <s> (292)
        on left: 277 278 279
        on right: 45 125 326 327 328 375 376 379 398 399 400 401 402 406 615 672 702 704
    expression_delete <pExpression> (293)
        on left: 280 281
        on right: 251
    new_type_declaration <pTypeDecl> (294)
        on left: 284 285
        on right: 286 287 288 289 290
    $@15 (295)
        on left: 282
        on right: 284
    $@16 (296)
        on left: 283
        on right: 284
    expr_new <pExpression> (297)
        on left: 286 287 288 289 290 291
        on right: 479
    expression_break <pExpression> (298)
        on left: 292
        on right: 80 258
    expression_continue <pExpression> (299)
        on left: 293
        on right: 81 259
    expression_return <pExpression> (300)
        on left: 294 295 296
        on right: 78 260
    expression_yield <pExpression> (301)
        on left: 297 298
        on right: 79 261
    expression_try_catch <pExpression> (302)
        on left: 299
        on right: 264
    kwd_let_var_or_nothing <b> (303)
        on left: 300 301 302
        on right: 528
    kwd_let <b> (304)
        on left: 303 304
        on right: 311 312 313 582 584
    optional_in_scope <b> (305)
        on left: 305 306
        on right: 311 312 313
    tuple_expansion <pNameList> (306)
        on left: 307 308
        on right: 308 309 310
    tuple_expansion_variable_declaration <pVarDecl> (307)
        on left: 309 310
        on right: 312
    expression_let <pExpression> (308)
        on left: 311 312 313
        on right: 252
    expr_cast <pExpression> (309)
        on left: 316 319 322
        on right: 478
    $@17 (310)
        on left: 314
        on right: 316
    $@18 (311)
        on left: 315
        on right: 316
    $@19 (312)
        on left: 317
        on right: 319
    $@20 (313)
        on left: 318
        on right: 319
    $@21 (314)
        on left: 320
        on right: 322
    $@22 (315)
        on left: 321
        on right: 322
    expr_type_decl <pExpression> (316)
        on left: 325
        on right: 477
    $@23 (317)
        on left: 323
        on right: 325
    $@24 (318)
        on left: 324
        on right: 325
    expr_type_info <pExpression> (319)
        on left: 326 327 328
        on right: 476
    expr_list <pExpression> (320)
        on left: 329 330
        on right: 95 272 288 330 376 378 391 394 402 404 445 498 813 827 831 834 846 847 848
    block_or_simple_block <pExpression> (321)
        on left: 331 332 333
        on right: 346
    block_or_lambda <i> (322)
        on left: 334 335 336
        on right: 346 347
    capture_entry <pCapt> (323)
        on left: 337 338 339 340 341
        on right: 342 343
    capture_list <pCaptList> (324)
        on left: 342 343
        on right: 343 345
    optional_capture_list <pCaptList> (325)
        on left: 344 345
        on right: 346 347 488 489 490
    expr_full_block <pExpression> (326)
        on left: 346
        on right: 482
    expr_full_block_assumed_piped <pExpression> (327)
        on left: 347 348
        on right: 248
    expr_numeric_const <pExpression> (328)
        on left: 349 350 351 352 353 354 355
        on right: 407
    expr_assign <pExpression> (329)
        on left: 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374
        on right: 250
    expr_named_call <pExpression> (330)
        on left: 375 376
        on right: 481
    expr_method_call <pExpression> (331)
        on left: 377 378
        on right: 480
    func_addr_name <pExpression> (332)
        on left: 379 380
        on right: 381 384 387
    func_addr_expr <pExpression> (333)
        on left: 381 384 387
        on right: 453
    $@25 (334)
        on left: 382
        on right: 384
    $@26 (335)
        on left: 383
        on right: 384
    $@27 (336)
        on left: 385
        on right: 387
    $@28 (337)
        on left: 386
        on right: 387
    expr_field <pExpression> (338)
        on left: 388 389 390 391 392 393 394 397
        on right: 413
    $@29 (339)
        on left: 395
        on right: 397
    $@30 (340)
        on left: 396
        on right: 397
    expr_call <pExpression> (341)
        on left: 398 399 400 401 402 403 404
        on right: 248 454
    expr <pExpression> (342)
        on left: 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 463 464 465 466 469 470 471 474 475 476 477 478 479 480 481 482 483 484 485 486 487
        on right
    $@31 (343)
        on left: 461
        on right: 463
    $@32 (344)
        on left: 462
        on right: 463
    $@33 (345)
        on left: 467
        on right: 469
    $@34 (346)
        on left: 468
        on right: 469
    $@35 (347)
        on left: 472
        on right: 474
    $@36 (348)
        on left: 473
        on right: 474
    expr_generator <pExpression> (349)
        on left: 488 489 490
        on right: 458
    expr_mtag <pExpression> (350)
        on left: 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506
        on right: 414
    optional_field_annotation <aaList> (351)
        on left: 507 508
        on right: 519 528 581 584
    optional_override <i> (352)
        on left: 509 510 511
        on right: 519 527
    optional_constant <b> (353)
        on left: 512 513
        on right: 525 527
    optional_public_or_private_member_variable <b> (354)
        on left: 514 515 516
        on right: 519 525 527
    optional_static_member_variable <b> (355)
        on left: 517 518
        on right: 519 527
    structure_variable_declaration <pVarDecl> (356)
        on left: 519
        on right: 523
    struct_variable_declaration_list <pVarDeclList> (357)
        on left: 520 521 523 525 527
        on right: 521 523 525 527 627
    $@37 (358)
        on left: 522
        on right: 523
    $@38 (359)
        on left: 524
        on right: 525
    $@39 (360)
        on left: 526
        on right: 527
    function_argument_declaration <pVarDecl> (361)
        on left: 528 529
        on right: 530 531
    function_argument_list <pVarDeclList> (362)
        on left: 530 531
        on right: 146 531
    tuple_type <pVarDecl> (363)
        on left: 532 533
        on right: 534 535 537 538
    tuple_type_list <pVarDeclList> (364)
        on left: 534 535
        on right: 535 753 816 823
    tuple_alias_type_list <pVarDeclList> (365)
        on left: 536 537 538
        on right: 538 764
    variant_type <pVarDecl> (366)
        on left: 539
        on right: 540 541 543 544
    variant_type_list <pVarDeclList> (367)
        on left: 540 541
        on right: 541 756 807 826
    variant_alias_type_list <pVarDeclList> (368)
        on left: 542 543 544
        on right: 544 769
    copy_or_move <b> (369)
        on left: 545 546
        on right: 550 551 780 782 784 786
    variable_declaration <pVarDecl> (370)
        on left: 547 548 549 550 551
        on right: 519 528
    copy_or_move_or_clone <i> (371)
        on left: 552 553 554
        on right: 309 310 568 569 571 572
    optional_ref <b> (372)
        on left: 555 556
        on right: 310 569 572
    let_variable_name_with_pos_list <pNameWithPosList> (373)
        on left: 557 558 559 560 561
        on right: 560 561 567 568 569
    global_let_variable_name_with_pos_list <pNameWithPosList> (374)
        on left: 562 563
        on right: 563 570 571 572
    variable_declaration_list <pVarDeclList> (375)
        on left: 564 565 566
        on right: 313 565 566
    let_variable_declaration <pVarDecl> (376)
        on left: 567 568 569
        on right: 311 566 581
    global_let_variable_declaration <pVarDecl> (377)
        on left: 570 571 572
        on right: 584
    optional_shared <b> (378)
        on left: 573 574
        on right: 26 582 584
    optional_public_or_private_variable <b> (379)
        on left: 575 576 577
        on right: 582 584
    global_variable_declaration_list <pVarDeclList> (380)
        on left: 578 579 581
        on right: 579 581 582
    $@40 (381)
        on left: 580
        on right: 581
    global_let (382)
        on left: 582 584
        on right: 5
    $@41 (383)
        on left: 583
        on right: 584
    enum_expression <pEnumPair> (384)
        on left: 585 586
        on right: 590 591
    commas (385)
        on left: 587 588
        on right: 588 591 605 680
    enum_list <pEnum> (386)
        on left: 589 590 591
        on right: 591 613
    optional_public_or_private_alias <b> (387)
        on left: 592 593 594
        on right: 596 764 769 774
    single_alias (388)
        on left: 596
        on right: 597
    $@42 (389)
        on left: 595
        on right: 596
    alias_declaration (390)
        on left: 597
        on right: 10
    optional_public_or_private_enum <b> (391)
        on left: 598 599 600
        on right: 613
    enum_name <pEnum> (392)
        on left: 601
        on right: 613
    optional_enum_basic_type_declaration <type> (393)
        on left: 602 603
        on right: 613
    optional_commas (394)
        on left: 604 605
        on right: 613 774
    emit_commas (395)
        on left: 606 607
        on right: 607 609
    optional_emit_commas (396)
        on left: 608 609
        on right: 613 774
    enum_declaration (397)
        on left: 613
        on right: 4
    $@43 (398)
        on left: 610
        on right: 613
    $@44 (399)
        on left: 611
        on right: 613
    $@45 (400)
        on left: 612
        on right: 613
    optional_structure_parent <s> (401)
        on left: 614 615
        on right: 618
    optional_sealed <b> (402)
        on left: 616 617
        on right: 618
    structure_name <pStructure> (403)
        on left: 618
        on right: 631
    class_or_struct <i> (404)
        on left: 619 620 621 622
        on right: 631
    optional_public_or_private_structure <b> (405)
        on left: 623 624 625
        on right: 631
    optional_struct_variable_declaration_list <pVarDeclList> (406)
        on left: 626 627
        on right: 631
    structure_declaration (407)
        on left: 631
        on right: 3
    $@46 (408)
        on left: 628
        on right: 631
    $@47 (409)
        on left: 629
        on right: 631
    $@48 (410)
        on left: 630
        on right: 631
    variable_name_with_pos_list <pNameWithPosList> (411)
        on left: 632 633 634 635 636
        on right: 95 547 548 549 550 551 635 636 846 847 848
    basic_type_declaration <type> (412)
        on left: 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663
        on right: 393 394 403 404 464 470 475 485 694
    enum_basic_type_declaration <type> (413)
        on left: 664 665 666 667 668 669 670 671
        on right: 603
    structure_type_declaration <pTypeDecl> (414)
        on left: 672
        on right: 285 697
    auto_type_declaration <pTypeDecl> (415)
        on left: 673 674 675
        on right: 695
    bitfield_bits <pNameList> (416)
        on left: 676 677
        on right: 677 683
    bitfield_alias_bits <pNameList> (417)
        on left: 678 679 680
        on right: 680 774
    bitfield_type_declaration <pTypeDecl> (418)
        on left: 683
        on right: 696
    $@49 (419)
        on left: 681
        on right: 683
    $@50 (420)
        on left: 682
        on right: 683
    c_or_s (421)
        on left: 684 685
        on right: 276 328 535 541 687 841
    table_type_pair <aTypePair> (422)
        on left: 686 687
        on right: 726
    dim_list <pTypeDecl> (423)
        on left: 688 689 690 691
        on right: 690 691 693
    type_declaration_no_options <pTypeDecl> (424)
        on left: 692 693
        on right: 309 316 319 322 384 463 488 489 490 567 568 570 571 705 706 707 708 709 710 711 712 713 714 715 716 720 757 758 801 804 810 820 830 834 840 841
    type_declaration_no_options_no_dim <pTypeDecl> (425)
        on left: 694 695 696 697 700 701 702 704 705 706 707 708 709 710 711 712 713 714 715 716 719 720 723 726 729 730 733 736 737 740 743 744 747 750 753 756
        on right: 692 693
    $@51 (426)
        on left: 698
        on right: 700
    $@52 (427)
        on left: 699
        on right: 700
    $@53 (428)
        on left: 703
        on right: 704
    $@54 (429)
        on left: 717
        on right: 719
    $@55 (430)
        on left: 718
        on right: 719
    $@56 (431)
        on left: 721
        on right: 723
    $@57 (432)
        on left: 722
        on right: 723
    $@58 (433)
        on left: 724
        on right: 726
    $@59 (434)
        on left: 725
        on right: 726
    $@60 (435)
        on left: 727
        on right: 729
    $@61 (436)
        on left: 728
        on right: 729
    $@62 (437)
        on left: 731
        on right: 733
    $@63 (438)
        on left: 732
        on right: 733
    $@64 (439)
        on left: 734
        on right: 736
    $@65 (440)
        on left: 735
        on right: 736
    $@66 (441)
        on left: 738
        on right: 740
    $@67 (442)
        on left: 739
        on right: 740
    $@68 (443)
        on left: 741
        on right: 743
    $@69 (444)
        on left: 742
        on right: 743
    $@70 (445)
        on left: 745
        on right: 747
    $@71 (446)
        on left: 746
        on right: 747
    $@72 (447)
        on left: 748
        on right: 750
    $@73 (448)
        on left: 749
        on right: 750
    $@74 (449)
        on left: 751
        on right: 753
    $@75 (450)
        on left: 752
        on right: 753
    $@76 (451)
        on left: 754
        on right: 756
    $@77 (452)
        on left: 755
        on right: 756
    type_declaration <pTypeDecl> (453)
        on left: 757 758 759
        on right: 148 275 276 284 325 469 474 532 533 539 549 550 596 686 687 700 719 723 729 733 740 747 758 759
    tuple_alias_declaration (454)
        on left: 764
        on right: 12
    $@78 (455)
        on left: 760
        on right: 764
    $@79 (456)
        on left: 761
        on right: 764
    $@80 (457)
        on left: 762
        on right: 764
    $@81 (458)
        on left: 763
        on right: 764
    variant_alias_declaration (459)
        on left: 769
        on right: 11
    $@82 (460)
        on left: 765
        on right: 769
    $@83 (461)
        on left: 766
        on right: 769
    $@84 (462)
        on left: 767
        on right: 769
    $@85 (463)
        on left: 768
        on right: 769
    bitfield_alias_declaration (464)
        on left: 774
        on right: 13
    $@86 (465)
        on left: 770
        on right: 774
    $@87 (466)
        on left: 771
        on right: 774
    $@88 (467)
        on left: 772
        on right: 774
    $@89 (468)
        on left: 773
        on right: 774
    make_decl <pExpression> (469)
        on left: 775 776 777 778 779
        on right: 291 410
    make_struct_fields <pMakeStruct> (470)
        on left: 780 781 782 783 784 785 786 787
        on right: 375 376 392 782 783 786 787 789 790 791 792 793
    make_variant_dim <pExpression> (471)
        on left: 788 789
        on right: 807 826
    make_struct_single <pExpression> (472)
        on left: 790
        on right: 289 290 400 401 446
    make_struct_dim_list <pExpression> (473)
        on left: 791 792
        on right: 792 794
    make_struct_dim_decl <pExpression> (474)
        on left: 793 794
        on right: 795
    optional_make_struct_dim_decl <pExpression> (475)
        on left: 795 796
        on right: 801 804 816 820 823
    use_initializer <b> (476)
        on left: 797 798
        on right: 287 801 804 807 810 816 820 823
    make_struct_decl <pExpression> (477)
        on left: 801 804 807 810
        on right: 775
    $@90 (478)
        on left: 799
        on right: 801
    $@91 (479)
        on left: 800
        on right: 801
    $@92 (480)
        on left: 802
        on right: 804
    $@93 (481)
        on left: 803
        on right: 804
    $@94 (482)
        on left: 805
        on right: 807
    $@95 (483)
        on left: 806
        on right: 807
    $@96 (484)
        on left: 808
        on right: 810
    $@97 (485)
        on left: 809
        on right: 810
    make_map_tuple <pExpression> (486)
        on left: 811 812
        on right: 835 836 848
    make_tuple_call <pExpression> (487)
        on left: 813 816
        on right: 779
    $@98 (488)
        on left: 814
        on right: 816
    $@99 (489)
        on left: 815
        on right: 816
    make_dim_decl <pExpression> (490)
        on left: 817 820 823 826 827 830 831 834
        on right: 776
    $@100 (491)
        on left: 818
        on right: 820
    $@101 (492)
        on left: 819
        on right: 820
    $@102 (493)
        on left: 821
        on right: 823
    $@103 (494)
        on left: 822
        on right: 823
    $@104 (495)
        on left: 824
        on right: 826
    $@105 (496)
        on left: 825
        on right: 826
    $@106 (497)
        on left: 828
        on right: 830
    $@107 (498)
        on left: 829
        on right: 830
    $@108 (499)
        on left: 832
        on right: 834
    $@109 (500)
        on left: 833
        on right: 834
    expr_map_tuple_list <pExpression> (501)
        on left: 835 836
        on right: 274 836 839
    make_table_decl <pExpression> (502)
        on left: 838 839 840 841
        on right: 777
    $@110 (503)
        on left: 837
        on right: 838
    array_comprehension_where <pExpression> (504)
        on left: 842 843
        on right: 846 847 848
    optional_comma <b> (505)
        on left: 844 845
        on right: 272 274 445 794 813 827 831 834 839
    array_comprehension <pExpression> (506)
        on left: 846 847 848
        on right: 778


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 142 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  303 kwd_let: "let" .

    $default  reduce using rule 303 (kwd_let)


State 4

   46 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   56 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   47 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  597 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  304 kwd_let: "var" .

    $default  reduce using rule 304 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  774 bitfield_alias_declaration: "bitfield" . $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 770 ($@86)

    $@86  go to state 54


State 11

  764 tuple_alias_declaration: "tuple" . $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 760 ($@78)

    $@78  go to state 55


State 12

  769 variant_alias_declaration: "variant" . $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 765 ($@82)

    $@82  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   45 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  143 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  234 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  613 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'
  631 structure_declaration: optional_annotation_list_with_emit_semis . $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 628 ($@46)

    $@46  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  582 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  584           | kwd_let . optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 573 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  111 annotation_argument_name: "type" .

    $default  reduce using rule 111 (annotation_argument_name)


State 35

  112 annotation_argument_name: "in" .

    $default  reduce using rule 112 (annotation_argument_name)


State 36

  110 annotation_argument_name: "name" .

    $default  reduce using rule 110 (annotation_argument_name)


State 37

  113 annotation_argument: annotation_argument_name . '=' string_constant
  114                    | annotation_argument_name . '=' "name"
  115                    | annotation_argument_name . '=' "integer constant"
  116                    | annotation_argument_name . '=' "floating point constant"
  117                    | annotation_argument_name . '=' "true"
  118                    | annotation_argument_name . '=' "false"
  119                    | annotation_argument_name .
  120                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 119 (annotation_argument)


State 38

  121 annotation_argument_list: annotation_argument .

    $default  reduce using rule 121 (annotation_argument_list)


State 39

   46 options_declaration: "options" annotation_argument_list .
  122 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 46 (options_declaration)


State 40

   59 expect_error: "integer constant" .
   60             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 59 (expect_error)


State 41

   56 expect_declaration: "expect" expect_list .
   58 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 56 (expect_declaration)


State 42

   57 expect_list: expect_error .

    $default  reduce using rule 57 (expect_list)


State 43

   48 require_module_name: "name" .

    $default  reduce using rule 48 (require_module_name)


State 44

   49 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   50 require_module_name: require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"
   52 require_module: require_module_name . is_public_module
   53               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 88


State 46

   47 require_declaration: "require" require_module .

    $default  reduce using rule 47 (require_declaration)


State 47

  594 optional_public_or_private_alias: "public" .

    $default  reduce using rule 594 (optional_public_or_private_alias)


State 48

  593 optional_public_or_private_alias: "private" .

    $default  reduce using rule 593 (optional_public_or_private_alias)


State 49

  596 single_alias: optional_public_or_private_alias . "name" $@42 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  597 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 573 (optional_shared)

    optional_shared  go to state 91


State 54

  774 bitfield_alias_declaration: "bitfield" $@86 . optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  764 tuple_alias_declaration: "tuple" $@78 . optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  769 variant_alias_declaration: "variant" $@82 . optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  279 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  277 name_in_namespace: "name" .
  278                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 277 (name_in_namespace)


State 59

   45 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 44 ($@2)

    $@2  go to state 97


State 60

  126 annotation_declaration_name: "require" .

    $default  reduce using rule 126 (annotation_declaration_name)


State 61

  127 annotation_declaration_name: "private" .

    $default  reduce using rule 127 (annotation_declaration_name)


State 62

  128 annotation_declaration_name: "template" .

    $default  reduce using rule 128 (annotation_declaration_name)


State 63

  137 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  132 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  136 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  129 annotation_declaration_basic: annotation_declaration_name .
  130                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 129 (annotation_declaration_basic)


State 67

  131 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 131 (annotation_declaration)


State 68

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  138 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 138 (annotation_list)


State 69

  139 annotation_list: annotation_list . ',' annotation_declaration
  143 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  125 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 125 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  234 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 235 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 610 ($@43)

    $@43  go to state 111


State 76

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 . class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  574 optional_shared: "shared" .

    $default  reduce using rule 574 (optional_shared)


State 78

  582 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  584           | kwd_let optional_shared . optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 575 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  113 annotation_argument: annotation_argument_name '=' . string_constant
  114                    | annotation_argument_name '=' . "name"
  115                    | annotation_argument_name '=' . "integer constant"
  116                    | annotation_argument_name '=' . "floating point constant"
  117                    | annotation_argument_name '=' . "true"
  118                    | annotation_argument_name '=' . "false"
  120                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  122 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   60 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   58 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   49 require_module_name: '%' require_module_name .
   50                    | require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 49 (require_module_name)


State 84

   53 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   55 is_public_module: "public" .

    $default  reduce using rule 55 (is_public_module)


State 86

   51 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   50 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   52 require_module: require_module_name is_public_module .

    $default  reduce using rule 52 (require_module)


State 89

  596 single_alias: optional_public_or_private_alias "name" . $@42 '=' type_declaration

    $default  reduce using rule 595 ($@42)

    $@42  go to state 133


State 90

  597 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 597 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias . "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 137


State 93

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias . "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "name"  shift, and go to state 138


State 94

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias . "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 139


State 95

  279 name_in_namespace: "::" "name" .

    $default  reduce using rule 279 (name_in_namespace)


State 96

  278 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   45 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  137                       | "|>" annotation_declaration .

    $default  reduce using rule 137 (annotation_declaration)


State 99

  132 annotation_declaration: '!' annotation_declaration .
  133                       | annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 132 (annotation_declaration)


State 100

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  136                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  130 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  133 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  134 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  135 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  139 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  143 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  237 optional_public_or_private_function: "public" .

    $default  reduce using rule 237 (optional_public_or_private_function)


State 108

  236 optional_public_or_private_function: "private" .

    $default  reduce using rule 236 (optional_public_or_private_function)


State 109

  240 function_declaration: optional_public_or_private_function . $@10 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 239 ($@10)

    $@10  go to state 152


State 110

  234 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 234 (global_function_declaration)


State 111

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 598 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  620 class_or_struct: "struct" .

    $default  reduce using rule 620 (class_or_struct)


State 113

  619 class_or_struct: "class" .

    $default  reduce using rule 619 (class_or_struct)


State 114

  621 class_or_struct: "template" . "class"
  622                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct . optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 623 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  577 optional_public_or_private_variable: "public" .

    $default  reduce using rule 577 (optional_public_or_private_variable)


State 117

  576 optional_public_or_private_variable: "private" .

    $default  reduce using rule 576 (optional_public_or_private_variable)


State 118

  582 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  584           | kwd_let optional_shared optional_public_or_private_variable . $@41 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 583 ($@41)

    $@41  go to state 162


State 119

  117 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 117 (annotation_argument)


State 120

  118 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 118 (annotation_argument)


State 121

  115 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 115 (annotation_argument)


State 122

  116 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 116 (annotation_argument)


State 123

  114 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 114 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  120 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  113 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 113 (annotation_argument)


State 127

  122 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 122 (annotation_argument_list)


State 128

   60 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 60 (expect_error)


State 129

   58 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 58 (expect_list)


State 130

   53 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 175


State 131

   51 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 51 (require_module_name)


State 132

   50 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 50 (require_module_name)


State 133

  596 single_alias: optional_public_or_private_alias "name" $@42 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" . optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 608 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" . optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" . optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  278 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 278 (name_in_namespace)


State 141

   42 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 42 (reader_character_sequence)


State 142

   43 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 45 (expr_reader)


State 143

  136 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 136 (annotation_declaration)


State 144

  122 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  130 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  133                       | annotation_declaration "&&" annotation_declaration .
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 133 (annotation_declaration)


State 146

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  134                       | annotation_declaration "||" annotation_declaration .
  135                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 134 (annotation_declaration)


State 147

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  135                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 135 (annotation_declaration)


State 148

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  139 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 139 (annotation_list)


State 149

   66 emit_semis: "new line, semicolon" .

    $default  reduce using rule 66 (emit_semis)


State 150

   67 emit_semis: emit_semis . "new line, semicolon"
   69 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 69 (optional_emit_semis)


State 151

  143 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 143 (optional_annotation_list_with_emit_semis)


State 152

  240 function_declaration: optional_public_or_private_function $@10 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 215


State 153

  600 optional_public_or_private_enum: "public" .

    $default  reduce using rule 600 (optional_public_or_private_enum)


State 154

  599 optional_public_or_private_enum: "private" .

    $default  reduce using rule 599 (optional_public_or_private_enum)


State 155

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 216

    enum_name  go to state 217


State 156

  622 class_or_struct: "template" "struct" .

    $default  reduce using rule 622 (class_or_struct)


State 157

  621 class_or_struct: "template" "class" .

    $default  reduce using rule 621 (class_or_struct)


State 158

  625 optional_public_or_private_structure: "public" .

    $default  reduce using rule 625 (optional_public_or_private_structure)


State 159

  624 optional_public_or_private_structure: "private" .

    $default  reduce using rule 624 (optional_public_or_private_structure)


State 160

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure . $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 629 ($@47)

    $@47  go to state 218


State 161

  582 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 578 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  106 annotation_argument_value: "true" .

    $default  reduce using rule 106 (annotation_argument_value)


State 168

  107 annotation_argument_value: "false" .

    $default  reduce using rule 107 (annotation_argument_value)


State 169

  104 annotation_argument_value: "integer constant" .

    $default  reduce using rule 104 (annotation_argument_value)


State 170

  105 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 105 (annotation_argument_value)


State 171

  103 annotation_argument_value: "name" .

    $default  reduce using rule 103 (annotation_argument_value)


State 172

  102 annotation_argument_value: string_constant .

    $default  reduce using rule 102 (annotation_argument_value)


State 173

  108 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 108 (annotation_argument_value_list)


State 174

  109 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  120 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   53 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 53 (require_module)


State 176

  596 single_alias: optional_public_or_private_alias "name" $@42 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  606 emit_commas: "new line, comma" .

    $default  reduce using rule 606 (emit_commas)


State 178

  607 emit_commas: emit_commas . "new line, comma"
  609 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 609 (optional_emit_commas)


State 179

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas . $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 771 ($@87)

    $@87  go to state 278


State 180

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis . $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 761 ($@79)

    $@79  go to state 279


State 181

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis . $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 766 ($@83)

    $@83  go to state 280


State 182

   43 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 43 (reader_character_sequence)


State 183

  130 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 130 (annotation_declaration_basic)


State 184

   67 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 67 (emit_semis)


State 185

  150 function_name: "operator" . '!'
  151              | "operator" . '~'
  152              | "operator" . "+="
  153              | "operator" . "-="
  154              | "operator" . "*="
  155              | "operator" . "/="
  156              | "operator" . "%="
  157              | "operator" . "&="
  158              | "operator" . "|="
  159              | "operator" . "^="
  160              | "operator" . "&&="
  161              | "operator" . "||="
  162              | "operator" . "^^="
  163              | "operator" . "&&"
  164              | "operator" . "||"
  165              | "operator" . "^^"
  166              | "operator" . '+'
  167              | "operator" . '-'
  168              | "operator" . '*'
  169              | "operator" . '/'
  170              | "operator" . '%'
  171              | "operator" . '<'
  172              | "operator" . '>'
  173              | "operator" . ".."
  174              | "operator" . "=="
  175              | "operator" . "!="
  176              | "operator" . "<="
  177              | "operator" . ">="
  178              | "operator" . '&'
  179              | "operator" . '|'
  180              | "operator" . '^'
  183              | "operator" . "++"
  184              | "operator" . "--"
  185              | "operator" . "<<"
  186              | "operator" . ">>"
  187              | "operator" . "<<="
  188              | "operator" . ">>="
  189              | "operator" . "<<<"
  190              | "operator" . ">>>"
  191              | "operator" . "<<<="
  192              | "operator" . ">>>="
  193              | "operator" . '[' ']'
  194              | "operator" . "?[" ']'
  195              | "operator" . '.'
  196              | "operator" . "?."
  197              | "operator" . '.' "name"
  198              | "operator" . '.' "name" ":="
  199              | "operator" . "?." "name"
  200              | "operator" . ":="
  201              | "operator" . "delete"
  202              | "operator" . "??"
  203              | "operator" . "is"
  204              | "operator" . "as"
  205              | "operator" . "is" "name"
  206              | "operator" . "as" "name"
  207              | "operator" . '?' "as"
  208              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 281
    "as"      shift, and go to state 282
    "delete"  shift, and go to state 283
    "+="      shift, and go to state 284
    "-="      shift, and go to state 285
    "/="      shift, and go to state 286
    "*="      shift, and go to state 287
    "%="      shift, and go to state 288
    "&="      shift, and go to state 289
    "|="      shift, and go to state 290
    "^="      shift, and go to state 291
    "<<"      shift, and go to state 292
    ">>"      shift, and go to state 293
    "++"      shift, and go to state 294
    "--"      shift, and go to state 295
    "<="      shift, and go to state 296
    "<<="     shift, and go to state 297
    ">>="     shift, and go to state 298
    ">="      shift, and go to state 299
    "=="      shift, and go to state 300
    "!="      shift, and go to state 301
    "??"      shift, and go to state 302
    "?."      shift, and go to state 303
    "?["      shift, and go to state 304
    ":="      shift, and go to state 305
    "<<<"     shift, and go to state 306
    ">>>"     shift, and go to state 307
    "<<<="    shift, and go to state 308
    ">>>="    shift, and go to state 309
    "&&"      shift, and go to state 310
    "||"      shift, and go to state 311
    "^^"      shift, and go to state 312
    "&&="     shift, and go to state 313
    "||="     shift, and go to state 314
    "^^="     shift, and go to state 315
    ".."      shift, and go to state 316
    '?'       shift, and go to state 317
    '|'       shift, and go to state 318
    '^'       shift, and go to state 319
    '&'       shift, and go to state 320
    '<'       shift, and go to state 321
    '>'       shift, and go to state 322
    '-'       shift, and go to state 323
    '+'       shift, and go to state 324
    '*'       shift, and go to state 325
    '/'       shift, and go to state 326
    '%'       shift, and go to state 327
    '~'       shift, and go to state 328
    '!'       shift, and go to state 329
    '.'       shift, and go to state 330
    '['       shift, and go to state 331


State 186

  209 function_name: "bool" .

    $default  reduce using rule 209 (function_name)


State 187

  210 function_name: "string" .

    $default  reduce using rule 210 (function_name)


State 188

  211 function_name: "int" .

    $default  reduce using rule 211 (function_name)


State 189

  212 function_name: "int2" .

    $default  reduce using rule 212 (function_name)


State 190

  213 function_name: "int3" .

    $default  reduce using rule 213 (function_name)


State 191

  214 function_name: "int4" .

    $default  reduce using rule 214 (function_name)


State 192

  215 function_name: "uint" .

    $default  reduce using rule 215 (function_name)


State 193

  216 function_name: "uint2" .

    $default  reduce using rule 216 (function_name)


State 194

  217 function_name: "uint3" .

    $default  reduce using rule 217 (function_name)


State 195

  218 function_name: "uint4" .

    $default  reduce using rule 218 (function_name)


State 196

  219 function_name: "float" .

    $default  reduce using rule 219 (function_name)


State 197

  220 function_name: "float2" .

    $default  reduce using rule 220 (function_name)


State 198

  221 function_name: "float3" .

    $default  reduce using rule 221 (function_name)


State 199

  222 function_name: "float4" .

    $default  reduce using rule 222 (function_name)


State 200

  223 function_name: "range" .

    $default  reduce using rule 223 (function_name)


State 201

  224 function_name: "urange" .

    $default  reduce using rule 224 (function_name)


State 202

  225 function_name: "range64" .

    $default  reduce using rule 225 (function_name)


State 203

  226 function_name: "urange64" .

    $default  reduce using rule 226 (function_name)


State 204

  227 function_name: "int64" .

    $default  reduce using rule 227 (function_name)


State 205

  228 function_name: "uint64" .

    $default  reduce using rule 228 (function_name)


State 206

  229 function_name: "double" .

    $default  reduce using rule 229 (function_name)


State 207

  230 function_name: "int8" .

    $default  reduce using rule 230 (function_name)


State 208

  231 function_name: "uint8" .

    $default  reduce using rule 231 (function_name)


State 209

  232 function_name: "int16" .

    $default  reduce using rule 232 (function_name)


State 210

  233 function_name: "uint16" .

    $default  reduce using rule 233 (function_name)


State 211

  181 function_name: "++" . "operator"

    "operator"  shift, and go to state 332


State 212

  182 function_name: "--" . "operator"

    "operator"  shift, and go to state 333


State 213

  149 function_name: "name" .

    $default  reduce using rule 149 (function_name)


State 214

  238 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 335


State 215

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 336


State 216

  601 enum_name: "name" .

    $default  reduce using rule 601 (enum_name)


State 217

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    ':'  shift, and go to state 337

    $default  reduce using rule 602 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 338


State 218

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 . structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 616 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  579 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  581                                 | global_variable_declaration_list . $@40 optional_field_annotation let_variable_declaration
  582 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 580 ($@40)

    SEMICOLON  go to state 343
    $@40       go to state 344


State 220

  123 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 345


State 221

  124 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  508 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 508 (optional_field_annotation)


State 222

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  109 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  120 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 120 (annotation_argument)


State 228

  700 type_declaration_no_options_no_dim: "type" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 351


State 229

  723 type_declaration_no_options_no_dim: "array" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 352


State 230

  726 type_declaration_no_options_no_dim: "table" . '<' $@58 table_type_pair '>' $@59

    '<'  shift, and go to state 353


State 231

  701 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  729 type_declaration_no_options_no_dim: "iterator" . '<' $@60 type_declaration '>' $@61

    '<'  shift, and go to state 355


State 233

  719 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 356


State 234

  637 basic_type_declaration: "bool" .

    $default  reduce using rule 637 (basic_type_declaration)


State 235

  657 basic_type_declaration: "void" .

    $default  reduce using rule 657 (basic_type_declaration)


State 236

  638 basic_type_declaration: "string" .

    $default  reduce using rule 638 (basic_type_declaration)


State 237

  673 auto_type_declaration: "auto" .
  674                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 673 (auto_type_declaration)


State 238

  639 basic_type_declaration: "int" .

    $default  reduce using rule 639 (basic_type_declaration)


State 239

  643 basic_type_declaration: "int2" .

    $default  reduce using rule 643 (basic_type_declaration)


State 240

  644 basic_type_declaration: "int3" .

    $default  reduce using rule 644 (basic_type_declaration)


State 241

  645 basic_type_declaration: "int4" .

    $default  reduce using rule 645 (basic_type_declaration)


State 242

  646 basic_type_declaration: "uint" .

    $default  reduce using rule 646 (basic_type_declaration)


State 243

  663 basic_type_declaration: "bitfield" .
  683 bitfield_type_declaration: "bitfield" . '<' $@49 bitfield_bits '>' $@50

    '<'  shift, and go to state 358

    $default  reduce using rule 663 (basic_type_declaration)


State 244

  650 basic_type_declaration: "uint2" .

    $default  reduce using rule 650 (basic_type_declaration)


State 245

  651 basic_type_declaration: "uint3" .

    $default  reduce using rule 651 (basic_type_declaration)


State 246

  652 basic_type_declaration: "uint4" .

    $default  reduce using rule 652 (basic_type_declaration)


State 247

  653 basic_type_declaration: "float" .

    $default  reduce using rule 653 (basic_type_declaration)


State 248

  654 basic_type_declaration: "float2" .

    $default  reduce using rule 654 (basic_type_declaration)


State 249

  655 basic_type_declaration: "float3" .

    $default  reduce using rule 655 (basic_type_declaration)


State 250

  656 basic_type_declaration: "float4" .

    $default  reduce using rule 656 (basic_type_declaration)


State 251

  658 basic_type_declaration: "range" .

    $default  reduce using rule 658 (basic_type_declaration)


State 252

  659 basic_type_declaration: "urange" .

    $default  reduce using rule 659 (basic_type_declaration)


State 253

  660 basic_type_declaration: "range64" .

    $default  reduce using rule 660 (basic_type_declaration)


State 254

  661 basic_type_declaration: "urange64" .

    $default  reduce using rule 661 (basic_type_declaration)


State 255

  730 type_declaration_no_options_no_dim: "block" .
  733                                   | "block" . '<' $@62 type_declaration '>' $@63
  736                                   | "block" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 359

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 256

  642 basic_type_declaration: "int64" .

    $default  reduce using rule 642 (basic_type_declaration)


State 257

  649 basic_type_declaration: "uint64" .

    $default  reduce using rule 649 (basic_type_declaration)


State 258

  662 basic_type_declaration: "double" .

    $default  reduce using rule 662 (basic_type_declaration)


State 259

  737 type_declaration_no_options_no_dim: "function" .
  740                                   | "function" . '<' $@66 type_declaration '>' $@67
  743                                   | "function" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 360

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 260

  744 type_declaration_no_options_no_dim: "lambda" .
  747                                   | "lambda" . '<' $@70 type_declaration '>' $@71
  750                                   | "lambda" . '<' $@72 optional_function_argument_list optional_function_type '>' $@73

    '<'  shift, and go to state 361

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 261

  640 basic_type_declaration: "int8" .

    $default  reduce using rule 640 (basic_type_declaration)


State 262

  647 basic_type_declaration: "uint8" .

    $default  reduce using rule 647 (basic_type_declaration)


State 263

  641 basic_type_declaration: "int16" .

    $default  reduce using rule 641 (basic_type_declaration)


State 264

  648 basic_type_declaration: "uint16" .

    $default  reduce using rule 648 (basic_type_declaration)


State 265

  753 type_declaration_no_options_no_dim: "tuple" . '<' $@74 tuple_type_list '>' $@75

    '<'  shift, and go to state 362


State 266

  756 type_declaration_no_options_no_dim: "variant" . '<' $@76 variant_type_list '>' $@77

    '<'  shift, and go to state 363


State 267

  675 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  702 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  704                                   | '$' . name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 365


State 269

  672 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 672 (structure_type_declaration)


State 270

  694 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 271

  697 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 272

  695 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 273

  696 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 696 (type_declaration_no_options_no_dim)


State 274

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  757 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 757 (type_declaration)


State 275

  692 type_declaration_no_options: type_declaration_no_options_no_dim .
  693                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 375

    $default  reduce using rule 692 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  596 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 596 (single_alias)


State 277

  607 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 607 (emit_commas)


State 278

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 . '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    '{'  shift, and go to state 378


State 279

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 . '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    '{'  shift, and go to state 379


State 280

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 . '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    '{'  shift, and go to state 380


State 281

  203 function_name: "operator" "is" .
  205              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 203 (function_name)


State 282

  204 function_name: "operator" "as" .
  206              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 204 (function_name)


State 283

  201 function_name: "operator" "delete" .

    $default  reduce using rule 201 (function_name)


State 284

  152 function_name: "operator" "+=" .

    $default  reduce using rule 152 (function_name)


State 285

  153 function_name: "operator" "-=" .

    $default  reduce using rule 153 (function_name)


State 286

  155 function_name: "operator" "/=" .

    $default  reduce using rule 155 (function_name)


State 287

  154 function_name: "operator" "*=" .

    $default  reduce using rule 154 (function_name)


State 288

  156 function_name: "operator" "%=" .

    $default  reduce using rule 156 (function_name)


State 289

  157 function_name: "operator" "&=" .

    $default  reduce using rule 157 (function_name)


State 290

  158 function_name: "operator" "|=" .

    $default  reduce using rule 158 (function_name)


State 291

  159 function_name: "operator" "^=" .

    $default  reduce using rule 159 (function_name)


State 292

  185 function_name: "operator" "<<" .

    $default  reduce using rule 185 (function_name)


State 293

  186 function_name: "operator" ">>" .

    $default  reduce using rule 186 (function_name)


State 294

  183 function_name: "operator" "++" .

    $default  reduce using rule 183 (function_name)


State 295

  184 function_name: "operator" "--" .

    $default  reduce using rule 184 (function_name)


State 296

  176 function_name: "operator" "<=" .

    $default  reduce using rule 176 (function_name)


State 297

  187 function_name: "operator" "<<=" .

    $default  reduce using rule 187 (function_name)


State 298

  188 function_name: "operator" ">>=" .

    $default  reduce using rule 188 (function_name)


State 299

  177 function_name: "operator" ">=" .

    $default  reduce using rule 177 (function_name)


State 300

  174 function_name: "operator" "==" .

    $default  reduce using rule 174 (function_name)


State 301

  175 function_name: "operator" "!=" .

    $default  reduce using rule 175 (function_name)


State 302

  202 function_name: "operator" "??" .

    $default  reduce using rule 202 (function_name)


State 303

  196 function_name: "operator" "?." .
  199              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 196 (function_name)


State 304

  194 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 305

  200 function_name: "operator" ":=" .

    $default  reduce using rule 200 (function_name)


State 306

  189 function_name: "operator" "<<<" .

    $default  reduce using rule 189 (function_name)


State 307

  190 function_name: "operator" ">>>" .

    $default  reduce using rule 190 (function_name)


State 308

  191 function_name: "operator" "<<<=" .

    $default  reduce using rule 191 (function_name)


State 309

  192 function_name: "operator" ">>>=" .

    $default  reduce using rule 192 (function_name)


State 310

  163 function_name: "operator" "&&" .

    $default  reduce using rule 163 (function_name)


State 311

  164 function_name: "operator" "||" .

    $default  reduce using rule 164 (function_name)


State 312

  165 function_name: "operator" "^^" .

    $default  reduce using rule 165 (function_name)


State 313

  160 function_name: "operator" "&&=" .

    $default  reduce using rule 160 (function_name)


State 314

  161 function_name: "operator" "||=" .

    $default  reduce using rule 161 (function_name)


State 315

  162 function_name: "operator" "^^=" .

    $default  reduce using rule 162 (function_name)


State 316

  173 function_name: "operator" ".." .

    $default  reduce using rule 173 (function_name)


State 317

  207 function_name: "operator" '?' . "as"
  208              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 318

  179 function_name: "operator" '|' .

    $default  reduce using rule 179 (function_name)


State 319

  180 function_name: "operator" '^' .

    $default  reduce using rule 180 (function_name)


State 320

  178 function_name: "operator" '&' .

    $default  reduce using rule 178 (function_name)


State 321

  171 function_name: "operator" '<' .

    $default  reduce using rule 171 (function_name)


State 322

  172 function_name: "operator" '>' .

    $default  reduce using rule 172 (function_name)


State 323

  167 function_name: "operator" '-' .

    $default  reduce using rule 167 (function_name)


State 324

  166 function_name: "operator" '+' .

    $default  reduce using rule 166 (function_name)


State 325

  168 function_name: "operator" '*' .

    $default  reduce using rule 168 (function_name)


State 326

  169 function_name: "operator" '/' .

    $default  reduce using rule 169 (function_name)


State 327

  170 function_name: "operator" '%' .

    $default  reduce using rule 170 (function_name)


State 328

  151 function_name: "operator" '~' .

    $default  reduce using rule 151 (function_name)


State 329

  150 function_name: "operator" '!' .

    $default  reduce using rule 150 (function_name)


State 330

  195 function_name: "operator" '.' .
  197              | "operator" '.' . "name"
  198              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 195 (function_name)


State 331

  193 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 332

  181 function_name: "++" "operator" .

    $default  reduce using rule 181 (function_name)


State 333

  182 function_name: "--" "operator" .

    $default  reduce using rule 182 (function_name)


State 334

  145 optional_function_argument_list: '(' . ')'
  146                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    ')'   shift, and go to state 389
    '@'   shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 391
    function_argument_list         go to state 392


State 335

  238 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 394


State 336

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 395
    $@13              go to state 396


State 337

  603 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 397
    "uint"    shift, and go to state 398
    "int64"   shift, and go to state 399
    "uint64"  shift, and go to state 400
    "int8"    shift, and go to state 401
    "uint8"   shift, and go to state 402
    "int16"   shift, and go to state 403
    "uint16"  shift, and go to state 404

    enum_basic_type_declaration  go to state 405


State 338

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 608 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 406


State 339

  617 optional_sealed: "sealed" .

    $default  reduce using rule 617 (optional_sealed)


State 340

  618 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 407


State 341

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name . optional_emit_semis $@48 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 408


State 342

  582 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 582 (global_let)


State 343

  579 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 579 (global_variable_declaration_list)


State 344

  581 global_variable_declaration_list: global_variable_declaration_list $@40 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 409


State 345

  123 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 410


State 346

  124 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 411


State 347

  562 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 562 (global_let_variable_name_with_pos_list)


State 348

  563 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  570 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  571                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  572                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 412
    ':'  shift, and go to state 413
    '&'  shift, and go to state 414

    $default  reduce using rule 555 (optional_ref)

    optional_ref  go to state 415


State 349

  584 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 584 (global_let)


State 350

  109 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 109 (annotation_argument_value_list)


State 351

  700 type_declaration_no_options_no_dim: "type" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 698 ($@51)

    $@51  go to state 416


State 352

  723 type_declaration_no_options_no_dim: "array" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 721 ($@56)

    $@56  go to state 417


State 353

  726 type_declaration_no_options_no_dim: "table" '<' . $@58 table_type_pair '>' $@59

    $default  reduce using rule 724 ($@58)

    $@58  go to state 418


State 354

  701 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 484
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 355

  729 type_declaration_no_options_no_dim: "iterator" '<' . $@60 type_declaration '>' $@61

    $default  reduce using rule 727 ($@60)

    $@60  go to state 494


State 356

  719 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 717 ($@54)

    $@54  go to state 495


State 357

  674 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 496


State 358

  683 bitfield_type_declaration: "bitfield" '<' . $@49 bitfield_bits '>' $@50

    $default  reduce using rule 681 ($@49)

    $@49  go to state 497


State 359

  733 type_declaration_no_options_no_dim: "block" '<' . $@62 type_declaration '>' $@63
  736                                   | "block" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 734 ($@64)
    '>'       reduce using rule 734 ($@64)
    '('       reduce using rule 734 ($@64)
    $default  reduce using rule 731 ($@62)

    $@62  go to state 498
    $@64  go to state 499


State 360

  740 type_declaration_no_options_no_dim: "function" '<' . $@66 type_declaration '>' $@67
  743                                   | "function" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 741 ($@68)
    '>'       reduce using rule 741 ($@68)
    '('       reduce using rule 741 ($@68)
    $default  reduce using rule 738 ($@66)

    $@66  go to state 500
    $@68  go to state 501


State 361

  747 type_declaration_no_options_no_dim: "lambda" '<' . $@70 type_declaration '>' $@71
  750                                   | "lambda" '<' . $@72 optional_function_argument_list optional_function_type '>' $@73

    ':'       reduce using rule 748 ($@72)
    '>'       reduce using rule 748 ($@72)
    '('       reduce using rule 748 ($@72)
    $default  reduce using rule 745 ($@70)

    $@70  go to state 502
    $@72  go to state 503


State 362

  753 type_declaration_no_options_no_dim: "tuple" '<' . $@74 tuple_type_list '>' $@75

    $default  reduce using rule 751 ($@74)

    $@74  go to state 504


State 363

  756 type_declaration_no_options_no_dim: "variant" '<' . $@76 variant_type_list '>' $@77

    $default  reduce using rule 754 ($@76)

    $@76  go to state 505


State 364

  675 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 506
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 365

  702 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  704                                   | '$' name_in_namespace . '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 507
    '('  shift, and go to state 508


State 366

  707 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 367

  712 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 712 (type_declaration_no_options_no_dim)


State 368

  706 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 369

  714 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  715                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 509
    '&'      shift, and go to state 510


State 370

  720 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 371

  716 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 372

  709 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 709 (type_declaration_no_options_no_dim)


State 373

  705 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  708                                   | type_declaration_no_options '-' . "const"
  710                                   | type_declaration_no_options '-' . '&'
  713                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 511
    '&'      shift, and go to state 512
    '['      shift, and go to state 513
    '#'      shift, and go to state 514


State 374

  711 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 711 (type_declaration_no_options_no_dim)


State 375

  688 dim_list: '[' . expr ']'
  689         | '[' . ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    ']'                               shift, and go to state 515
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 516
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 376

  690 dim_list: dim_list . '[' expr ']'
  691         | dim_list . '[' ']'
  693 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 517

    $default  reduce using rule 693 (type_declaration_no_options)


State 377

  758 type_declaration: type_declaration '|' . type_declaration_no_options
  759                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268
    '#'          shift, and go to state 518

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 519
    type_declaration_no_options_no_dim  go to state 275


State 378

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' . $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 772 ($@88)

    $@88  go to state 520


State 379

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' . $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 762 ($@80)

    $@80  go to state 521


State 380

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' . $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 767 ($@84)

    $@84  go to state 522


State 381

  205 function_name: "operator" "is" "name" .

    $default  reduce using rule 205 (function_name)


State 382

  206 function_name: "operator" "as" "name" .

    $default  reduce using rule 206 (function_name)


State 383

  199 function_name: "operator" "?." "name" .

    $default  reduce using rule 199 (function_name)


State 384

  194 function_name: "operator" "?[" ']' .

    $default  reduce using rule 194 (function_name)


State 385

  207 function_name: "operator" '?' "as" .
  208              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 523

    $default  reduce using rule 207 (function_name)


State 386

  197 function_name: "operator" '.' "name" .
  198              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 524

    $default  reduce using rule 197 (function_name)


State 387

  193 function_name: "operator" '[' ']' .

    $default  reduce using rule 193 (function_name)


State 388

  529 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 525


State 389

  145 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 145 (optional_function_argument_list)


State 390

  528 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 526
    "var"  shift, and go to state 527

    $default  reduce using rule 302 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 528


State 391

  530 function_argument_list: function_argument_declaration .

    $default  reduce using rule 530 (function_argument_list)


State 392

  146 optional_function_argument_list: '(' function_argument_list . ')'
  531 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 529
    ';'  shift, and go to state 530


State 393

  148 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 531


State 394

  238 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 238 (function_declaration_header)


State 395

  240 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 240 (function_declaration)


State 396

  247 expression_block: $@13 . '{' expressions $@14 '}' expression_block_finally

    '{'  shift, and go to state 532


State 397

  664 enum_basic_type_declaration: "int" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 398

  667 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 667 (enum_basic_type_declaration)


State 399

  670 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 670 (enum_basic_type_declaration)


State 400

  671 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 671 (enum_basic_type_declaration)


State 401

  665 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 402

  668 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 668 (enum_basic_type_declaration)


State 403

  666 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 666 (enum_basic_type_declaration)


State 404

  669 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 669 (enum_basic_type_declaration)


State 405

  603 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 603 (optional_enum_basic_type_declaration)


State 406

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@44 enum_list optional_commas $@45 '}'

    '{'  shift, and go to state 533


State 407

  618 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 534

    $default  reduce using rule 614 (optional_structure_parent)

    optional_structure_parent  go to state 535


State 408

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis . $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 630 ($@48)

    $@48  go to state 536


State 409

  581 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 537
    "name"  shift, and go to state 538

    let_variable_name_with_pos_list  go to state 539
    let_variable_declaration         go to state 540


State 410

  123 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 123 (metadata_argument_list)


State 411

  124 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 541


State 412

  563 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 542


State 413

  570 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  571                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 543
    type_declaration_no_options_no_dim  go to state 275


State 414

  556 optional_ref: '&' .

    $default  reduce using rule 556 (optional_ref)


State 415

  572 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 547


State 416

  700 type_declaration_no_options_no_dim: "type" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 548


State 417

  723 type_declaration_no_options_no_dim: "array" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 549


State 418

  726 type_declaration_no_options_no_dim: "table" '<' $@58 . table_type_pair '>' $@59

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 550
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 551


State 419

  801 make_struct_decl: "struct" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 552


State 420

  804 make_struct_decl: "class" . '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 553


State 421

  411 expr: "true" .

    $default  reduce using rule 411 (expr)


State 422

  412 expr: "false" .

    $default  reduce using rule 412 (expr)


State 423

  286 expr_new: "new" . new_type_declaration
  287         | "new" . new_type_declaration '(' use_initializer ')'
  288         | "new" . new_type_declaration '(' expr_list ')'
  289         | "new" . new_type_declaration '(' make_struct_single ')'
  290         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  291         | "new" . make_decl

    "struct"       shift, and go to state 419
    "class"        shift, and go to state 420
    "array"        shift, and go to state 426
    "table"        shift, and go to state 428
    "fixed_array"  shift, and go to state 435
    "default"      shift, and go to state 436
    "tuple"        shift, and go to state 438
    "variant"      shift, and go to state 439
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 554
    '['            shift, and go to state 463
    '{'            shift, and go to state 467

    name_in_namespace           go to state 269
    new_type_declaration        go to state 555
    structure_type_declaration  go to state 556
    make_decl                   go to state 557
    make_struct_decl            go to state 489
    make_tuple_call             go to state 490
    make_dim_decl               go to state 491
    make_table_decl             go to state 492
    array_comprehension         go to state 493


State 424

  326 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  327               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  328               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 558


State 425

  325 expr_type_decl: "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 559


State 426

  820 make_dim_decl: "array" . "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  823              | "array" . "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'
  826              | "array" . "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  827              | "array" . '(' expr_list optional_comma ')'
  830              | "array" . '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "struct"   shift, and go to state 560
    "tuple"    shift, and go to state 561
    "variant"  shift, and go to state 562
    '<'        shift, and go to state 563
    '('        shift, and go to state 564


State 427

  405 expr: "null" .

    $default  reduce using rule 405 (expr)


State 428

  839 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  840                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  841                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 565
    '('  shift, and go to state 566


State 429

  456 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 567


State 430

  316 expr_cast: "cast" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 568


State 431

  319 expr_cast: "upcast" . '<' $@19 type_declaration_no_options '>' $@20 expr

    '<'  shift, and go to state 569


State 432

  457 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 570


State 433

  322 expr_cast: "reinterpret" . '<' $@21 type_declaration_no_options '>' $@22 expr

    '<'  shift, and go to state 571


State 434

  487 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 572


State 435

  831 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  834              | "fixed_array" . '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 573
    '('  shift, and go to state 574


State 436

  810 make_struct_decl: "default" . '<' $@96 type_declaration_no_options '>' $@97 use_initializer

    '<'  shift, and go to state 575


State 437

  663 basic_type_declaration: "bitfield" .

    $default  reduce using rule 663 (basic_type_declaration)


State 438

  813 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  816                | "tuple" . '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 576
    '('  shift, and go to state 577


State 439

  807 make_struct_decl: "variant" . '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 578


State 440

  488 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  489               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  490               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 579


State 441

  441 expr: "++" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 580
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 442

  442 expr: "--" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 581
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 443

  491 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 582


State 444

  492 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 583


State 445

  493 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 584


State 446

  494 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 585


State 447

  495 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 586


State 448

  497 expr_mtag: "$c" . '(' expr ')' '(' ')'
  498          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 587


State 449

  496 expr_mtag: "..." .

    $default  reduce using rule 496 (expr_mtag)


State 450

  349 expr_numeric_const: "integer constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 451

  351 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 351 (expr_numeric_const)


State 452

  350 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 453

  352 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 352 (expr_numeric_const)


State 454

  353 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 353 (expr_numeric_const)


State 455

  354 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 456

  355 expr_numeric_const: "double constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 457

   41 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 38 (string_builder_body)

    string_builder_body  go to state 588


State 458

  418 expr: '-' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 589
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 459

  417 expr: '+' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 590
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 460

  455 expr: '*' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 591
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 461

  416 expr: '~' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 592
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 462

  415 expr: '!' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 593
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 463

  817 make_dim_decl: '[' . optional_expr_list ']'
  846 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  847                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 596
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 597
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 464

  445 expr: '(' . expr_list optional_comma ')'
  446     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 599
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 600
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 601
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 602
    make_struct_single      go to state 603
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 465

  334 block_or_lambda: '$' .

    $default  reduce using rule 334 (block_or_lambda)


State 466

  335 block_or_lambda: '@' .
  336                | '@' . '@'
  381 func_addr_expr: '@' . '@' func_addr_name
  384               | '@' . '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  387               | '@' . '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  506 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 604

    $default  reduce using rule 335 (block_or_lambda)


State 467

  838 make_table_decl: '{' . $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  848 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 605

    $default  reduce using rule 837 ($@110)

    $@110  go to state 606


State 468

  409 expr: string_builder .

    $default  reduce using rule 409 (expr)


State 469

  408 expr: expr_reader .

    $default  reduce using rule 408 (expr)


State 470

  486 expr: expr_call_pipe .

    $default  reduce using rule 486 (expr)


State 471

  375 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  376                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  398 expr_call: name_in_namespace . '(' ')'
  399          | name_in_namespace . '(' "uninitialized" ')'
  400          | name_in_namespace . '(' make_struct_single ')'
  401          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  402          | name_in_namespace . '(' expr_list ')'
  406 expr: name_in_namespace .

    '('  shift, and go to state 607

    $default  reduce using rule 406 (expr)


State 472

  479 expr: expr_new .

    $default  reduce using rule 479 (expr)


State 473

  478 expr: expr_cast .

    $default  reduce using rule 478 (expr)


State 474

  477 expr: expr_type_decl .

    $default  reduce using rule 477 (expr)


State 475

  476 expr: expr_type_info .

    $default  reduce using rule 476 (expr)


State 476

  346 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 608

    $default  reduce using rule 140 (optional_annotation_list)

    optional_annotation_list  go to state 609


State 477

  482 expr: expr_full_block .

    $default  reduce using rule 482 (expr)


State 478

  407 expr: expr_numeric_const .

    $default  reduce using rule 407 (expr)


State 479

  481 expr: expr_named_call .

    $default  reduce using rule 481 (expr)


State 480

  480 expr: expr_method_call .

    $default  reduce using rule 480 (expr)


State 481

  453 expr: func_addr_expr .

    $default  reduce using rule 453 (expr)


State 482

  413 expr: expr_field .

    $default  reduce using rule 413 (expr)


State 483

  248 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  454 expr: expr_call .

    '$'  shift, and go to state 465
    '@'  shift, and go to state 610
    '{'  shift, and go to state 611

    $default  reduce using rule 454 (expr)

    block_or_lambda                go to state 612
    expr_full_block_assumed_piped  go to state 613


State 484

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  701 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 649


State 485

  458 expr: expr_generator .

    $default  reduce using rule 458 (expr)


State 486

  414 expr: expr_mtag .

    $default  reduce using rule 414 (expr)


State 487

  403 expr_call: basic_type_declaration . '(' ')'
  404          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 650


State 488

  410 expr: make_decl .

    $default  reduce using rule 410 (expr)


State 489

  775 make_decl: make_struct_decl .

    $default  reduce using rule 775 (make_decl)


State 490

  779 make_decl: make_tuple_call .

    $default  reduce using rule 779 (make_decl)


State 491

  776 make_decl: make_dim_decl .

    $default  reduce using rule 776 (make_decl)


State 492

  777 make_decl: make_table_decl .

    $default  reduce using rule 777 (make_decl)


State 493

  778 make_decl: array_comprehension .

    $default  reduce using rule 778 (make_decl)


State 494

  729 type_declaration_no_options_no_dim: "iterator" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 651


State 495

  719 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 652


State 496

  674 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 653


State 497

  683 bitfield_type_declaration: "bitfield" '<' $@49 . bitfield_bits '>' $@50

    "name"  shift, and go to state 654

    bitfield_bits  go to state 655


State 498

  733 type_declaration_no_options_no_dim: "block" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 656


State 499

  736 type_declaration_no_options_no_dim: "block" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 657


State 500

  740 type_declaration_no_options_no_dim: "function" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 658


State 501

  743 type_declaration_no_options_no_dim: "function" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 659


State 502

  747 type_declaration_no_options_no_dim: "lambda" '<' $@70 . type_declaration '>' $@71

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 660


State 503

  750 type_declaration_no_options_no_dim: "lambda" '<' $@72 . optional_function_argument_list optional_function_type '>' $@73

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 661


State 504

  753 type_declaration_no_options_no_dim: "tuple" '<' $@74 . tuple_type_list '>' $@75

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 662
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 663
    tuple_type_list                     go to state 664
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 665


State 505

  756 type_declaration_no_options_no_dim: "variant" '<' $@76 . variant_type_list '>' $@77

    "name"  shift, and go to state 666

    variant_type       go to state 667
    variant_type_list  go to state 668


State 506

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  675 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 669


State 507

  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 703 ($@53)

    $@53  go to state 670


State 508

  702 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 671
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 597
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 509

  714 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 510

  715 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 511

  708 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 512

  710 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 513

  705 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 672


State 514

  713 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 515

  689 dim_list: '[' ']' .

    $default  reduce using rule 689 (dim_list)


State 516

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  688 dim_list: '[' expr . ']'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ']'    shift, and go to state 673


State 517

  690 dim_list: dim_list '[' . expr ']'
  691         | dim_list '[' . ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    ']'                               shift, and go to state 674
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 675
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 518

  759 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 759 (type_declaration)


State 519

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  758 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 758 (type_declaration)


State 520

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 . bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 676

    $default  reduce using rule 678 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 677


State 521

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 . tuple_alias_type_list optional_semis $@81 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 662
    '$'          shift, and go to state 268

    $default  reduce using rule 536 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 678
    tuple_alias_type_list               go to state 679
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 665


State 522

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 . variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 666

    $default  reduce using rule 542 (variant_alias_type_list)

    variant_type             go to state 680
    variant_alias_type_list  go to state 681


State 523

  208 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 208 (function_name)


State 524

  198 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 198 (function_name)


State 525

  529 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 682
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 526

  300 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 300 (kwd_let_var_or_nothing)


State 527

  301 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 301 (kwd_let_var_or_nothing)


State 528

  528 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_declaration         go to state 685
    variable_name_with_pos_list  go to state 686


State 529

  146 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 146 (optional_function_argument_list)


State 530

  531 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 687


State 531

  148 optional_function_type: ':' type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 148 (optional_function_type)


State 532

  247 expression_block: $@13 '{' . expressions $@14 '}' expression_block_finally

    $default  reduce using rule 268 (expressions)

    expressions  go to state 688


State 533

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 611 ($@44)

    $@44  go to state 689


State 534

  615 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 690


State 535

  618 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 618 (structure_name)


State 536

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 691
    '{'  shift, and go to state 692

    optional_struct_variable_declaration_list  go to state 693


State 537

  558 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 694


State 538

  557 let_variable_name_with_pos_list: "name" .
  559                                | "name" . "aka" "name"

    "aka"  shift, and go to state 695

    $default  reduce using rule 557 (let_variable_name_with_pos_list)


State 539

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  561                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  567 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  568                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  569                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 696
    ':'  shift, and go to state 697
    '&'  shift, and go to state 414

    $default  reduce using rule 555 (optional_ref)

    optional_ref  go to state 698


State 540

  581 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 581 (global_variable_declaration_list)


State 541

  124 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 124 (metadata_argument_list)


State 542

  563 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 563 (global_let_variable_name_with_pos_list)


State 543

  570 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  571                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 544
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 545
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 546
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 699
    copy_or_move_or_clone  go to state 700


State 544

  553 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 553 (copy_or_move_or_clone)


State 545

  554 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 554 (copy_or_move_or_clone)


State 546

  552 copy_or_move_or_clone: '=' .

    $default  reduce using rule 552 (copy_or_move_or_clone)


State 547

  572 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 701
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 548

  700 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration . '>' $@52
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 702


State 549

  723 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration . '>' $@57
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 703


State 550

  726 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair . '>' $@59

    '>'  shift, and go to state 704


State 551

  686 table_type_pair: type_declaration .
  687                | type_declaration . c_or_s type_declaration
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 686 (table_type_pair)

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 709


State 552

  801 make_struct_decl: "struct" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 799 ($@90)

    $@90  go to state 710


State 553

  804 make_struct_decl: "class" '<' . $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 802 ($@92)

    $@92  go to state 711


State 554

  284 new_type_declaration: '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 282 ($@15)

    $@15  go to state 712


State 555

  286 expr_new: "new" new_type_declaration .
  287         | "new" new_type_declaration . '(' use_initializer ')'
  288         | "new" new_type_declaration . '(' expr_list ')'
  289         | "new" new_type_declaration . '(' make_struct_single ')'
  290         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 713

    $default  reduce using rule 286 (expr_new)


State 556

  285 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 285 (new_type_declaration)


State 557

  291 expr_new: "new" make_decl .

    $default  reduce using rule 291 (expr_new)


State 558

  326 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  327               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 714
    '('  shift, and go to state 715


State 559

  325 expr_type_decl: "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 323 ($@23)

    $@23  go to state 716


State 560

  820 make_dim_decl: "array" "struct" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 717


State 561

  823 make_dim_decl: "array" "tuple" . '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 718


State 562

  826 make_dim_decl: "array" "variant" . '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    '<'  shift, and go to state 719


State 563

  830 make_dim_decl: "array" '<' . $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    $default  reduce using rule 828 ($@106)

    $@106  go to state 720


State 564

  827 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 721
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 565

  840 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  841                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 722
    type_declaration_no_options_no_dim  go to state 275


State 566

  839 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 723
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 724
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    expr_map_tuple_list     go to state 725
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 567

  456 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 726
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 568

  316 expr_cast: "cast" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 314 ($@17)

    $@17  go to state 727


State 569

  319 expr_cast: "upcast" '<' . $@19 type_declaration_no_options '>' $@20 expr

    $default  reduce using rule 317 ($@19)

    $@19  go to state 728


State 570

  457 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 729
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 571

  322 expr_cast: "reinterpret" '<' . $@21 type_declaration_no_options '>' $@22 expr

    $default  reduce using rule 320 ($@21)

    $@21  go to state 730


State 572

  487 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 731
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 573

  834 make_dim_decl: "fixed_array" '<' . $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 832 ($@108)

    $@108  go to state 732


State 574

  831 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 733
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 575

  810 make_struct_decl: "default" '<' . $@96 type_declaration_no_options '>' $@97 use_initializer

    $default  reduce using rule 808 ($@96)

    $@96  go to state 734


State 576

  816 make_tuple_call: "tuple" '<' . $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 814 ($@98)

    $@98  go to state 735


State 577

  813 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 736
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 578

  807 make_struct_decl: "variant" '<' . $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 805 ($@94)

    $@94  go to state 737


State 579

  488 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  489               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  490               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 738
    type_declaration_no_options_no_dim  go to state 275


State 580

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  441     | "++" expr .
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 441 (expr)


State 581

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  442     | "--" expr .
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 442 (expr)


State 582

  491 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 739
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 583

  492 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 740
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 584

  493 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 741
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 585

  494 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 742
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 586

  495 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 743
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 587

  497 expr_mtag: "$c" '(' . expr ')' '(' ')'
  498          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 744
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 588

   39 string_builder_body: string_builder_body . character_sequence
   40                    | string_builder_body . "{" expr optional_format_string "}"
   41 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 745
    "{"                   shift, and go to state 746

    character_sequence  go to state 747


State 589

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  418 expr: '-' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 418 (expr)


State 590

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  417 expr: '+' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 417 (expr)


State 591

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  455     | '*' expr .
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 455 (expr)


State 592

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  416 expr: '~' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 416 (expr)


State 593

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  415 expr: '!' expr .
  419     | expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 415 (expr)


State 594

  846 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 748


State 595

  847 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 749


State 596

  817 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 750


State 597

  272 optional_expr_list: expr_list . optional_comma
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 751

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 752


State 598

  329 expr_list: expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 329 (expr_list)


State 599

  784 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  785                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 753


State 600

  277 name_in_namespace: "name" .
  278                  | "name" . "::" "name"
  780 make_struct_fields: "name" . copy_or_move expr
  781                   | "name" . ":=" expr

    "<-"  shift, and go to state 754
    ":="  shift, and go to state 755
    "::"  shift, and go to state 96
    '='   shift, and go to state 756

    $default  reduce using rule 277 (name_in_namespace)

    copy_or_move  go to state 757


State 601

  330 expr_list: expr_list . ',' expr
  445 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 751

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 758


State 602

  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  790 make_struct_single: make_struct_fields .

    ','  shift, and go to state 759

    $default  reduce using rule 790 (make_struct_single)


State 603

  446 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 760


State 604

  336 block_or_lambda: '@' '@' .
  381 func_addr_expr: '@' '@' . func_addr_name
  384               | '@' '@' . '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  387               | '@' '@' . '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  506 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 761
    "$c"    shift, and go to state 762
    "name"  shift, and go to state 58
    '<'     shift, and go to state 763

    $default  reduce using rule 336 (block_or_lambda)

    name_in_namespace  go to state 764
    func_addr_name     go to state 765


State 605

  848 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 766


State 606

  838 make_table_decl: '{' $@110 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 767


State 607

  375 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  376                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  398 expr_call: name_in_namespace '(' . ')'
  399          | name_in_namespace '(' . "uninitialized" ')'
  400          | name_in_namespace '(' . make_struct_single ')'
  401          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  402          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "uninitialized"                   shift, and go to state 768
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 599
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 600
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 769
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 770
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 771
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 602
    make_struct_single      go to state 772
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 608

  141 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 773
    name_in_namespace             go to state 70


State 609

  346 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 774

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 775


State 610

  335 block_or_lambda: '@' .
  336                | '@' . '@'

    '@'  shift, and go to state 776

    $default  reduce using rule 335 (block_or_lambda)


State 611

  348 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 268 (expressions)

    expressions  go to state 777


State 612

  347 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 608

    $default  reduce using rule 140 (optional_annotation_list)

    optional_annotation_list  go to state 778


State 613

  248 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 248 (expr_call_pipe)


State 614

  463 expr: expr "is" . "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr "is" . basic_type_declaration
  465     | expr "is" . "name"
  505 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 779
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 780
    "name"      shift, and go to state 781

    basic_type_declaration  go to state 782


State 615

  466 expr: expr "as" . "name"
  469     | expr "as" . "type" '<' $@33 type_declaration '>' $@34
  470     | expr "as" . basic_type_declaration
  503 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 783
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 784
    "name"      shift, and go to state 785

    basic_type_declaration  go to state 786


State 616

  419 expr: expr "<<" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 787
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 617

  420 expr: expr ">>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 788
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 618

  443 expr: expr "++" .

    $default  reduce using rule 443 (expr)


State 619

  444 expr: expr "--" .

    $default  reduce using rule 444 (expr)


State 620

  432 expr: expr "<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 789
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 621

  433 expr: expr ">=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 790
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 622

  430 expr: expr "==" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 791
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 623

  431 expr: expr "!=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 792
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 624

  377 expr_method_call: expr "->" . "name" '(' ')'
  378                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 793


State 625

  459 expr: expr "??" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 794
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 626

  451 expr: expr "?." . "name"
  500 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 795
    "name"  shift, and go to state 796


State 627

  449 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 797
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 628

  483 expr: expr "<|" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 798
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 629

  484 expr: expr "|>" . expr
  485     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 799
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 800
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 630

  421 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 801
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 631

  422 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 802
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 632

  437 expr: expr "&&" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 803
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 633

  438 expr: expr "||" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 804
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 634

  439 expr: expr "^^" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 805
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 635

  440 expr: expr ".." . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 806
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 636

  460 expr: expr '?' . expr ':' expr
  471     | expr '?' . "as" "name"
  474     | expr '?' . "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr '?' . "as" basic_type_declaration
  504 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "as"                              shift, and go to state 807
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 808
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 637

  435 expr: expr '|' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 809
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 638

  436 expr: expr '^' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 810
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 639

  434 expr: expr '&' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 811
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 640

  428 expr: expr '<' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 812
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 641

  429 expr: expr '>' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 813
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 642

  424 expr: expr '-' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 814
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 643

  423 expr: expr '+' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 815
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 644

  425 expr: expr '*' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 816
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 645

  426 expr: expr '/' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 817
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 646

  427 expr: expr '%' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 818
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 647

  388 expr_field: expr '.' . "name"
  389           | expr '.' . '.' "name"
  390           | expr '.' . "name" '(' ')'
  391           | expr '.' . "name" '(' expr_list ')'
  392           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  393           | expr '.' . basic_type_declaration '(' ')'
  394           | expr '.' . basic_type_declaration '(' expr_list ')'
  397           | expr '.' . $@29 error $@30
  448 expr: expr '.' . '[' expr ']'
  450     | expr '.' . "?[" expr ']'
  452     | expr '.' . "?." "name"
  499 expr_mtag: expr '.' . "$f" '(' expr ')'
  501          | expr '.' . '.' "$f" '(' expr ')'
  502          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 819
    "?["        shift, and go to state 820
    "$f"        shift, and go to state 821
    "name"      shift, and go to state 822
    '.'         shift, and go to state 823
    '['         shift, and go to state 824

    $default  reduce using rule 395 ($@29)

    $@29                    go to state 825
    basic_type_declaration  go to state 826


State 648

  447 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 827
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 649

  701 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 650

  403 expr_call: basic_type_declaration '(' . ')'
  404          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 828
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 829
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 651

  729 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration . '>' $@61
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 830


State 652

  719 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration . '>' $@55
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 831


State 653

  674 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 674 (auto_type_declaration)


State 654

  676 bitfield_bits: "name" .

    $default  reduce using rule 676 (bitfield_bits)


State 655

  677 bitfield_bits: bitfield_bits . ';' "name"
  683 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits . '>' $@50

    '>'  shift, and go to state 832
    ';'  shift, and go to state 833


State 656

  733 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration . '>' $@63
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 834


State 657

  736 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 835


State 658

  740 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration . '>' $@67
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 836


State 659

  743 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 837


State 660

  747 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration . '>' $@71
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 838


State 661

  750 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list . optional_function_type '>' $@73

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 839


State 662

  277 name_in_namespace: "name" .
  278                  | "name" . "::" "name"
  533 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 840

    $default  reduce using rule 277 (name_in_namespace)


State 663

  534 tuple_type_list: tuple_type .

    $default  reduce using rule 534 (tuple_type_list)


State 664

  535 tuple_type_list: tuple_type_list . c_or_s tuple_type
  753 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list . '>' $@75

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 841
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 842


State 665

  532 tuple_type: type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 532 (tuple_type)


State 666

  539 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 843


State 667

  540 variant_type_list: variant_type .

    $default  reduce using rule 540 (variant_type_list)


State 668

  541 variant_type_list: variant_type_list . c_or_s variant_type
  756 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list . '>' $@77

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 844
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 845


State 669

  675 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 675 (auto_type_declaration)


State 670

  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 846
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 847


State 671

  702 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 848


State 672

  705 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 673

  688 dim_list: '[' expr ']' .

    $default  reduce using rule 688 (dim_list)


State 674

  691 dim_list: dim_list '[' ']' .

    $default  reduce using rule 691 (dim_list)


State 675

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  690 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ']'    shift, and go to state 849


State 676

  679 bitfield_alias_bits: "name" .

    $default  reduce using rule 679 (bitfield_alias_bits)


State 677

  680 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits . optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 705
    ','                shift, and go to state 706

    $default  reduce using rule 604 (optional_commas)

    COMMA            go to state 850
    commas           go to state 851
    optional_commas  go to state 852


State 678

  537 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 537 (tuple_alias_type_list)


State 679

  538 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list . optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 853
    semis           go to state 854
    optional_semis  go to state 855


State 680

  543 variant_alias_type_list: variant_type .

    $default  reduce using rule 543 (variant_alias_type_list)


State 681

  544 variant_alias_type_list: variant_alias_type_list . semis variant_type
  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list . optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 853
    semis           go to state 856
    optional_semis  go to state 857


State 682

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  529 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 858


State 683

  633 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 859


State 684

  632 variable_name_with_pos_list: "name" .
  634                            | "name" . "aka" "name"

    "aka"  shift, and go to state 860

    $default  reduce using rule 632 (variable_name_with_pos_list)


State 685

  528 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 528 (function_argument_declaration)


State 686

  547 variable_declaration: variable_name_with_pos_list .
  548                     | variable_name_with_pos_list . '&'
  549                     | variable_name_with_pos_list . ':' type_declaration
  550                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  551                     | variable_name_with_pos_list . copy_or_move expr
  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 754
    ','   shift, and go to state 861
    '='   shift, and go to state 756
    ':'   shift, and go to state 862
    '&'   shift, and go to state 863

    $default  reduce using rule 547 (variable_declaration)

    copy_or_move  go to state 864


State 687

  531 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 531 (function_argument_list)


State 688

  247 expression_block: $@13 '{' expressions . $@14 '}' expression_block_finally
  269 expressions: expressions . expression_any
  270            | expressions . error

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 246 ($@14)

    SEMICOLON                         go to state 877
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    expression_if_then_else           go to state 881
    $@6                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@7                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@8                               go to state 888
    expression_with                   go to state 889
    $@9                               go to state 890
    expression_with_alias             go to state 891
    $@14                              go to state 892
    expr_call_pipe                    go to state 470
    expression_any                    go to state 893
    name_in_namespace                 go to state 471
    expression_delete                 go to state 894
    expr_new                          go to state 472
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 902
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 903
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 689

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 . enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 904

    $default  reduce using rule 589 (enum_list)

    enum_expression  go to state 905
    enum_list        go to state 906


State 690

  615 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 615 (optional_structure_parent)


State 691

  626 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 626 (optional_struct_variable_declaration_list)


State 692

  627 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 520 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 907


State 693

  631 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list .

    $default  reduce using rule 631 (structure_declaration)


State 694

  558 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 908
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 695

  559 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 909


State 696

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  561                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 910


State 697

  567 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  568                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 911
    type_declaration_no_options_no_dim  go to state 275


State 698

  569 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 912


State 699

  570 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 570 (global_let_variable_declaration)


State 700

  571 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 913
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 701

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  572 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 614
    "as"                   shift, and go to state 615
    "<<"                   shift, and go to state 616
    ">>"                   shift, and go to state 617
    "++"                   shift, and go to state 618
    "--"                   shift, and go to state 619
    "<="                   shift, and go to state 620
    ">="                   shift, and go to state 621
    "=="                   shift, and go to state 622
    "!="                   shift, and go to state 623
    "->"                   shift, and go to state 624
    "??"                   shift, and go to state 625
    "?."                   shift, and go to state 626
    "?["                   shift, and go to state 627
    "<|"                   shift, and go to state 628
    "|>"                   shift, and go to state 629
    "<<<"                  shift, and go to state 630
    ">>>"                  shift, and go to state 631
    "&&"                   shift, and go to state 632
    "||"                   shift, and go to state 633
    "^^"                   shift, and go to state 634
    ".."                   shift, and go to state 635
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 636
    '|'                    shift, and go to state 637
    '^'                    shift, and go to state 638
    '&'                    shift, and go to state 639
    '<'                    shift, and go to state 640
    '>'                    shift, and go to state 641
    '-'                    shift, and go to state 642
    '+'                    shift, and go to state 643
    '*'                    shift, and go to state 644
    '/'                    shift, and go to state 645
    '%'                    shift, and go to state 646
    '.'                    shift, and go to state 647
    '['                    shift, and go to state 648
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 914


State 702

  700 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 699 ($@52)

    $@52  go to state 915


State 703

  723 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 722 ($@57)

    $@57  go to state 916


State 704

  726 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' . $@59

    $default  reduce using rule 725 ($@59)

    $@59  go to state 917


State 705

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 706

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 707

  684 c_or_s: COMMA .

    $default  reduce using rule 684 (c_or_s)


State 708

  685 c_or_s: SEMICOLON .

    $default  reduce using rule 685 (c_or_s)


State 709

  687 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 918


State 710

  801 make_struct_decl: "struct" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 919
    type_declaration_no_options_no_dim  go to state 275


State 711

  804 make_struct_decl: "class" '<' $@92 . type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 920
    type_declaration_no_options_no_dim  go to state 275


State 712

  284 new_type_declaration: '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 921


State 713

  287 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  288         | "new" new_type_declaration '(' . expr_list ')'
  289         | "new" new_type_declaration '(' . make_struct_single ')'
  290         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "uninitialized"                   shift, and go to state 922
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 599
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 600
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 797 (use_initializer)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 923
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 602
    make_struct_single      go to state 924
    use_initializer         go to state 925
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 714

  327 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 926


State 715

  326 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 927
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 716

  325 expr_type_decl: "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 928


State 717

  820 make_dim_decl: "array" "struct" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 818 ($@100)

    $@100  go to state 929


State 718

  823 make_dim_decl: "array" "tuple" '<' . $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 821 ($@102)

    $@102  go to state 930


State 719

  826 make_dim_decl: "array" "variant" '<' . $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    $default  reduce using rule 824 ($@104)

    $@104  go to state 931


State 720

  830 make_dim_decl: "array" '<' $@106 . type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 932
    type_declaration_no_options_no_dim  go to state 275


State 721

  330 expr_list: expr_list . ',' expr
  827 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 751

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 933


State 722

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  840 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  841                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "??"                   shift, and go to state 370
    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '>'                    shift, and go to state 934
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 935


State 723

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  811 make_map_tuple: expr . "=>" expr
  812               | expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "=>"   shift, and go to state 936
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 812 (make_map_tuple)


State 724

  835 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 835 (expr_map_tuple_list)


State 725

  836 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  839 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 937

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 938


State 726

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  456     | "deref" '(' expr . ')'
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 939


State 727

  316 expr_cast: "cast" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 940
    type_declaration_no_options_no_dim  go to state 275


State 728

  319 expr_cast: "upcast" '<' $@19 . type_declaration_no_options '>' $@20 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 941
    type_declaration_no_options_no_dim  go to state 275


State 729

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  457     | "addr" '(' expr . ')'
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 942


State 730

  322 expr_cast: "reinterpret" '<' $@21 . type_declaration_no_options '>' $@22 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 943
    type_declaration_no_options_no_dim  go to state 275


State 731

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  487     | "unsafe" '(' expr . ')'
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 944


State 732

  834 make_dim_decl: "fixed_array" '<' $@108 . type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 945
    type_declaration_no_options_no_dim  go to state 275


State 733

  330 expr_list: expr_list . ',' expr
  831 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 751

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 946


State 734

  810 make_struct_decl: "default" '<' $@96 . type_declaration_no_options '>' $@97 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 947
    type_declaration_no_options_no_dim  go to state 275


State 735

  816 make_tuple_call: "tuple" '<' $@98 . tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 662
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 663
    tuple_type_list                     go to state 948
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 665


State 736

  330 expr_list: expr_list . ',' expr
  813 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 751

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 949


State 737

  807 make_struct_decl: "variant" '<' $@94 . variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 666

    variant_type       go to state 667
    variant_type_list  go to state 950


State 738

  488 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  489               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  490               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 951
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 739

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$$" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 952


State 740

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$i" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 953


State 741

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  493 expr_mtag: "$v" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 954


State 742

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  494 expr_mtag: "$b" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 955


State 743

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  495 expr_mtag: "$a" '(' expr . ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 956


State 744

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  497 expr_mtag: "$c" '(' expr . ')' '(' ')'
  498          | "$c" '(' expr . ')' '(' expr_list ')'
  499          | expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 957


State 745

   41 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 41 (string_builder)


State 746

   40 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 958
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 747

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   39 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 39 (string_builder_body)


State 748

  846 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 959


State 749

  847 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 960


State 750

  817 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 817 (make_dim_decl)


State 751

  330 expr_list: expr_list ',' . expr
  845 optional_comma: ',' .

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 845 (optional_comma)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 961
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 752

  272 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 272 (optional_expr_list)


State 753

  784 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  785                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 962
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 754

  546 copy_or_move: "<-" .

    $default  reduce using rule 546 (copy_or_move)


State 755

  781 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 963
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 756

  545 copy_or_move: '=' .

    $default  reduce using rule 545 (copy_or_move)


State 757

  780 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 964
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 758

  445 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 965


State 759

  782 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  783                   | make_struct_fields ',' . "name" ":=" expr
  786                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 966
    "name"  shift, and go to state 967


State 760

  446 expr: '(' make_struct_single ')' .

    $default  reduce using rule 446 (expr)


State 761

  380 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 968


State 762

  506 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 969


State 763

  384 func_addr_expr: '@' '@' '<' . $@25 type_declaration_no_options '>' $@26 func_addr_name
  387               | '@' '@' '<' . $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    ':'       reduce using rule 385 ($@27)
    '>'       reduce using rule 385 ($@27)
    '('       reduce using rule 385 ($@27)
    $default  reduce using rule 382 ($@25)

    $@25  go to state 970
    $@27  go to state 971


State 764

  379 func_addr_name: name_in_namespace .

    $default  reduce using rule 379 (func_addr_name)


State 765

  381 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 381 (func_addr_expr)


State 766

  848 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 972


State 767

  838 make_table_decl: '{' $@110 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 273 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 973
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 723
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 724
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 974
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 768

  399 expr_call: name_in_namespace '(' "uninitialized" . ')'
  401          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975
    ')'     shift, and go to state 976

    make_struct_fields  go to state 602
    make_struct_single  go to state 977


State 769

  375 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  817 make_dim_decl: '[' . optional_expr_list ']'
  846 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  847                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 599
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 600
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 596
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 597
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 978
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 770

  398 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 398 (expr_call)


State 771

  330 expr_list: expr_list . ',' expr
  376 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  402 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 979
    ')'  shift, and go to state 980


State 772

  400 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 981


State 773

  139 annotation_list: annotation_list . ',' annotation_declaration
  141 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 982


State 774

  345 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 983


State 775

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 984


State 776

  336 block_or_lambda: '@' '@' .

    $default  reduce using rule 336 (block_or_lambda)


State 777

  269 expressions: expressions . expression_any
  270            | expressions . error
  348 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467
    '}'                               shift, and go to state 985

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)

    SEMICOLON                         go to state 877
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    expression_if_then_else           go to state 881
    $@6                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@7                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@8                               go to state 888
    expression_with                   go to state 889
    $@9                               go to state 890
    expression_with_alias             go to state 891
    expr_call_pipe                    go to state 470
    expression_any                    go to state 893
    name_in_namespace                 go to state 471
    expression_delete                 go to state 894
    expr_new                          go to state 472
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 902
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 903
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 778

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 774

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 986


State 779

  463 expr: expr "is" "type" . '<' $@31 type_declaration_no_options '>' $@32

    '<'  shift, and go to state 987


State 780

  505 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 988


State 781

  465 expr: expr "is" "name" .

    $default  reduce using rule 465 (expr)


State 782

  464 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 464 (expr)


State 783

  469 expr: expr "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 989


State 784

  503 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 990


State 785

  466 expr: expr "as" "name" .

    $default  reduce using rule 466 (expr)


State 786

  470 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 470 (expr)


State 787

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  419     | expr "<<" expr .
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '-'   shift, and go to state 642
    '+'   shift, and go to state 643
    '*'   shift, and go to state 644
    '/'   shift, and go to state 645
    '%'   shift, and go to state 646
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 419 (expr)


State 788

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  420     | expr ">>" expr .
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '-'   shift, and go to state 642
    '+'   shift, and go to state 643
    '*'   shift, and go to state 644
    '/'   shift, and go to state 645
    '%'   shift, and go to state 646
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 420 (expr)


State 789

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  432     | expr "<=" expr .
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 432 (expr)


State 790

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  433     | expr ">=" expr .
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 433 (expr)


State 791

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  430     | expr "==" expr .
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 430 (expr)


State 792

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  431     | expr "!=" expr .
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 431 (expr)


State 793

  377 expr_method_call: expr "->" "name" . '(' ')'
  378                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 991


State 794

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  459     | expr "??" expr .
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 459 (expr)


State 795

  500 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 992


State 796

  451 expr: expr "?." "name" .

    $default  reduce using rule 451 (expr)


State 797

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  449     | expr "?[" expr . ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ']'    shift, and go to state 993


State 798

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  483     | expr "<|" expr .
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 483 (expr)


State 799

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  484     | expr "|>" expr .
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 624
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 484 (expr)


State 800

  403 expr_call: basic_type_declaration . '(' ')'
  404          | basic_type_declaration . '(' expr_list ')'
  485 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 650

    $default  reduce using rule 485 (expr)


State 801

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  421     | expr "<<<" expr .
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '-'   shift, and go to state 642
    '+'   shift, and go to state 643
    '*'   shift, and go to state 644
    '/'   shift, and go to state 645
    '%'   shift, and go to state 646
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 421 (expr)


State 802

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  422     | expr ">>>" expr .
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '-'   shift, and go to state 642
    '+'   shift, and go to state 643
    '*'   shift, and go to state 644
    '/'   shift, and go to state 645
    '%'   shift, and go to state 646
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 422 (expr)


State 803

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  437     | expr "&&" expr .
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 437 (expr)


State 804

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  438     | expr "||" expr .
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "^^"   shift, and go to state 634
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 438 (expr)


State 805

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  439     | expr "^^" expr .
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 439 (expr)


State 806

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  440     | expr ".." expr .
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    ".."  error (nonassociative)

    $default  reduce using rule 440 (expr)


State 807

  471 expr: expr '?' "as" . "name"
  474     | expr '?' "as" . "type" '<' $@35 type_declaration '>' $@36
  475     | expr '?' "as" . basic_type_declaration
  504 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 994
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 995
    "name"      shift, and go to state 996

    basic_type_declaration  go to state 997


State 808

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  460     | expr '?' expr . ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    ':'    shift, and go to state 998
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648


State 809

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  435     | expr '|' expr .
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 435 (expr)


State 810

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  436     | expr '^' expr .
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 436 (expr)


State 811

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  434     | expr '&' expr .
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 434 (expr)


State 812

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  428     | expr '<' expr .
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 428 (expr)


State 813

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  429     | expr '>' expr .
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 429 (expr)


State 814

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  424     | expr '-' expr .
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '*'   shift, and go to state 644
    '/'   shift, and go to state 645
    '%'   shift, and go to state 646
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 424 (expr)


State 815

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  423     | expr '+' expr .
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '*'   shift, and go to state 644
    '/'   shift, and go to state 645
    '%'   shift, and go to state 646
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 423 (expr)


State 816

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  425     | expr '*' expr .
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 425 (expr)


State 817

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  426     | expr '/' expr .
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 426 (expr)


State 818

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  427     | expr '%' expr .
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 614
    "as"  shift, and go to state 615
    "++"  shift, and go to state 618
    "--"  shift, and go to state 619
    "->"  shift, and go to state 624
    "??"  shift, and go to state 625
    "?."  shift, and go to state 626
    "?["  shift, and go to state 627
    "<|"  shift, and go to state 628
    "|>"  shift, and go to state 629
    '.'   shift, and go to state 647
    '['   shift, and go to state 648

    $default  reduce using rule 427 (expr)


State 819

  452 expr: expr '.' "?." . "name"
  502 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 999
    "name"  shift, and go to state 1000


State 820

  450 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1001
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 821

  499 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1002


State 822

  388 expr_field: expr '.' "name" .
  390           | expr '.' "name" . '(' ')'
  391           | expr '.' "name" . '(' expr_list ')'
  392           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1003

    $default  reduce using rule 388 (expr_field)


State 823

  389 expr_field: expr '.' '.' . "name"
  501 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1004
    "name"  shift, and go to state 1005


State 824

  448 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1006
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 825

  397 expr_field: expr '.' $@29 . error $@30

    error  shift, and go to state 1007


State 826

  393 expr_field: expr '.' basic_type_declaration . '(' ')'
  394           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1008


State 827

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  447     | expr '[' expr . ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ']'    shift, and go to state 1009


State 828

  403 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 403 (expr_call)


State 829

  330 expr_list: expr_list . ',' expr
  404 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1011


State 830

  729 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 728 ($@61)

    $@61  go to state 1012


State 831

  719 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 718 ($@55)

    $@55  go to state 1013


State 832

  683 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' . $@50

    $default  reduce using rule 682 ($@50)

    $@50  go to state 1014


State 833

  677 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1015


State 834

  733 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 732 ($@63)

    $@63  go to state 1016


State 835

  736 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1017


State 836

  740 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 739 ($@67)

    $@67  go to state 1018


State 837

  743 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1019


State 838

  747 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' . $@71

    $default  reduce using rule 746 ($@71)

    $@71  go to state 1020


State 839

  750 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type . '>' $@73

    '>'  shift, and go to state 1021


State 840

  533 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1022


State 841

  753 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' . $@75

    $default  reduce using rule 752 ($@75)

    $@75  go to state 1023


State 842

  535 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 662
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1024
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 665


State 843

  539 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1025


State 844

  756 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' . $@77

    $default  reduce using rule 755 ($@77)

    $@77  go to state 1026


State 845

  541 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 666

    variant_type  go to state 1027


State 846

  276 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 1028
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 1029


State 847

  275 type_declaration_no_options_list: type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 275 (type_declaration_no_options_list)


State 848

  702 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 849

  690 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 690 (dim_list)


State 850

  587 commas: COMMA .

    $default  reduce using rule 587 (commas)


State 851

  588 commas: commas . COMMA
  605 optional_commas: commas .
  680 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1030
    "new line, comma"  shift, and go to state 705
    ','                shift, and go to state 706

    $default  reduce using rule 605 (optional_commas)

    COMMA  go to state 1031


State 852

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas . $@89 '}'

    $default  reduce using rule 773 ($@89)

    $@89  go to state 1032


State 853

   82 semis: SEMICOLON .

    $default  reduce using rule 82 (semis)


State 854

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  538 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 662
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON                           go to state 1033
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1034
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 665


State 855

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis . $@81 '}'

    $default  reduce using rule 763 ($@81)

    $@81  go to state 1035


State 856

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  544 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 666
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON     go to state 1033
    variant_type  go to state 1036


State 857

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis . $@85 '}'

    $default  reduce using rule 768 ($@85)

    $@85  go to state 1037


State 858

  529 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 529 (function_argument_declaration)


State 859

  633 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1038
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 860

  634 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1039


State 861

  635 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  636                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1040


State 862

  549 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  550                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1041


State 863

  548 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 548 (variable_declaration)


State 864

  551 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1042
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 865

  270 expressions: expressions error .

    $default  reduce using rule 270 (expressions)


State 866

  294 expression_return: "return" .
  295                  | "return" . expr
  296                  | "return" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1043
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 294 (expression_return)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1044
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 867

  292 expression_break: "break" .

    $default  reduce using rule 292 (expression_break)


State 868

  299 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1045
    $@13              go to state 396


State 869

  280 expression_delete: "delete" . expr
  281                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "explicit"                        shift, and go to state 1046
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1047
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 870

  101 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1048


State 871

  293 expression_continue: "continue" .

    $default  reduce using rule 293 (expression_continue)


State 872

  267 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1049


State 873

   61 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1050


State 874

   62 expression_goto: "goto" . "label" "integer constant"
   63                | "goto" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 1051
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1052
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 875

   96 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  487 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 572

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1053


State 876

  297 expression_yield: "yield" . expr
  298                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1054
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1055
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 877

  249 expression_any: SEMICOLON .

    $default  reduce using rule 249 (expression_any)


State 878

  265 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1056


State 879

  266 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1057


State 880

   93 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1058


State 881

  262 expression_any: expression_if_then_else .

    $default  reduce using rule 262 (expression_any)


State 882

   92 expression_if_then_else: $@6 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1059
    "static_if"  shift, and go to state 1060

    if_or_static_if  go to state 1061


State 883

  263 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 263 (expression_any)


State 884

  257 expression_any: expression_for_loop .

    $default  reduce using rule 257 (expression_any)


State 885

   95 expression_for_loop: $@7 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1062


State 886

  254 expression_any: expression_unsafe .

    $default  reduce using rule 254 (expression_any)


State 887

  253 expression_any: expression_while_loop .

    $default  reduce using rule 253 (expression_any)


State 888

   98 expression_while_loop: $@8 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1063


State 889

  255 expression_any: expression_with .

    $default  reduce using rule 255 (expression_any)


State 890

  100 expression_with: $@9 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1064


State 891

  256 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1065


State 892

  247 expression_block: $@13 '{' expressions $@14 . '}' expression_block_finally

    '}'  shift, and go to state 1066


State 893

  269 expressions: expressions expression_any .

    $default  reduce using rule 269 (expressions)


State 894

  251 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1067


State 895

   80 expression_if_one_liner: expression_break .
  258 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1068


State 896

   81 expression_if_one_liner: expression_continue .
  259 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1069


State 897

   78 expression_if_one_liner: expression_return .
  260 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 78 (expression_if_one_liner)

    SEMICOLON  go to state 1070


State 898

   79 expression_if_one_liner: expression_yield .
  261 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (expression_if_one_liner)

    SEMICOLON  go to state 1071


State 899

  264 expression_any: expression_try_catch .

    $default  reduce using rule 264 (expression_any)


State 900

  311 expression_let: kwd_let . optional_in_scope let_variable_declaration
  312               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  313               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1072

    $default  reduce using rule 306 (optional_in_scope)

    optional_in_scope  go to state 1073


State 901

  252 expression_any: expression_let .

    $default  reduce using rule 252 (expression_any)


State 902

  250 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1074


State 903

   77 expression_if_one_liner: expr .
  356 expr_assign: expr .
  357            | expr . '=' expr
  358            | expr . "<-" expr
  359            | expr . ":=" expr
  360            | expr . "&=" expr
  361            | expr . "|=" expr
  362            | expr . "^=" expr
  363            | expr . "&&=" expr
  364            | expr . "||=" expr
  365            | expr . "^^=" expr
  366            | expr . "+=" expr
  367            | expr . "-=" expr
  368            | expr . "*=" expr
  369            | expr . "/=" expr
  370            | expr . "%=" expr
  371            | expr . "<<=" expr
  372            | expr . ">>=" expr
  373            | expr . "<<<=" expr
  374            | expr . ">>>=" expr
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 614
    "as"    shift, and go to state 615
    "+="    shift, and go to state 1075
    "-="    shift, and go to state 1076
    "/="    shift, and go to state 1077
    "*="    shift, and go to state 1078
    "%="    shift, and go to state 1079
    "&="    shift, and go to state 1080
    "|="    shift, and go to state 1081
    "^="    shift, and go to state 1082
    "<<"    shift, and go to state 616
    ">>"    shift, and go to state 617
    "++"    shift, and go to state 618
    "--"    shift, and go to state 619
    "<="    shift, and go to state 620
    "<<="   shift, and go to state 1083
    ">>="   shift, and go to state 1084
    ">="    shift, and go to state 621
    "=="    shift, and go to state 622
    "!="    shift, and go to state 623
    "->"    shift, and go to state 624
    "<-"    shift, and go to state 1085
    "??"    shift, and go to state 625
    "?."    shift, and go to state 626
    "?["    shift, and go to state 627
    "<|"    shift, and go to state 628
    "|>"    shift, and go to state 629
    ":="    shift, and go to state 1086
    "<<<"   shift, and go to state 630
    ">>>"   shift, and go to state 631
    "<<<="  shift, and go to state 1087
    ">>>="  shift, and go to state 1088
    "&&"    shift, and go to state 632
    "||"    shift, and go to state 633
    "^^"    shift, and go to state 634
    "&&="   shift, and go to state 1089
    "||="   shift, and go to state 1090
    "^^="   shift, and go to state 1091
    ".."    shift, and go to state 635
    '='     shift, and go to state 1092
    '?'     shift, and go to state 636
    '|'     shift, and go to state 637
    '^'     shift, and go to state 638
    '&'     shift, and go to state 639
    '<'     shift, and go to state 640
    '>'     shift, and go to state 641
    '-'     shift, and go to state 642
    '+'     shift, and go to state 643
    '*'     shift, and go to state 644
    '/'     shift, and go to state 645
    '%'     shift, and go to state 646
    '.'     shift, and go to state 647
    '['     shift, and go to state 648

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 356 (expr_assign)


State 904

  585 enum_expression: "name" .
  586                | "name" . '=' expr

    '='  shift, and go to state 1093

    $default  reduce using rule 585 (enum_expression)


State 905

  590 enum_list: enum_expression .

    $default  reduce using rule 590 (enum_list)


State 906

  591 enum_list: enum_list . commas enum_expression
  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list . optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 705
    ','                shift, and go to state 706

    $default  reduce using rule 604 (optional_commas)

    COMMA            go to state 850
    commas           go to state 1094
    optional_commas  go to state 1095


State 907

  521 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  523                                 | struct_variable_declaration_list . $@37 structure_variable_declaration SEMICOLON
  525                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block
  627 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1096
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1097

    "def"     reduce using rule 142 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 522 ($@37)

    optional_annotation_list_with_emit_semis  go to state 1098
    $@37                                      go to state 1099


State 908

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  558 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1100


State 909

  559 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 559 (let_variable_name_with_pos_list)


State 910

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  561                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1101

    $default  reduce using rule 560 (let_variable_name_with_pos_list)


State 911

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  568                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 544
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 545
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 546
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 1102
    copy_or_move_or_clone  go to state 1103


State 912

  569 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1104
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 913

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  571 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 614
    "as"                   shift, and go to state 615
    "<<"                   shift, and go to state 616
    ">>"                   shift, and go to state 617
    "++"                   shift, and go to state 618
    "--"                   shift, and go to state 619
    "<="                   shift, and go to state 620
    ">="                   shift, and go to state 621
    "=="                   shift, and go to state 622
    "!="                   shift, and go to state 623
    "->"                   shift, and go to state 624
    "??"                   shift, and go to state 625
    "?."                   shift, and go to state 626
    "?["                   shift, and go to state 627
    "<|"                   shift, and go to state 628
    "|>"                   shift, and go to state 629
    "<<<"                  shift, and go to state 630
    ">>>"                  shift, and go to state 631
    "&&"                   shift, and go to state 632
    "||"                   shift, and go to state 633
    "^^"                   shift, and go to state 634
    ".."                   shift, and go to state 635
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 636
    '|'                    shift, and go to state 637
    '^'                    shift, and go to state 638
    '&'                    shift, and go to state 639
    '<'                    shift, and go to state 640
    '>'                    shift, and go to state 641
    '-'                    shift, and go to state 642
    '+'                    shift, and go to state 643
    '*'                    shift, and go to state 644
    '/'                    shift, and go to state 645
    '%'                    shift, and go to state 646
    '.'                    shift, and go to state 647
    '['                    shift, and go to state 648
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1105


State 914

  572 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 572 (global_let_variable_declaration)


State 915

  700 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 916

  723 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 917

  726 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59 .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 918

  687 table_type_pair: type_declaration c_or_s type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 687 (table_type_pair)


State 919

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1106
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 920

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options . '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1107
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 921

  284 new_type_declaration: '<' $@15 type_declaration . '>' $@16
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1108


State 922

  290 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  798 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975

    $default  reduce using rule 798 (use_initializer)

    make_struct_fields  go to state 602
    make_struct_single  go to state 1109


State 923

  288 expr_new: "new" new_type_declaration '(' expr_list . ')'
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1110


State 924

  289 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1111


State 925

  287 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1112


State 926

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 1113
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 1114


State 927

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1115


State 928

  325 expr_type_decl: "type" '<' $@23 type_declaration . '>' $@24
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1116


State 929

  820 make_dim_decl: "array" "struct" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1117
    type_declaration_no_options_no_dim  go to state 275


State 930

  823 make_dim_decl: "array" "tuple" '<' $@102 . tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 662
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 663
    tuple_type_list                     go to state 1118
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 665


State 931

  826 make_dim_decl: "array" "variant" '<' $@104 . variant_type_list '>' $@105 '(' make_variant_dim ')'

    "name"  shift, and go to state 666

    variant_type       go to state 667
    variant_type_list  go to state 1119


State 932

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  830 make_dim_decl: "array" '<' $@106 type_declaration_no_options . '>' $@107 '(' optional_expr_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1120
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 933

  827 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1121


State 934

  840 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1122


State 935

  841 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1123
    type_declaration_no_options_no_dim  go to state 275


State 936

  811 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1124
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 937

  836 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  845 optional_comma: ',' .

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 845 (optional_comma)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 723
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 1125
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 938

  839 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1126


State 939

  456 expr: "deref" '(' expr ')' .

    $default  reduce using rule 456 (expr)


State 940

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options . '>' $@18 expr
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1127
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 941

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options . '>' $@20 expr
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1128
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 942

  457 expr: "addr" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 943

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options . '>' $@22 expr
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1129
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 944

  487 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 487 (expr)


State 945

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options . '>' $@109 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1130
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 946

  831 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1131


State 947

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  810 make_struct_decl: "default" '<' $@96 type_declaration_no_options . '>' $@97 use_initializer

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1132
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 948

  535 tuple_type_list: tuple_type_list . c_or_s tuple_type
  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 1133
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 842


State 949

  813 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1134


State 950

  541 variant_type_list: variant_type_list . c_or_s variant_type
  807 make_struct_decl: "variant" '<' $@94 variant_type_list . '>' $@95 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 1135
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 845


State 951

  488 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  489               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  490               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 774

    $default  reduce using rule 344 (optional_capture_list)

    optional_capture_list  go to state 1136


State 952

  491 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 953

  492 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 954

  493 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 955

  494 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 956

  495 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 957

  497 expr_mtag: "$c" '(' expr ')' . '(' ')'
  498          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1137


State 958

   40 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    ':'    shift, and go to state 1138
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 35 (optional_format_string)

    optional_format_string  go to state 1139


State 959

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1140
    ','   shift, and go to state 861


State 960

  847 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 1141


State 961

  330 expr_list: expr_list ',' expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 330 (expr_list)


State 962

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  784 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  785                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1142


State 963

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  781 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 781 (make_struct_fields)


State 964

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 780 (make_struct_fields)


State 965

  445 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 445 (expr)


State 966

  786 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  787                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1143


State 967

  782 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  783                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 754
    ":="  shift, and go to state 1144
    '='   shift, and go to state 756

    copy_or_move  go to state 1145


State 968

  380 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1146
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 969

  506 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1147
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 970

  384 func_addr_expr: '@' '@' '<' $@25 . type_declaration_no_options '>' $@26 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1148
    type_declaration_no_options_no_dim  go to state 275


State 971

  387 func_addr_expr: '@' '@' '<' $@27 . optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 1149


State 972

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1150
    ','   shift, and go to state 861


State 973

  838 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1151


State 974

  274 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  836 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 937

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 1152


State 975

  780 make_struct_fields: "name" . copy_or_move expr
  781                   | "name" . ":=" expr

    "<-"  shift, and go to state 754
    ":="  shift, and go to state 755
    '='   shift, and go to state 756

    copy_or_move  go to state 757


State 976

  399 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 399 (expr_call)


State 977

  401 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1153


State 978

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 759
    ']'  shift, and go to state 1154


State 979

  330 expr_list: expr_list ',' . expr
  376 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 1155
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 961
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 980

  402 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 402 (expr_call)


State 981

  400 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 400 (expr_call)


State 982

  141 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 141 (optional_annotation_list)


State 983

  345 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1156
    ":="    shift, and go to state 1157
    "name"  shift, and go to state 1158
    '='     shift, and go to state 1159
    '&'     shift, and go to state 1160

    capture_entry  go to state 1161
    capture_list   go to state 1162


State 984

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1163


State 985

  348 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 348 (expr_full_block_assumed_piped)


State 986

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 1164


State 987

  463 expr: expr "is" "type" '<' . $@31 type_declaration_no_options '>' $@32

    $default  reduce using rule 461 ($@31)

    $@31  go to state 1165


State 988

  505 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1166
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 989

  469 expr: expr "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 467 ($@33)

    $@33  go to state 1167


State 990

  503 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1168
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 991

  377 expr_method_call: expr "->" "name" '(' . ')'
  378                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1169
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1170
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 992

  500 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1171
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 993

  449 expr: expr "?[" expr ']' .

    $default  reduce using rule 449 (expr)


State 994

  474 expr: expr '?' "as" "type" . '<' $@35 type_declaration '>' $@36

    '<'  shift, and go to state 1172


State 995

  504 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1173


State 996

  471 expr: expr '?' "as" "name" .

    $default  reduce using rule 471 (expr)


State 997

  475 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 475 (expr)


State 998

  460 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1174
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 999

  502 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1175


State 1000

  452 expr: expr '.' "?." "name" .

    $default  reduce using rule 452 (expr)


State 1001

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  450     | expr '.' "?[" expr . ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ']'    shift, and go to state 1176


State 1002

  499 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1177
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1003

  390 expr_field: expr '.' "name" '(' . ')'
  391           | expr '.' "name" '(' . expr_list ')'
  392           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 1178
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1179
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1180
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1004

  501 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1181


State 1005

  389 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 389 (expr_field)


State 1006

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  448     | expr '.' '[' expr . ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ']'    shift, and go to state 1182


State 1007

  397 expr_field: expr '.' $@29 error . $@30

    $default  reduce using rule 396 ($@30)

    $@30  go to state 1183


State 1008

  393 expr_field: expr '.' basic_type_declaration '(' . ')'
  394           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1184
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1185
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1009

  447 expr: expr '[' expr ']' .

    $default  reduce using rule 447 (expr)


State 1010

  330 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 961
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1011

  404 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 404 (expr_call)


State 1012

  729 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 1013

  719 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 1014

  683 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50 .

    $default  reduce using rule 683 (bitfield_type_declaration)


State 1015

  677 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 677 (bitfield_bits)


State 1016

  733 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 1017

  736 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 735 ($@65)

    $@65  go to state 1186


State 1018

  740 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 1019

  743 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 742 ($@69)

    $@69  go to state 1187


State 1020

  747 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71 .

    $default  reduce using rule 747 (type_declaration_no_options_no_dim)


State 1021

  750 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' . $@73

    $default  reduce using rule 749 ($@73)

    $@73  go to state 1188


State 1022

  533 tuple_type: "name" ':' type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 533 (tuple_type)


State 1023

  753 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75 .

    $default  reduce using rule 753 (type_declaration_no_options_no_dim)


State 1024

  535 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 535 (tuple_type_list)


State 1025

  539 variant_type: "name" ':' type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 539 (variant_type)


State 1026

  756 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77 .

    $default  reduce using rule 756 (type_declaration_no_options_no_dim)


State 1027

  541 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 541 (variant_type_list)


State 1028

  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1189


State 1029

  276 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1190


State 1030

  680 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 680 (bitfield_alias_bits)


State 1031

  588 commas: commas COMMA .

    $default  reduce using rule 588 (commas)


State 1032

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 . '}'

    '}'  shift, and go to state 1191


State 1033

   83 semis: semis SEMICOLON .

    $default  reduce using rule 83 (semis)


State 1034

  538 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 538 (tuple_alias_type_list)


State 1035

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 . '}'

    '}'  shift, and go to state 1192


State 1036

  544 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 544 (variant_alias_type_list)


State 1037

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 . '}'

    '}'  shift, and go to state 1193


State 1038

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  633 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1194


State 1039

  634 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 634 (variable_name_with_pos_list)


State 1040

  635 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  636                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1195

    $default  reduce using rule 635 (variable_name_with_pos_list)


State 1041

  549 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  550                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 754
    '='   shift, and go to state 756
    '|'   shift, and go to state 377

    $default  reduce using rule 549 (variable_declaration)

    copy_or_move  go to state 1196


State 1042

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  551 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 551 (variable_declaration)


State 1043

  296 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1197
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1044

  295 expression_return: "return" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 295 (expression_return)


State 1045

  299 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1198


State 1046

  281 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1199
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1047

  280 expression_delete: "delete" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 280 (expression_delete)


State 1048

  101 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1200


State 1049

  267 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 267 (expression_any)


State 1050

   61 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1201


State 1051

   62 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1202


State 1052

   63 expression_goto: "goto" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 63 (expression_goto)


State 1053

   96 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1203
    $@13              go to state 396


State 1054

  298 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1204
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1055

  297 expression_yield: "yield" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 297 (expression_yield)


State 1056

  265 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 265 (expression_any)


State 1057

  266 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 266 (expression_any)


State 1058

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1205


State 1059

   73 if_or_static_if: "if" .

    $default  reduce using rule 73 (if_or_static_if)


State 1060

   74 if_or_static_if: "static_if" .

    $default  reduce using rule 74 (if_or_static_if)


State 1061

   92 expression_if_then_else: $@6 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1206


State 1062

   95 expression_for_loop: $@7 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1207


State 1063

   98 expression_while_loop: $@8 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1208


State 1064

  100 expression_with: $@9 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1209


State 1065

  256 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 256 (expression_any)


State 1066

  247 expression_block: $@13 '{' expressions $@14 '}' . expression_block_finally

    "finally"  shift, and go to state 1210

    $default  reduce using rule 241 (expression_block_finally)

    expression_block_finally  go to state 1211


State 1067

  251 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 251 (expression_any)


State 1068

  258 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 258 (expression_any)


State 1069

  259 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 259 (expression_any)


State 1070

  260 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 260 (expression_any)


State 1071

  261 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 1072

  305 optional_in_scope: "inscope" .

    $default  reduce using rule 305 (optional_in_scope)


State 1073

  311 expression_let: kwd_let optional_in_scope . let_variable_declaration
  312               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  313               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 537
    "name"  shift, and go to state 538
    '('     shift, and go to state 1212
    '{'     shift, and go to state 1213

    tuple_expansion_variable_declaration  go to state 1214
    let_variable_name_with_pos_list       go to state 539
    let_variable_declaration              go to state 1215


State 1074

  250 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 250 (expression_any)


State 1075

  366 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1216
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1076

  367 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1217
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1077

  369 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1218
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1078

  368 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1219
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1079

  370 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1220
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1080

  360 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1221
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1081

  361 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1222
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1082

  362 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1223
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1083

  371 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1224
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1084

  372 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1225
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1085

  358 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1226
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1086

  359 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1227
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1087

  373 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1228
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1088

  374 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1229
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1089

  363 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1230
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1090

  364 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1231
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1091

  365 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1232
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1092

  357 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1233
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1093

  586 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1234
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1094

  588 commas: commas . COMMA
  591 enum_list: enum_list commas . enum_expression
  605 optional_commas: commas .

    "name"             shift, and go to state 904
    "new line, comma"  shift, and go to state 705
    ','                shift, and go to state 706

    $default  reduce using rule 605 (optional_commas)

    COMMA            go to state 1031
    enum_expression  go to state 1235


State 1095

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas . $@45 '}'

    $default  reduce using rule 612 ($@45)

    $@45  go to state 1236


State 1096

  521 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 521 (struct_variable_declaration_list)


State 1097

  627 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 627 (optional_struct_variable_declaration_list)


State 1098

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1237


State 1099

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 507 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1238
    structure_variable_declaration  go to state 1239


State 1100

  558 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 558 (let_variable_name_with_pos_list)


State 1101

  561 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1240


State 1102

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 567 (let_variable_declaration)


State 1103

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1241
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1104

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  569 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 614
    "as"                   shift, and go to state 615
    "<<"                   shift, and go to state 616
    ">>"                   shift, and go to state 617
    "++"                   shift, and go to state 618
    "--"                   shift, and go to state 619
    "<="                   shift, and go to state 620
    ">="                   shift, and go to state 621
    "=="                   shift, and go to state 622
    "!="                   shift, and go to state 623
    "->"                   shift, and go to state 624
    "??"                   shift, and go to state 625
    "?."                   shift, and go to state 626
    "?["                   shift, and go to state 627
    "<|"                   shift, and go to state 628
    "|>"                   shift, and go to state 629
    "<<<"                  shift, and go to state 630
    ">>>"                  shift, and go to state 631
    "&&"                   shift, and go to state 632
    "||"                   shift, and go to state 633
    "^^"                   shift, and go to state 634
    ".."                   shift, and go to state 635
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 636
    '|'                    shift, and go to state 637
    '^'                    shift, and go to state 638
    '&'                    shift, and go to state 639
    '<'                    shift, and go to state 640
    '>'                    shift, and go to state 641
    '-'                    shift, and go to state 642
    '+'                    shift, and go to state 643
    '*'                    shift, and go to state 644
    '/'                    shift, and go to state 645
    '%'                    shift, and go to state 646
    '.'                    shift, and go to state 647
    '['                    shift, and go to state 648
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1242


State 1105

  571 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 571 (global_let_variable_declaration)


State 1106

  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 800 ($@91)

    $@91  go to state 1243


State 1107

  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' . $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 803 ($@93)

    $@93  go to state 1244


State 1108

  284 new_type_declaration: '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 283 ($@16)

    $@16  go to state 1245


State 1109

  290 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1246


State 1110

  288 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 288 (expr_new)


State 1111

  289 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 289 (expr_new)


State 1112

  287 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 287 (expr_new)


State 1113

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1247


State 1114

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1248


State 1115

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 326 (expr_type_info)


State 1116

  325 expr_type_decl: "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 324 ($@24)

    $@24  go to state 1249


State 1117

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1250
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1118

  535 tuple_type_list: tuple_type_list . c_or_s tuple_type
  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list . '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 1251
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 842


State 1119

  541 variant_type_list: variant_type_list . c_or_s variant_type
  826 make_dim_decl: "array" "variant" '<' $@104 variant_type_list . '>' $@105 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 705
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 706
    '>'                    shift, and go to state 1252
    ';'                    shift, and go to state 16

    COMMA      go to state 707
    SEMICOLON  go to state 708
    c_or_s     go to state 845


State 1120

  830 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' . $@107 '(' optional_expr_list ')'

    $default  reduce using rule 829 ($@107)

    $@107  go to state 1253


State 1121

  827 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 827 (make_dim_decl)


State 1122

  840 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 273 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 1254
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 723
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 724
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 974
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 1123

  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"
  841 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1255
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1124

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  811 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 811 (make_map_tuple)


State 1125

  836 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 836 (expr_map_tuple_list)


State 1126

  839 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 839 (make_table_decl)


State 1127

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 315 ($@18)

    $@18  go to state 1256


State 1128

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' . $@20 expr

    $default  reduce using rule 318 ($@20)

    $@20  go to state 1257


State 1129

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' . $@22 expr

    $default  reduce using rule 321 ($@22)

    $@22  go to state 1258


State 1130

  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' . $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 833 ($@109)

    $@109  go to state 1259


State 1131

  831 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 831 (make_dim_decl)


State 1132

  810 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' . $@97 use_initializer

    $default  reduce using rule 809 ($@97)

    $@97  go to state 1260


State 1133

  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 815 ($@99)

    $@99  go to state 1261


State 1134

  813 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 813 (make_tuple_call)


State 1135

  807 make_struct_decl: "variant" '<' $@94 variant_type_list '>' . $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 806 ($@95)

    $@95  go to state 1262


State 1136

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  489               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  490               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1263

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1264


State 1137

  497 expr_mtag: "$c" '(' expr ')' '(' . ')'
  498          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1265
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1266
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1138

   37 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 36 ($@1)

    $@1  go to state 1267


State 1139

   40 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1268


State 1140

  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1269
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1141

  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1270
    ','   shift, and go to state 861


State 1142

  784 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  785                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 754
    ":="  shift, and go to state 1271
    '='   shift, and go to state 756

    copy_or_move  go to state 1272


State 1143

  786 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  787                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1273
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1144

  783 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1274
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1145

  782 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1275
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1146

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  380 func_addr_name: "$i" '(' expr . ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1276


State 1147

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  506          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1277


State 1148

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options . '>' $@26 func_addr_name
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1278
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1149

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list . optional_function_type '>' $@28 func_addr_name

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1279


State 1150

  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1280
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1151

  838 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 838 (make_table_decl)


State 1152

  274 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 274 (optional_expr_map_tuple_list)


State 1153

  401 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 401 (expr_call)


State 1154

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1281


State 1155

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  817 make_dim_decl: '[' . optional_expr_list ']'
  846 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  847                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 599
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 600
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 596
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 597
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 1282
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1156

  339 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1283


State 1157

  340 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1284


State 1158

  341 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1285


State 1159

  338 capture_entry: '=' . "name"

    "name"  shift, and go to state 1286


State 1160

  337 capture_entry: '&' . "name"

    "name"  shift, and go to state 1287


State 1161

  342 capture_list: capture_entry .

    $default  reduce using rule 342 (capture_list)


State 1162

  343 capture_list: capture_list . ',' capture_entry
  345 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1288
    ')'  shift, and go to state 1289


State 1163

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1290


State 1164

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1291


State 1165

  463 expr: expr "is" "type" '<' $@31 . type_declaration_no_options '>' $@32

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1292
    type_declaration_no_options_no_dim  go to state 275


State 1166

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  505          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1293


State 1167

  469 expr: expr "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1294


State 1168

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  503          | expr "as" "$f" '(' expr . ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1295


State 1169

  377 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 377 (expr_method_call)


State 1170

  330 expr_list: expr_list . ',' expr
  378 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1296


State 1171

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  500          | expr "?." "$f" '(' expr . ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1297


State 1172

  474 expr: expr '?' "as" "type" '<' . $@35 type_declaration '>' $@36

    $default  reduce using rule 472 ($@35)

    $@35  go to state 1298


State 1173

  504 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1299
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1174

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  460     | expr '?' expr ':' expr .
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 460 (expr)


State 1175

  502 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1300
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1176

  450 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 450 (expr)


State 1177

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr '.' "$f" '(' expr . ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1301


State 1178

  392 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  817 make_dim_decl: '[' . optional_expr_list ']'
  846 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  847                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 594
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 595
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 599
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 600
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 596
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 597
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 1302
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1179

  390 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 390 (expr_field)


State 1180

  330 expr_list: expr_list . ',' expr
  391 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1303


State 1181

  501 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1304
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1182

  448 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 448 (expr)


State 1183

  397 expr_field: expr '.' $@29 error $@30 .

    $default  reduce using rule 397 (expr_field)


State 1184

  393 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 393 (expr_field)


State 1185

  330 expr_list: expr_list . ',' expr
  394 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1305


State 1186

  736 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 736 (type_declaration_no_options_no_dim)


State 1187

  743 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 1188

  750 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73 .

    $default  reduce using rule 750 (type_declaration_no_options_no_dim)


State 1189

  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 1306
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 597
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1190

  276 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 276 (type_declaration_no_options_list)


State 1191

  774 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}' .

    $default  reduce using rule 774 (bitfield_alias_declaration)


State 1192

  764 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}' .

    $default  reduce using rule 764 (tuple_alias_declaration)


State 1193

  769 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}' .

    $default  reduce using rule 769 (variant_alias_declaration)


State 1194

  633 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 633 (variable_name_with_pos_list)


State 1195

  636 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1307


State 1196

  550 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1308
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1197

  296 expression_return: "return" "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 296 (expression_return)


State 1198

  299 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1309
    $@13              go to state 396


State 1199

  281 expression_delete: "delete" "explicit" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 281 (expression_delete)


State 1200

  101 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1310
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1201

   61 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 61 (expression_label)


State 1202

   62 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 62 (expression_goto)


State 1203

   96 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 96 (expression_unsafe)


State 1204

  298 expression_yield: "yield" "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 298 (expression_yield)


State 1205

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1311
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1206

   92 expression_if_then_else: $@6 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1312
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1207

   95 expression_for_loop: $@7 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 1313


State 1208

   98 expression_while_loop: $@8 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1314
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1209

  100 expression_with: $@9 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1315
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1210

  244 expression_block_finally: "finally" . $@11 '{' expressions $@12 '}'

    $default  reduce using rule 242 ($@11)

    $@11  go to state 1316


State 1211

  247 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally .

    $default  reduce using rule 247 (expression_block)


State 1212

  309 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1317

    tuple_expansion  go to state 1318


State 1213

  313 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 564 (variable_declaration_list)

    variable_declaration_list  go to state 1319


State 1214

  312 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 312 (expression_let)


State 1215

  311 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 311 (expression_let)


State 1216

  366 expr_assign: expr "+=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 366 (expr_assign)


State 1217

  367 expr_assign: expr "-=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 367 (expr_assign)


State 1218

  369 expr_assign: expr "/=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 369 (expr_assign)


State 1219

  368 expr_assign: expr "*=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 368 (expr_assign)


State 1220

  370 expr_assign: expr "%=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 370 (expr_assign)


State 1221

  360 expr_assign: expr "&=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 360 (expr_assign)


State 1222

  361 expr_assign: expr "|=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 361 (expr_assign)


State 1223

  362 expr_assign: expr "^=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 362 (expr_assign)


State 1224

  371 expr_assign: expr "<<=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 371 (expr_assign)


State 1225

  372 expr_assign: expr ">>=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 372 (expr_assign)


State 1226

  358 expr_assign: expr "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 358 (expr_assign)


State 1227

  359 expr_assign: expr ":=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 359 (expr_assign)


State 1228

  373 expr_assign: expr "<<<=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 373 (expr_assign)


State 1229

  374 expr_assign: expr ">>>=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 374 (expr_assign)


State 1230

  363 expr_assign: expr "&&=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 363 (expr_assign)


State 1231

  364 expr_assign: expr "||=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 364 (expr_assign)


State 1232

  365 expr_assign: expr "^^=" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 365 (expr_assign)


State 1233

  357 expr_assign: expr '=' expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 357 (expr_assign)


State 1234

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  586 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 586 (enum_expression)


State 1235

  591 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 591 (enum_list)


State 1236

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 . '}'

    '}'  shift, and go to state 1320


State 1237

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1321
    "private"  shift, and go to state 1322

    $default  reduce using rule 514 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1323


State 1238

  519 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1324

    $default  reduce using rule 517 (optional_static_member_variable)

    optional_static_member_variable  go to state 1325


State 1239

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1326


State 1240

  561 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 561 (let_variable_name_with_pos_list)


State 1241

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 614
    "as"                   shift, and go to state 615
    "<<"                   shift, and go to state 616
    ">>"                   shift, and go to state 617
    "++"                   shift, and go to state 618
    "--"                   shift, and go to state 619
    "<="                   shift, and go to state 620
    ">="                   shift, and go to state 621
    "=="                   shift, and go to state 622
    "!="                   shift, and go to state 623
    "->"                   shift, and go to state 624
    "??"                   shift, and go to state 625
    "?."                   shift, and go to state 626
    "?["                   shift, and go to state 627
    "<|"                   shift, and go to state 628
    "|>"                   shift, and go to state 629
    "<<<"                  shift, and go to state 630
    ">>>"                  shift, and go to state 631
    "&&"                   shift, and go to state 632
    "||"                   shift, and go to state 633
    "^^"                   shift, and go to state 634
    ".."                   shift, and go to state 635
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 636
    '|'                    shift, and go to state 637
    '^'                    shift, and go to state 638
    '&'                    shift, and go to state 639
    '<'                    shift, and go to state 640
    '>'                    shift, and go to state 641
    '-'                    shift, and go to state 642
    '+'                    shift, and go to state 643
    '*'                    shift, and go to state 644
    '/'                    shift, and go to state 645
    '%'                    shift, and go to state 646
    '.'                    shift, and go to state 647
    '['                    shift, and go to state 648
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1327


State 1242

  569 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 569 (let_variable_declaration)


State 1243

  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1328


State 1244

  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1329


State 1245

  284 new_type_declaration: '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 284 (new_type_declaration)


State 1246

  290 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 290 (expr_new)


State 1247

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1330
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1248

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1331


State 1249

  325 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 325 (expr_type_decl)


State 1250

  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 819 ($@101)

    $@101  go to state 1332


State 1251

  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' . $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 822 ($@103)

    $@103  go to state 1333


State 1252

  826 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' . $@105 '(' make_variant_dim ')'

    $default  reduce using rule 825 ($@105)

    $@105  go to state 1334


State 1253

  830 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 . '(' optional_expr_list ')'

    '('  shift, and go to state 1335


State 1254

  840 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1336


State 1255

  841 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1337


State 1256

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1338
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1257

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1339
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1258

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1340
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1259

  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1341


State 1260

  810 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 . use_initializer

    "uninitialized"  shift, and go to state 1342

    $default  reduce using rule 797 (use_initializer)

    use_initializer  go to state 1343


State 1261

  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1344


State 1262

  807 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1345


State 1263

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  489               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1346
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1347
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1264

  490 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1348
    $@13              go to state 396


State 1265

  497 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1266

  330 expr_list: expr_list . ',' expr
  498 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1349


State 1267

   37 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 33 (format_string)

    format_string  go to state 1350


State 1268

   40 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 40 (string_builder_body)


State 1269

  330 expr_list: expr_list . ',' expr
  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1351


State 1270

  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1352
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1271

  785 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1353
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1272

  784 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1354
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1273

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  786 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  787                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1355


State 1274

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  783 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 783 (make_struct_fields)


State 1275

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  782 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 782 (make_struct_fields)


State 1276

  380 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 380 (func_addr_name)


State 1277

  506 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1278

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' . $@26 func_addr_name

    $default  reduce using rule 383 ($@26)

    $@26  go to state 1356


State 1279

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type . '>' $@28 func_addr_name

    '>'  shift, and go to state 1357


State 1280

  330 expr_list: expr_list . ',' expr
  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1358


State 1281

  375 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 375 (expr_named_call)


State 1282

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 759
    ']'  shift, and go to state 1359


State 1283

  339 capture_entry: "<-" "name" .

    $default  reduce using rule 339 (capture_entry)


State 1284

  340 capture_entry: ":=" "name" .

    $default  reduce using rule 340 (capture_entry)


State 1285

  341 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1360


State 1286

  338 capture_entry: '=' "name" .

    $default  reduce using rule 338 (capture_entry)


State 1287

  337 capture_entry: '&' "name" .

    $default  reduce using rule 337 (capture_entry)


State 1288

  343 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1156
    ":="    shift, and go to state 1157
    "name"  shift, and go to state 1158
    '='     shift, and go to state 1159
    '&'     shift, and go to state 1160

    capture_entry  go to state 1361


State 1289

  345 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 345 (optional_capture_list)


State 1290

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1362

    $default  reduce using rule 245 ($@13)

    expression_block       go to state 1363
    $@13                   go to state 396
    block_or_simple_block  go to state 1364


State 1291

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1365


State 1292

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options . '>' $@32
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1366
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1293

  505 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1294

  469 expr: expr "as" "type" '<' $@33 type_declaration . '>' $@34
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1367


State 1295

  503 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1296

  378 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 378 (expr_method_call)


State 1297

  500 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1298

  474 expr: expr '?' "as" "type" '<' $@35 . type_declaration '>' $@36

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1368


State 1299

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr '?' "as" "$f" '(' expr . ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1369


State 1300

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr '.' "?." "$f" '(' expr . ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1370


State 1301

  499 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1302

  392 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 759
    ']'  shift, and go to state 1371


State 1303

  391 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 391 (expr_field)


State 1304

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr '.' '.' "$f" '(' expr . ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1372


State 1305

  394 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 394 (expr_field)


State 1306

  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1373


State 1307

  636 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 636 (variable_name_with_pos_list)


State 1308

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  550 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 550 (variable_declaration)


State 1309

  299 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 299 (expression_try_catch)


State 1310

  101 expression_with_alias: "assume" "name" '=' expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 101 (expression_with_alias)


State 1311

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1374


State 1312

   92 expression_if_then_else: $@6 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1375


State 1313

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  635 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  636                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1376
    ','   shift, and go to state 861


State 1314

   98 expression_while_loop: $@8 "while" '(' expr . ')' optional_emit_semis expression_block
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1377


State 1315

  100 expression_with: $@9 "with" '(' expr . ')' optional_emit_semis expression_block
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1378


State 1316

  244 expression_block_finally: "finally" $@11 . '{' expressions $@12 '}'

    '{'  shift, and go to state 1379


State 1317

  307 tuple_expansion: "name" .

    $default  reduce using rule 307 (tuple_expansion)


State 1318

  308 tuple_expansion: tuple_expansion . ',' "name"
  309 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1380
    ')'  shift, and go to state 1381


State 1319

  313 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  565 variable_declaration_list: variable_declaration_list . SEMICOLON
  566                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 537
    "name"                 shift, and go to state 538
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1382

    SEMICOLON                        go to state 1383
    let_variable_name_with_pos_list  go to state 539
    let_variable_declaration         go to state 1384


State 1320

  613 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}' .

    $default  reduce using rule 613 (enum_declaration)


State 1321

  515 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 515 (optional_public_or_private_member_variable)


State 1322

  516 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 516 (optional_public_or_private_member_variable)


State 1323

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  527                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1385
    "static"    shift, and go to state 1324

    $default  reduce using rule 517 (optional_static_member_variable)

    optional_static_member_variable  go to state 1386


State 1324

  518 optional_static_member_variable: "static" .

    $default  reduce using rule 518 (optional_static_member_variable)


State 1325

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1387
    "sealed"    shift, and go to state 1388

    $default  reduce using rule 509 (optional_override)

    optional_override  go to state 1389


State 1326

  523 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 523 (struct_variable_declaration_list)


State 1327

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 568 (let_variable_declaration)


State 1328

  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1342

    $default  reduce using rule 797 (use_initializer)

    use_initializer  go to state 1390


State 1329

  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1342

    $default  reduce using rule 797 (use_initializer)

    use_initializer  go to state 1391


State 1330

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1392


State 1331

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1393


State 1332

  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1394


State 1333

  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1395


State 1334

  826 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 . '(' make_variant_dim ')'

    '('  shift, and go to state 1396


State 1335

  830 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 271 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 1397
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 597
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1336

  840 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 840 (make_table_decl)


State 1337

  841 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 273 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 1398
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 723
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 724
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 974
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 1338

  316 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 316 (expr_cast)


State 1339

  319 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 319 (expr_cast)


State 1340

  322 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 322 (expr_cast)


State 1341

  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1399
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1342

  798 use_initializer: "uninitialized" .

    $default  reduce using rule 798 (use_initializer)


State 1343

  810 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer .

    $default  reduce using rule 810 (make_struct_decl)


State 1344

  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1342

    $default  reduce using rule 797 (use_initializer)

    use_initializer  go to state 1400


State 1345

  807 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1342

    $default  reduce using rule 797 (use_initializer)

    use_initializer  go to state 1401


State 1346

  488 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 488 (expr_generator)


State 1347

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1402


State 1348

  490 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 490 (expr_generator)


State 1349

  498 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1350

   34 format_string: format_string . STRING_CHARACTER
   37 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1403

    $default  reduce using rule 37 (optional_format_string)


State 1351

  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1404


State 1352

  330 expr_list: expr_list . ',' expr
  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1405


State 1353

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  785 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 785 (make_struct_fields)


State 1354

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  784 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 784 (make_struct_fields)


State 1355

  786 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  787                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 754
    ":="  shift, and go to state 1406
    '='   shift, and go to state 756

    copy_or_move  go to state 1407


State 1356

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 761
    "name"  shift, and go to state 58

    name_in_namespace  go to state 764
    func_addr_name     go to state 1408


State 1357

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' . $@28 func_addr_name

    $default  reduce using rule 386 ($@28)

    $@28  go to state 1409


State 1358

  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1410


State 1359

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1411


State 1360

  341 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1412


State 1361

  343 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 343 (capture_list)


State 1362

  332 block_or_simple_block: "=>" . expr
  333                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1413
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1414
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1363

  331 block_or_simple_block: expression_block .

    $default  reduce using rule 331 (block_or_simple_block)


State 1364

  346 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 346 (expr_full_block)


State 1365

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1415
    $@13              go to state 396


State 1366

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' . $@32

    $default  reduce using rule 462 ($@32)

    $@32  go to state 1416


State 1367

  469 expr: expr "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 468 ($@34)

    $@34  go to state 1417


State 1368

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration . '>' $@36
  758 type_declaration: type_declaration . '|' type_declaration_no_options
  759                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1418


State 1369

  504 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1370

  502 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1371

  392 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1419


State 1372

  501 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1373

  704 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 1374

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1420

    $default  reduce using rule 75 (expression_else_one_liner)

    expression_else_one_liner  go to state 1421


State 1375

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1422


State 1376

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1423
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 598
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1377

   98 expression_while_loop: $@8 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1424


State 1378

  100 expression_with: $@9 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1425


State 1379

  244 expression_block_finally: "finally" $@11 '{' . expressions $@12 '}'

    $default  reduce using rule 268 (expressions)

    expressions  go to state 1426


State 1380

  308 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1427


State 1381

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  310                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1428
    '&'  shift, and go to state 414

    $default  reduce using rule 555 (optional_ref)

    optional_ref  go to state 1429


State 1382

  313 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 313 (expression_let)


State 1383

  565 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 565 (variable_declaration_list)


State 1384

  566 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 566 (variable_declaration_list)


State 1385

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@38 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1430

    $default  reduce using rule 512 (optional_constant)

    optional_constant  go to state 1431


State 1386

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1387
    "sealed"    shift, and go to state 1388

    $default  reduce using rule 509 (optional_override)

    optional_override  go to state 1432


State 1387

  510 optional_override: "override" .

    $default  reduce using rule 510 (optional_override)


State 1388

  511 optional_override: "sealed" .

    $default  reduce using rule 511 (optional_override)


State 1389

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1321
    "private"  shift, and go to state 1322

    $default  reduce using rule 514 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1433


State 1390

  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975
    '('     shift, and go to state 1434

    $default  reduce using rule 796 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1435
    make_struct_dim_list           go to state 1436
    make_struct_dim_decl           go to state 1437
    optional_make_struct_dim_decl  go to state 1438


State 1391

  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975
    '('     shift, and go to state 1434

    $default  reduce using rule 796 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1435
    make_struct_dim_list           go to state 1436
    make_struct_dim_decl           go to state 1437
    optional_make_struct_dim_decl  go to state 1439


State 1392

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 327 (expr_type_info)


State 1393

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1440
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1394

  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1342

    $default  reduce using rule 797 (use_initializer)

    use_initializer  go to state 1441


State 1395

  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1342

    $default  reduce using rule 797 (use_initializer)

    use_initializer  go to state 1442


State 1396

  826 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975

    $default  reduce using rule 788 (make_variant_dim)

    make_struct_fields  go to state 1443
    make_variant_dim    go to state 1444


State 1397

  830 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1445


State 1398

  841 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1446


State 1399

  330 expr_list: expr_list . ',' expr
  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 751

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 1447


State 1400

  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975
    '('     shift, and go to state 1434

    $default  reduce using rule 796 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1435
    make_struct_dim_list           go to state 1436
    make_struct_dim_decl           go to state 1437
    optional_make_struct_dim_decl  go to state 1448


State 1401

  807 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975

    $default  reduce using rule 788 (make_variant_dim)

    make_struct_fields  go to state 1443
    make_variant_dim    go to state 1449


State 1402

  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 489 (expr_generator)


State 1403

   34 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 34 (format_string)


State 1404

  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1450
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1405

  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1451


State 1406

  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1452
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1407

  786 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1453
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1408

  384 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name .

    $default  reduce using rule 384 (func_addr_expr)


State 1409

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 761
    "name"  shift, and go to state 58

    name_in_namespace  go to state 764
    func_addr_name     go to state 1454


State 1410

  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 723
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 1455
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1411

  376 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 376 (expr_named_call)


State 1412

  341 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 341 (capture_entry)


State 1413

  333 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1456
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1414

  332 block_or_simple_block: "=>" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    ".."  error (nonassociative)

    $default  reduce using rule 332 (block_or_simple_block)


State 1415

  347 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 347 (expr_full_block_assumed_piped)


State 1416

  463 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32 .

    $default  reduce using rule 463 (expr)


State 1417

  469 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 469 (expr)


State 1418

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' . $@36

    $default  reduce using rule 473 ($@36)

    $@36  go to state 1457


State 1419

  392 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 392 (expr_field)


State 1420

   76 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 867
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 871
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder           go to state 468
    expr_reader              go to state 469
    expression_if_one_liner  go to state 1458
    expr_call_pipe           go to state 470
    name_in_namespace        go to state 471
    expr_new                 go to state 472
    expression_break         go to state 1459
    expression_continue      go to state 1460
    expression_return        go to state 1461
    expression_yield         go to state 1462
    expr_cast                go to state 473
    expr_type_decl           go to state 474
    expr_type_info           go to state 475
    block_or_lambda          go to state 476
    expr_full_block          go to state 477
    expr_numeric_const       go to state 478
    expr_named_call          go to state 479
    expr_method_call         go to state 480
    func_addr_expr           go to state 481
    expr_field               go to state 482
    expr_call                go to state 483
    expr                     go to state 1463
    expr_generator           go to state 485
    expr_mtag                go to state 486
    basic_type_declaration   go to state 487
    make_decl                go to state 488
    make_struct_decl         go to state 489
    make_tuple_call          go to state 490
    make_dim_decl            go to state 491
    make_table_decl          go to state 492
    array_comprehension      go to state 493


State 1421

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1464


State 1422

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 86 ($@3)
    '{'       [reduce using rule 89 ($@5)]
    $default  reduce using rule 89 ($@5)

    expression_if_block  go to state 1465
    $@3                  go to state 1466
    $@5                  go to state 1467


State 1423

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1468


State 1424

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1469
    $@13              go to state 396


State 1425

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1470
    $@13              go to state 396


State 1426

  244 expression_block_finally: "finally" $@11 '{' expressions . $@12 '}'
  269 expressions: expressions . expression_any
  270            | expressions . error

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 243 ($@12)

    SEMICOLON                         go to state 877
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    expression_if_then_else           go to state 881
    $@6                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@7                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@8                               go to state 888
    expression_with                   go to state 889
    $@9                               go to state 890
    expression_with_alias             go to state 891
    $@12                              go to state 1471
    expr_call_pipe                    go to state 470
    expression_any                    go to state 893
    name_in_namespace                 go to state 471
    expression_delete                 go to state 894
    expr_new                          go to state 472
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 902
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 903
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 1427

  308 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 308 (tuple_expansion)


State 1428

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1472
    type_declaration_no_options_no_dim  go to state 275


State 1429

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 1473


State 1430

  513 optional_constant: "const" .

    $default  reduce using rule 513 (optional_constant)


State 1431

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@38 function_declaration_header SEMICOLON

    $default  reduce using rule 524 ($@38)

    $@38  go to state 1474


State 1432

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1430

    $default  reduce using rule 512 (optional_constant)

    optional_constant  go to state 1475


State 1433

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_declaration         go to state 1476
    variable_name_with_pos_list  go to state 686


State 1434

  791 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975

    make_struct_fields  go to state 1477


State 1435

  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  793 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 759

    $default  reduce using rule 793 (make_struct_dim_decl)


State 1436

  792 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  794 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1478

    $default  reduce using rule 844 (optional_comma)

    optional_comma  go to state 1479


State 1437

  795 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 795 (optional_make_struct_dim_decl)


State 1438

  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1480


State 1439

  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1481


State 1440

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1482


State 1441

  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975
    '('     shift, and go to state 1434

    $default  reduce using rule 796 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1435
    make_struct_dim_list           go to state 1436
    make_struct_dim_decl           go to state 1437
    optional_make_struct_dim_decl  go to state 1483


State 1442

  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975
    '('     shift, and go to state 1434

    $default  reduce using rule 796 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1435
    make_struct_dim_list           go to state 1436
    make_struct_dim_decl           go to state 1437
    optional_make_struct_dim_decl  go to state 1484


State 1443

  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  789 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 759

    $default  reduce using rule 789 (make_variant_dim)


State 1444

  826 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1485


State 1445

  830 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')' .

    $default  reduce using rule 830 (make_dim_decl)


State 1446

  841 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 841 (make_table_decl)


State 1447

  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1486


State 1448

  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1487


State 1449

  807 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1488


State 1450

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ';'    shift, and go to state 1489

    $default  reduce using rule 842 (array_comprehension_where)

    array_comprehension_where  go to state 1490


State 1451

  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1491
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1452

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 787 (make_struct_fields)


State 1453

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  786 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 786 (make_struct_fields)


State 1454

  387 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name .

    $default  reduce using rule 387 (func_addr_expr)


State 1455

  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1489

    $default  reduce using rule 842 (array_comprehension_where)

    array_comprehension_where  go to state 1492


State 1456

  333 block_or_simple_block: "=>" "<-" expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 333 (block_or_simple_block)


State 1457

  474 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36 .

    $default  reduce using rule 474 (expr)


State 1458

   76 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1459

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1460

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1461

   78 expression_if_one_liner: expression_return .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1462

   79 expression_if_one_liner: expression_yield .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1463

   77 expression_if_one_liner: expr .
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 77 (expression_if_one_liner)


State 1464

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 93 (expression_if_then_else_oneliner)


State 1465

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1493
    "elif"         shift, and go to state 1494
    "static_elif"  shift, and go to state 1495

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1496
    expression_else      go to state 1497


State 1466

   88 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1498


State 1467

   90 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 867
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 871
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder           go to state 468
    expr_reader              go to state 469
    expression_if_one_liner  go to state 1499
    expr_call_pipe           go to state 470
    name_in_namespace        go to state 471
    expr_new                 go to state 472
    expression_break         go to state 1459
    expression_continue      go to state 1460
    expression_return        go to state 1461
    expression_yield         go to state 1462
    expr_cast                go to state 473
    expr_type_decl           go to state 474
    expr_type_info           go to state 475
    block_or_lambda          go to state 476
    expr_full_block          go to state 477
    expr_numeric_const       go to state 478
    expr_named_call          go to state 479
    expr_method_call         go to state 480
    func_addr_expr           go to state 481
    expr_field               go to state 482
    expr_call                go to state 483
    expr                     go to state 1463
    expr_generator           go to state 485
    expr_mtag                go to state 486
    basic_type_declaration   go to state 487
    make_decl                go to state 488
    make_struct_decl         go to state 489
    make_tuple_call          go to state 490
    make_dim_decl            go to state 491
    make_table_decl          go to state 492
    array_comprehension      go to state 493


State 1468

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1500


State 1469

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 98 (expression_while_loop)


State 1470

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 100 (expression_with)


State 1471

  244 expression_block_finally: "finally" $@11 '{' expressions $@12 . '}'

    '}'  shift, and go to state 1501


State 1472

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  705 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  706                                   | type_declaration_no_options . "explicit"
  707                                   | type_declaration_no_options . "const"
  708                                   | type_declaration_no_options . '-' "const"
  709                                   | type_declaration_no_options . '&'
  710                                   | type_declaration_no_options . '-' '&'
  711                                   | type_declaration_no_options . '#'
  712                                   | type_declaration_no_options . "implicit"
  713                                   | type_declaration_no_options . '-' '#'
  714                                   | type_declaration_no_options . "==" "const"
  715                                   | type_declaration_no_options . "==" '&'
  716                                   | type_declaration_no_options . '?'
  720                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 544
    "??"        shift, and go to state 370
    ":="        shift, and go to state 545
    '='         shift, and go to state 546
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    copy_or_move_or_clone  go to state 1502


State 1473

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1503
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1474

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1504


State 1475

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@39 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 526 ($@39)

    $@39  go to state 1505


State 1476

  519 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 519 (structure_variable_declaration)


State 1477

  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  791 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 759
    ')'  shift, and go to state 1506


State 1478

  792 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  845 optional_comma: ',' .

    '('  shift, and go to state 1507

    $default  reduce using rule 845 (optional_comma)


State 1479

  794 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 794 (make_struct_dim_decl)


State 1480

  801 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 801 (make_struct_decl)


State 1481

  804 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 804 (make_struct_decl)


State 1482

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 328 (expr_type_info)


State 1483

  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1508


State 1484

  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1509


State 1485

  826 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')' .

    $default  reduce using rule 826 (make_dim_decl)


State 1486

  834 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')' .

    $default  reduce using rule 834 (make_dim_decl)


State 1487

  816 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 816 (make_tuple_call)


State 1488

  807 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 807 (make_struct_decl)


State 1489

  843 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1510


State 1490

  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1511


State 1491

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ';'    shift, and go to state 1489

    $default  reduce using rule 842 (array_comprehension_where)

    array_comprehension_where  go to state 1512


State 1492

  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1513


State 1493

   71 expression_else: "else" . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1514


State 1494

   64 elif_or_static_elif: "elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1495

   65 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1496

   72 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1515


State 1497

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 92 (expression_if_then_else)


State 1498

   88 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 268 (expressions)

    expressions  go to state 1516


State 1499

   90 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1517


State 1500

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1518
    $@13              go to state 396


State 1501

  244 expression_block_finally: "finally" $@11 '{' expressions $@12 '}' .

    $default  reduce using rule 244 (expression_block_finally)


State 1502

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1519
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1503

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 614
    "as"                   shift, and go to state 615
    "<<"                   shift, and go to state 616
    ">>"                   shift, and go to state 617
    "++"                   shift, and go to state 618
    "--"                   shift, and go to state 619
    "<="                   shift, and go to state 620
    ">="                   shift, and go to state 621
    "=="                   shift, and go to state 622
    "!="                   shift, and go to state 623
    "->"                   shift, and go to state 624
    "??"                   shift, and go to state 625
    "?."                   shift, and go to state 626
    "?["                   shift, and go to state 627
    "<|"                   shift, and go to state 628
    "|>"                   shift, and go to state 629
    "<<<"                  shift, and go to state 630
    ">>>"                  shift, and go to state 631
    "&&"                   shift, and go to state 632
    "||"                   shift, and go to state 633
    "^^"                   shift, and go to state 634
    ".."                   shift, and go to state 635
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 636
    '|'                    shift, and go to state 637
    '^'                    shift, and go to state 638
    '&'                    shift, and go to state 639
    '<'                    shift, and go to state 640
    '>'                    shift, and go to state 641
    '-'                    shift, and go to state 642
    '+'                    shift, and go to state 643
    '*'                    shift, and go to state 644
    '/'                    shift, and go to state 645
    '%'                    shift, and go to state 646
    '.'                    shift, and go to state 647
    '['                    shift, and go to state 648
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1520


State 1504

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1521


State 1505

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1522


State 1506

  791 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 791 (make_struct_dim_list)


State 1507

  792 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 599
    "name"  shift, and go to state 975

    make_struct_fields  go to state 1523


State 1508

  820 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 820 (make_dim_decl)


State 1509

  823 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 823 (make_dim_decl)


State 1510

  843 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1524
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1511

  846 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 846 (array_comprehension)


State 1512

  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1525


State 1513

  848 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 848 (array_comprehension)


State 1514

   71 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1526
    $@13              go to state 396


State 1515

   72 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1527
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1516

   88 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  269 expressions: expressions . expression_any
  270            | expressions . error

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 87 ($@4)

    SEMICOLON                         go to state 877
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    $@4                               go to state 1528
    expression_if_then_else           go to state 881
    $@6                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@7                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@8                               go to state 888
    expression_with                   go to state 889
    $@9                               go to state 890
    expression_with_alias             go to state 891
    expr_call_pipe                    go to state 470
    expression_any                    go to state 893
    name_in_namespace                 go to state 471
    expression_delete                 go to state 894
    expr_new                          go to state 472
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 902
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 903
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 1517

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 90 (expression_if_block)


State 1518

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 95 (expression_for_loop)


State 1519

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 614
    "as"                   shift, and go to state 615
    "<<"                   shift, and go to state 616
    ">>"                   shift, and go to state 617
    "++"                   shift, and go to state 618
    "--"                   shift, and go to state 619
    "<="                   shift, and go to state 620
    ">="                   shift, and go to state 621
    "=="                   shift, and go to state 622
    "!="                   shift, and go to state 623
    "->"                   shift, and go to state 624
    "??"                   shift, and go to state 625
    "?."                   shift, and go to state 626
    "?["                   shift, and go to state 627
    "<|"                   shift, and go to state 628
    "|>"                   shift, and go to state 629
    "<<<"                  shift, and go to state 630
    ">>>"                  shift, and go to state 631
    "&&"                   shift, and go to state 632
    "||"                   shift, and go to state 633
    "^^"                   shift, and go to state 634
    ".."                   shift, and go to state 635
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 636
    '|'                    shift, and go to state 637
    '^'                    shift, and go to state 638
    '&'                    shift, and go to state 639
    '<'                    shift, and go to state 640
    '>'                    shift, and go to state 641
    '-'                    shift, and go to state 642
    '+'                    shift, and go to state 643
    '*'                    shift, and go to state 644
    '/'                    shift, and go to state 645
    '%'                    shift, and go to state 646
    '.'                    shift, and go to state 647
    '['                    shift, and go to state 648
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1529


State 1520

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 310 (tuple_expansion_variable_declaration)


State 1521

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON .

    $default  reduce using rule 525 (struct_variable_declaration_list)


State 1522

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1530


State 1523

  782 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  783                   | make_struct_fields . ',' "name" ":=" expr
  786                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  792 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 759
    ')'  shift, and go to state 1531


State 1524

  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'
  843 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648

    $default  reduce using rule 843 (array_comprehension_where)


State 1525

  847 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 847 (array_comprehension)


State 1526

   71 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 71 (expression_else)


State 1527

   72 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  377 expr_method_call: expr . "->" "name" '(' ')'
  378                 | expr . "->" "name" '(' expr_list ')'
  388 expr_field: expr . '.' "name"
  389           | expr . '.' '.' "name"
  390           | expr . '.' "name" '(' ')'
  391           | expr . '.' "name" '(' expr_list ')'
  392           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  393           | expr . '.' basic_type_declaration '(' ')'
  394           | expr . '.' basic_type_declaration '(' expr_list ')'
  397           | expr . '.' $@29 error $@30
  419 expr: expr . "<<" expr
  420     | expr . ">>" expr
  421     | expr . "<<<" expr
  422     | expr . ">>>" expr
  423     | expr . '+' expr
  424     | expr . '-' expr
  425     | expr . '*' expr
  426     | expr . '/' expr
  427     | expr . '%' expr
  428     | expr . '<' expr
  429     | expr . '>' expr
  430     | expr . "==" expr
  431     | expr . "!=" expr
  432     | expr . "<=" expr
  433     | expr . ">=" expr
  434     | expr . '&' expr
  435     | expr . '|' expr
  436     | expr . '^' expr
  437     | expr . "&&" expr
  438     | expr . "||" expr
  439     | expr . "^^" expr
  440     | expr . ".." expr
  443     | expr . "++"
  444     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | expr . "??" expr
  460     | expr . '?' expr ':' expr
  463     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  464     | expr . "is" basic_type_declaration
  465     | expr . "is" "name"
  466     | expr . "as" "name"
  469     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  470     | expr . "as" basic_type_declaration
  471     | expr . '?' "as" "name"
  474     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  475     | expr . '?' "as" basic_type_declaration
  483     | expr . "<|" expr
  484     | expr . "|>" expr
  485     | expr . "|>" basic_type_declaration
  499 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr . "?." "$f" '(' expr ')'
  501          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr . "as" "$f" '(' expr ')'
  504          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 614
    "as"   shift, and go to state 615
    "<<"   shift, and go to state 616
    ">>"   shift, and go to state 617
    "++"   shift, and go to state 618
    "--"   shift, and go to state 619
    "<="   shift, and go to state 620
    ">="   shift, and go to state 621
    "=="   shift, and go to state 622
    "!="   shift, and go to state 623
    "->"   shift, and go to state 624
    "??"   shift, and go to state 625
    "?."   shift, and go to state 626
    "?["   shift, and go to state 627
    "<|"   shift, and go to state 628
    "|>"   shift, and go to state 629
    "<<<"  shift, and go to state 630
    ">>>"  shift, and go to state 631
    "&&"   shift, and go to state 632
    "||"   shift, and go to state 633
    "^^"   shift, and go to state 634
    ".."   shift, and go to state 635
    '?'    shift, and go to state 636
    '|'    shift, and go to state 637
    '^'    shift, and go to state 638
    '&'    shift, and go to state 639
    '<'    shift, and go to state 640
    '>'    shift, and go to state 641
    '-'    shift, and go to state 642
    '+'    shift, and go to state 643
    '*'    shift, and go to state 644
    '/'    shift, and go to state 645
    '%'    shift, and go to state 646
    '.'    shift, and go to state 647
    '['    shift, and go to state 648
    ')'    shift, and go to state 1532


State 1528

   88 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1533


State 1529

  309 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 309 (tuple_expansion_variable_declaration)


State 1530

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1534
    $@13              go to state 396


State 1531

  792 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 792 (make_struct_dim_list)


State 1532

   72 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1535


State 1533

   88 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1210

    $default  reduce using rule 241 (expression_block_finally)

    expression_block_finally  go to state 1536


State 1534

  527 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 527 (struct_variable_declaration_list)


State 1535

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 245 ($@13)

    expression_block  go to state 1537
    $@13              go to state 396


State 1536

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 88 (expression_if_block)


State 1537

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1493
    "elif"         shift, and go to state 1494
    "static_elif"  shift, and go to state 1495

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1496
    expression_else      go to state 1538


State 1538

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 72 (expression_else)
