Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration "end of expression"
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 require_module_name: "name"
   39                    | '%' require_module_name
   40                    | require_module_name '.' "name"
   41                    | require_module_name '/' "name"

   42 require_module: require_module_name is_public_module
   43               | require_module_name "as" "name" is_public_module

   44 is_public_module: %empty
   45                 | "public"

   46 expect_declaration: "expect" expect_list

   47 expect_list: expect_error
   48            | expect_list ',' expect_error

   49 expect_error: "integer constant"
   50             | "integer constant" ':' "integer constant"

   51 expression_label: "label" "integer constant" ':'

   52 expression_goto: "goto" "label" "integer constant"
   53                | "goto" expr

   54 elif_or_static_elif: "elif"
   55                    | "static_elif"

   56 expression_else: %empty
   57                | "else" expression_block
   58                | elif_or_static_elif '(' expr ')' expression_block expression_else

   59 if_or_static_if: "if"
   60                | "static_if"

   61 expression_else_one_liner: %empty
   62                          | "else" expression_if_one_liner

   63 expression_if_one_liner: expr
   64                        | expression_return
   65                        | expression_yield
   66                        | expression_break
   67                        | expression_continue

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   69                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   71 expression_unsafe: "unsafe" expression_block

   72 expression_while_loop: "while" '(' expr ')' expression_block

   73 expression_with: "with" '(' expr ')' expression_block

   74 expression_with_alias: "assume" "name" '=' expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 metadata_argument_list: '@' annotation_argument
   97                       | metadata_argument_list '@' annotation_argument

   98 annotation_declaration_name: name_in_namespace
   99                            | "require"
  100                            | "private"

  101 annotation_declaration_basic: annotation_declaration_name
  102                             | annotation_declaration_name '(' annotation_argument_list ')'

  103 annotation_declaration: annotation_declaration_basic
  104                       | '!' annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration
  108                       | '(' annotation_declaration ')'
  109                       | "|>" annotation_declaration

  110 annotation_list: annotation_declaration
  111                | annotation_list ',' annotation_declaration

  112 optional_annotation_list: %empty
  113                         | '[' annotation_list ']'

  114 optional_function_argument_list: %empty
  115                                | '(' ')'
  116                                | '(' function_argument_list ')'

  117 optional_function_type: %empty
  118                       | ':' type_declaration

  119 function_name: "name"
  120              | "operator" '!'
  121              | "operator" '~'
  122              | "operator" "+="
  123              | "operator" "-="
  124              | "operator" "*="
  125              | "operator" "/="
  126              | "operator" "%="
  127              | "operator" "&="
  128              | "operator" "|="
  129              | "operator" "^="
  130              | "operator" "&&="
  131              | "operator" "||="
  132              | "operator" "^^="
  133              | "operator" "&&"
  134              | "operator" "||"
  135              | "operator" "^^"
  136              | "operator" '+'
  137              | "operator" '-'
  138              | "operator" '*'
  139              | "operator" '/'
  140              | "operator" '%'
  141              | "operator" '<'
  142              | "operator" '>'
  143              | "operator" ".."
  144              | "operator" "=="
  145              | "operator" "!="
  146              | "operator" "<="
  147              | "operator" ">="
  148              | "operator" '&'
  149              | "operator" '|'
  150              | "operator" '^'
  151              | "++" "operator"
  152              | "--" "operator"
  153              | "operator" "++"
  154              | "operator" "--"
  155              | "operator" "<<"
  156              | "operator" ">>"
  157              | "operator" "<<="
  158              | "operator" ">>="
  159              | "operator" "<<<"
  160              | "operator" ">>>"
  161              | "operator" "<<<="
  162              | "operator" ">>>="
  163              | "operator" '[' ']'
  164              | "operator" "?[" ']'
  165              | "operator" '.'
  166              | "operator" "?."
  167              | "operator" '.' "name"
  168              | "operator" '.' "name" ":="
  169              | "operator" "?." "name"
  170              | "operator" ":="
  171              | "operator" "delete"
  172              | "operator" "??"
  173              | "operator" "is"
  174              | "operator" "as"
  175              | "operator" "is" "name"
  176              | "operator" "as" "name"
  177              | "operator" '?' "as"
  178              | "operator" '?' "as" "name"
  179              | "bool"
  180              | "string"
  181              | "int"
  182              | "int2"
  183              | "int3"
  184              | "int4"
  185              | "uint"
  186              | "uint2"
  187              | "uint3"
  188              | "uint4"
  189              | "float"
  190              | "float2"
  191              | "float3"
  192              | "float4"
  193              | "range"
  194              | "urange"
  195              | "range64"
  196              | "urange64"
  197              | "int64"
  198              | "uint64"
  199              | "double"
  200              | "int8"
  201              | "uint8"
  202              | "int16"
  203              | "uint16"

  204 global_function_declaration: optional_annotation_list "def" function_declaration

  205 optional_public_or_private_function: %empty
  206                                    | "private"
  207                                    | "public"

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type

  209 $@2: %empty

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  211 expression_block: "begin of code block" expressions "end of code block"
  212                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped

  214 expression_any: "end of expression"
  215               | expr_assign "end of expression"
  216               | expression_delete "end of expression"
  217               | expression_let
  218               | expression_while_loop
  219               | expression_unsafe
  220               | expression_with
  221               | expression_with_alias "end of expression"
  222               | expression_for_loop
  223               | expression_break "end of expression"
  224               | expression_continue "end of expression"
  225               | expression_return "end of expression"
  226               | expression_yield "end of expression"
  227               | expression_if_then_else
  228               | expression_try_catch
  229               | expression_label "end of expression"
  230               | expression_goto "end of expression"
  231               | "pass" "end of expression"

  232 expressions: %empty
  233            | expressions expression_any
  234            | expressions error

  235 optional_expr_list: %empty
  236                   | expr_list optional_comma

  237 optional_expr_map_tuple_list: %empty
  238                             | expr_map_tuple_list optional_comma

  239 type_declaration_no_options_list: type_declaration
  240                                 | type_declaration_no_options_list c_or_s type_declaration

  241 name_in_namespace: "name"
  242                  | "name" "::" "name"
  243                  | "::" "name"

  244 expression_delete: "delete" expr
  245                  | "delete" "explicit" expr

  246 $@3: %empty

  247 $@4: %empty

  248 new_type_declaration: '<' $@3 type_declaration '>' $@4

  249 expr_new: "new" structure_type_declaration
  250         | "new" structure_type_declaration '(' optional_expr_list ')'
  251         | "new" new_type_declaration '(' use_initializer ')'
  252         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  253         | "new" make_decl

  254 expression_break: "break"

  255 expression_continue: "continue"

  256 expression_return: "return"
  257                  | "return" expr
  258                  | "return" "<-" expr

  259 expression_yield: "yield" expr
  260                 | "yield" "<-" expr

  261 expression_try_catch: "try" expression_block "recover" expression_block

  262 kwd_let_var_or_nothing: "let"
  263                       | "var"
  264                       | %empty

  265 kwd_let: "let"
  266        | "var"

  267 optional_in_scope: "inscope"
  268                  | %empty

  269 tuple_expansion: "name"
  270                | tuple_expansion ',' "name"

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  273 expression_let: kwd_let optional_in_scope let_variable_declaration
  274               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  275 $@5: %empty

  276 $@6: %empty

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  278 $@7: %empty

  279 $@8: %empty

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  281 $@9: %empty

  282 $@10: %empty

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  284 $@11: %empty

  285 $@12: %empty

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  288               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  290 expr_list: expr
  291          | expr_list ',' expr

  292 block_or_simple_block: expression_block
  293                      | "=>" expr
  294                      | "=>" "<-" expr

  295 block_or_lambda: '$'
  296                | '@'
  297                | '@' '@'

  298 capture_entry: '&' "name"
  299              | '=' "name"
  300              | "<-" "name"
  301              | ":=" "name"

  302 capture_list: capture_entry
  303             | capture_list ',' capture_entry

  304 optional_capture_list: %empty
  305                      | "capture" '(' capture_list ')'

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  308                              | "begin of code block" expressions "end of code block"

  309 expr_numeric_const: "integer constant"
  310                   | "unsigned integer constant"
  311                   | "long integer constant"
  312                   | "unsigned long integer constant"
  313                   | "unsigned int8 constant"
  314                   | "floating point constant"
  315                   | "double constant"

  316 expr_assign: expr
  317            | expr '=' expr
  318            | expr "<-" expr
  319            | expr ":=" expr
  320            | expr "&=" expr
  321            | expr "|=" expr
  322            | expr "^=" expr
  323            | expr "&&=" expr
  324            | expr "||=" expr
  325            | expr "^^=" expr
  326            | expr "+=" expr
  327            | expr "-=" expr
  328            | expr "*=" expr
  329            | expr "/=" expr
  330            | expr "%=" expr
  331            | expr "<<=" expr
  332            | expr ">>=" expr
  333            | expr "<<<=" expr
  334            | expr ">>>=" expr

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  336                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  337 expr_method_call: expr "->" "name" '(' ')'
  338                 | expr "->" "name" '(' expr_list ')'

  339 func_addr_name: name_in_namespace
  340               | "$i" '(' expr ')'

  341 func_addr_expr: '@' '@' func_addr_name

  342 $@13: %empty

  343 $@14: %empty

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  345 $@15: %empty

  346 $@16: %empty

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  348 expr_field: expr '.' "name"
  349           | expr '.' '.' "name"
  350           | expr '.' "name" '(' ')'
  351           | expr '.' "name" '(' expr_list ')'

  352 $@17: %empty

  353 $@18: %empty

  354 expr_field: expr '.' $@17 error $@18

  355 expr_call: name_in_namespace '(' ')'
  356          | name_in_namespace '(' make_struct_single ')'
  357          | name_in_namespace '(' expr_list ')'
  358          | basic_type_declaration '(' ')'
  359          | basic_type_declaration '(' expr_list ')'

  360 expr: "null"
  361     | name_in_namespace
  362     | expr_numeric_const
  363     | expr_reader
  364     | string_builder
  365     | make_decl
  366     | "true"
  367     | "false"
  368     | expr_field
  369     | expr_mtag
  370     | '!' expr
  371     | '~' expr
  372     | '+' expr
  373     | '-' expr
  374     | expr "<<" expr
  375     | expr ">>" expr
  376     | expr "<<<" expr
  377     | expr ">>>" expr
  378     | expr '+' expr
  379     | expr '-' expr
  380     | expr '*' expr
  381     | expr '/' expr
  382     | expr '%' expr
  383     | expr '<' expr
  384     | expr '>' expr
  385     | expr "==" expr
  386     | expr "!=" expr
  387     | expr "<=" expr
  388     | expr ">=" expr
  389     | expr '&' expr
  390     | expr '|' expr
  391     | expr '^' expr
  392     | expr "&&" expr
  393     | expr "||" expr
  394     | expr "^^" expr
  395     | expr ".." expr
  396     | "++" expr
  397     | "--" expr
  398     | expr "++"
  399     | expr "--"
  400     | '(' expr_list optional_comma ')'
  401     | expr '[' expr ']'
  402     | expr '.' '[' expr ']'
  403     | expr "?[" expr ']'
  404     | expr '.' "?[" expr ']'
  405     | expr "?." "name"
  406     | expr '.' "?." "name"
  407     | func_addr_expr
  408     | expr_call
  409     | '*' expr
  410     | "deref" '(' expr ')'
  411     | "addr" '(' expr ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block
  415     | expr "??" expr
  416     | expr '?' expr ':' expr

  417 $@19: %empty

  418 $@20: %empty

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr "is" basic_type_declaration
  421     | expr "is" "name"
  422     | expr "as" "name"

  423 $@21: %empty

  424 $@22: %empty

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr "as" basic_type_declaration
  427     | expr '?' "as" "name"

  428 $@23: %empty

  429 $@24: %empty

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' "as" basic_type_declaration
  432     | expr_type_info
  433     | expr_type_decl
  434     | expr_cast
  435     | expr_new
  436     | expr_method_call
  437     | expr_named_call
  438     | expr_full_block
  439     | expr "<|" expr
  440     | expr "|>" expr
  441     | expr "|>" basic_type_declaration
  442     | expr_call_pipe
  443     | "unsafe" '(' expr ')'

  444 expr_mtag: "$$" '(' expr ')'
  445          | "$i" '(' expr ')'
  446          | "$v" '(' expr ')'
  447          | "$b" '(' expr ')'
  448          | "$a" '(' expr ')'
  449          | "..."
  450          | "$c" '(' expr ')' '(' ')'
  451          | "$c" '(' expr ')' '(' expr_list ')'
  452          | expr '.' "$f" '(' expr ')'
  453          | expr "?." "$f" '(' expr ')'
  454          | expr '.' '.' "$f" '(' expr ')'
  455          | expr '.' "?." "$f" '(' expr ')'
  456          | expr "as" "$f" '(' expr ')'
  457          | expr '?' "as" "$f" '(' expr ')'
  458          | expr "is" "$f" '(' expr ')'
  459          | '@' '@' "$c" '(' expr ')'

  460 optional_field_annotation: %empty
  461                          | metadata_argument_list

  462 optional_override: %empty
  463                  | "override"
  464                  | "sealed"

  465 optional_constant: %empty
  466                  | "const"

  467 optional_public_or_private_member_variable: %empty
  468                                           | "public"
  469                                           | "private"

  470 optional_static_member_variable: %empty
  471                                | "static"

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  473 struct_variable_declaration_list: %empty

  474 $@25: %empty

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  476 $@26: %empty

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  478 $@27: %empty

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  480 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  481                              | "$a" '(' expr ')'

  482 function_argument_list: function_argument_declaration
  483                       | function_argument_list "end of expression" function_argument_declaration

  484 tuple_type: type_declaration
  485           | "name" ':' type_declaration

  486 tuple_type_list: tuple_type
  487                | tuple_type_list c_or_s tuple_type

  488 tuple_alias_type_list: %empty
  489                      | tuple_alias_type_list c_or_s
  490                      | tuple_alias_type_list tuple_type c_or_s

  491 variant_type: "name" ':' type_declaration

  492 variant_type_list: variant_type
  493                  | variant_type_list c_or_s variant_type

  494 variant_alias_type_list: %empty
  495                        | variant_alias_type_list c_or_s
  496                        | variant_alias_type_list variant_type c_or_s

  497 copy_or_move: '='
  498             | "<-"

  499 variable_declaration: variable_name_with_pos_list
  500                     | variable_name_with_pos_list '&'
  501                     | variable_name_with_pos_list ':' type_declaration
  502                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  503                     | variable_name_with_pos_list copy_or_move expr

  504 copy_or_move_or_clone: '='
  505                      | "<-"
  506                      | ":="

  507 optional_ref: %empty
  508             | '&'

  509 let_variable_name_with_pos_list: "name"
  510                                | "$i" '(' expr ')'
  511                                | "name" "aka" "name"
  512                                | let_variable_name_with_pos_list ',' "name"
  513                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  514 global_let_variable_name_with_pos_list: "name"
  515                                       | global_let_variable_name_with_pos_list ',' "name"

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  517                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  518                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  520                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  521                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  522 optional_shared: %empty
  523                | "shared"

  524 optional_public_or_private_variable: %empty
  525                                    | "private"
  526                                    | "public"

  527 $@28: %empty

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

  529 enum_expression: "name"
  530                | "name" '=' expr

  531 enum_list: %empty
  532          | enum_expression
  533          | enum_list ',' enum_expression

  534 optional_public_or_private_alias: %empty
  535                                 | "private"
  536                                 | "public"

  537 $@29: %empty

  538 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration

  539 alias_declaration: "typedef" single_alias "end of expression"

  540 optional_public_or_private_enum: %empty
  541                                | "private"
  542                                | "public"

  543 enum_name: "name"

  544 optional_enum_basic_type_declaration: %empty
  545                                     | ':' enum_basic_type_declaration

  546 $@30: %empty

  547 $@31: %empty

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

  549 optional_structure_parent: %empty
  550                          | ':' name_in_namespace

  551 optional_sealed: %empty
  552                | "sealed"

  553 structure_name: optional_sealed "name" optional_structure_parent

  554 class_or_struct: "class"
  555                | "struct"

  556 optional_public_or_private_structure: %empty
  557                                     | "private"
  558                                     | "public"

  559 optional_struct_variable_declaration_list: %empty
  560                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  561 $@32: %empty

  562 $@33: %empty

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

  564 variable_name_with_pos_list: "name"
  565                            | "$i" '(' expr ')'
  566                            | "name" "aka" "name"
  567                            | variable_name_with_pos_list ',' "name"
  568                            | variable_name_with_pos_list ',' "name" "aka" "name"

  569 basic_type_declaration: "bool"
  570                       | "string"
  571                       | "int"
  572                       | "int8"
  573                       | "int16"
  574                       | "int64"
  575                       | "int2"
  576                       | "int3"
  577                       | "int4"
  578                       | "uint"
  579                       | "uint8"
  580                       | "uint16"
  581                       | "uint64"
  582                       | "uint2"
  583                       | "uint3"
  584                       | "uint4"
  585                       | "float"
  586                       | "float2"
  587                       | "float3"
  588                       | "float4"
  589                       | "void"
  590                       | "range"
  591                       | "urange"
  592                       | "range64"
  593                       | "urange64"
  594                       | "double"
  595                       | "bitfield"

  596 enum_basic_type_declaration: "int"
  597                            | "int8"
  598                            | "int16"
  599                            | "uint"
  600                            | "uint8"
  601                            | "uint16"
  602                            | "int64"
  603                            | "uint64"

  604 structure_type_declaration: name_in_namespace

  605 auto_type_declaration: "auto"
  606                      | "auto" '(' "name" ')'
  607                      | "$t" '(' expr ')'

  608 bitfield_bits: "name"
  609              | bitfield_bits "end of expression" "name"

  610 bitfield_alias_bits: %empty
  611                    | "name"
  612                    | bitfield_alias_bits ',' "name"

  613 $@34: %empty

  614 $@35: %empty

  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  616 c_or_s: ','
  617       | "end of expression"

  618 table_type_pair: type_declaration
  619                | type_declaration c_or_s type_declaration

  620 dim_list: '[' expr ']'
  621         | '[' ']'
  622         | dim_list '[' expr ']'
  623         | dim_list '[' ']'

  624 type_declaration_no_options: type_declaration_no_options_no_dim
  625                            | type_declaration_no_options_no_dim dim_list

  626 type_declaration_no_options_no_dim: basic_type_declaration
  627                                   | auto_type_declaration
  628                                   | bitfield_type_declaration
  629                                   | structure_type_declaration

  630 $@36: %empty

  631 $@37: %empty

  632 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37
  633                                   | "typedecl" '(' expr ')'
  634                                   | '$' name_in_namespace '(' optional_expr_list ')'

  635 $@38: %empty

  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  637                                   | type_declaration_no_options_no_dim '-' '[' ']'
  638                                   | type_declaration_no_options_no_dim "explicit"
  639                                   | type_declaration_no_options_no_dim "const"
  640                                   | type_declaration_no_options_no_dim '-' "const"
  641                                   | type_declaration_no_options_no_dim '&'
  642                                   | type_declaration_no_options_no_dim '-' '&'
  643                                   | type_declaration_no_options_no_dim '#'
  644                                   | type_declaration_no_options_no_dim "implicit"
  645                                   | type_declaration_no_options_no_dim '-' '#'
  646                                   | type_declaration_no_options_no_dim "==" "const"
  647                                   | type_declaration_no_options_no_dim "==" '&'
  648                                   | type_declaration_no_options_no_dim '?'

  649 $@39: %empty

  650 $@40: %empty

  651 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40
  652                                   | type_declaration_no_options_no_dim "??"

  653 $@41: %empty

  654 $@42: %empty

  655 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42

  656 $@43: %empty

  657 $@44: %empty

  658 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44

  659 $@45: %empty

  660 $@46: %empty

  661 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46
  662                                   | "block"

  663 $@47: %empty

  664 $@48: %empty

  665 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48

  666 $@49: %empty

  667 $@50: %empty

  668 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50
  669                                   | "function"

  670 $@51: %empty

  671 $@52: %empty

  672 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52

  673 $@53: %empty

  674 $@54: %empty

  675 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54
  676                                   | "lambda"

  677 $@55: %empty

  678 $@56: %empty

  679 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56

  680 $@57: %empty

  681 $@58: %empty

  682 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58

  683 $@59: %empty

  684 $@60: %empty

  685 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60

  686 $@61: %empty

  687 $@62: %empty

  688 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62

  689 type_declaration: type_declaration_no_options
  690                 | type_declaration '|' type_declaration_no_options
  691                 | type_declaration '|' '#'

  692 $@63: %empty

  693 $@64: %empty

  694 $@65: %empty

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

  696 $@66: %empty

  697 $@67: %empty

  698 $@68: %empty

  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

  700 $@69: %empty

  701 $@70: %empty

  702 $@71: %empty

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

  704 make_decl: make_struct_decl
  705          | make_dim_decl
  706          | make_table_decl
  707          | array_comprehension
  708          | make_tuple_call

  709 make_struct_fields: "name" copy_or_move expr
  710                   | "name" ":=" expr
  711                   | make_struct_fields ',' "name" copy_or_move expr
  712                   | make_struct_fields ',' "name" ":=" expr
  713                   | "$f" '(' expr ')' copy_or_move expr
  714                   | "$f" '(' expr ')' ":=" expr
  715                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  717 make_variant_dim: make_struct_fields

  718 make_struct_single: make_struct_fields

  719 make_struct_dim_list: '(' make_struct_fields ')'
  720                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  721 make_struct_dim_decl: make_struct_fields
  722                     | make_struct_dim_list optional_comma

  723 optional_make_struct_dim_decl: make_struct_dim_decl
  724                              | %empty

  725 use_initializer: %empty
  726                | "uninitialized"

  727 $@72: %empty

  728 $@73: %empty

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

  730 $@74: %empty

  731 $@75: %empty

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

  733 $@76: %empty

  734 $@77: %empty

  735 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

  736 $@78: %empty

  737 $@79: %empty

  738 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer

  739 make_map_tuple: expr "=>" expr
  740               | expr

  741 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  742 $@80: %empty

  743 $@81: %empty

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

  745 make_dim_decl: '[' expr_list optional_comma ']'

  746 $@82: %empty

  747 $@83: %empty

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

  749 $@84: %empty

  750 $@85: %empty

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

  752 $@86: %empty

  753 $@87: %empty

  754 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  755              | "array" '(' expr_list optional_comma ')'

  756 $@88: %empty

  757 $@89: %empty

  758 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'
  759              | "fixed_array" '(' expr_list optional_comma ')'

  760 $@90: %empty

  761 $@91: %empty

  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

  763 expr_map_tuple_list: make_map_tuple
  764                    | expr_map_tuple_list ',' make_map_tuple

  765 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  766                | "table" '(' expr_map_tuple_list optional_comma ')'
  767                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  768                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  769 array_comprehension_where: %empty
  770                          | "end of expression" "where" expr

  771 optional_comma: %empty
  772               | ','

  773 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  774                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  775                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104 120 370
    '#' (35) 643 645 691
    '$' (36) 20 295 634 636
    '%' (37) 35 39 140 382
    '&' (38) 148 298 389 500 508 641 642 647
    '(' (40) 58 68 69 70 72 73 93 102 108 115 116 250 251 252 271 272 287 288 289 305 335 336 337 338 340 350 351 355 356 357 358 359 400 410 411 412 413 443 444 445 446 447 448 450 451 452 453 454 455 456 457 458 459 481 510 565 606 607 633 634 636 713 714 715 716 719 720 729 732 735 741 744 748 751 754 755 758 759 762 766 767 768
    ')' (41) 58 68 69 70 72 73 93 102 108 115 116 250 251 252 271 272 287 288 289 305 335 336 337 338 340 350 351 355 356 357 358 359 400 410 411 412 413 443 444 445 446 447 448 450 451 452 453 454 455 456 457 458 459 481 510 565 606 607 633 634 636 713 714 715 716 719 720 729 732 735 741 744 748 751 754 755 758 759 762 766 767 768
    '*' (42) 138 380 409
    '+' (43) 136 372 378
    ',' (44) 48 82 95 111 270 291 303 336 512 513 515 533 567 568 612 616 711 712 715 716 720 764 772
    '-' (45) 137 373 379 637 640 642 645
    '.' (46) 40 165 167 168 348 349 350 351 354 402 404 406 452 454 455
    '/' (47) 41 139 381
    ':' (58) 50 51 118 271 416 485 491 501 502 516 517 519 520 545 550
    "end of expression" (59) 9 15 16 69 214 215 216 221 223 224 225 226 229 230 231 271 272 475 477 483 516 517 518 519 520 521 539 609 617 770 773 774 775
    '<' (60) 141 248 277 280 283 286 288 289 344 347 383 412 413 414 419 425 430 615 632 636 651 655 658 661 665 668 672 675 679 682 685 688 729 732 735 738 744 748 751 754 758 762 767 768
    '=' (61) 74 86 87 88 89 90 91 93 299 317 497 504 530 538
    '>' (62) 142 248 277 280 283 286 288 289 344 347 384 412 413 414 419 425 430 615 632 636 651 655 658 661 665 668 672 675 679 682 685 688 729 732 735 738 744 748 751 754 758 762 767 768
    '?' (63) 177 178 416 427 430 431 457 648
    '@' (64) 96 97 296 297 341 344 347 459
    '[' (91) 113 163 335 336 401 402 620 621 622 623 637 745 773 774
    ']' (93) 113 163 164 335 336 401 402 403 404 620 621 622 623 637 745 773 774
    '^' (94) 150 391
    "begin of code block" (123) 211 212 308 548 560 695 699 703 765 775
    '|' (124) 149 390 690 691
    "end of code block" (125) 211 212 308 548 560 695 699 703 765 775
    '~' (126) 121 371
    error (256) 234 354
    "lexer error" (258)
    "capture" (259) 305
    "struct" (260) 555 729 748
    "class" (261) 554 732
    "let" (262) 262 265
    "def" (263) 204 477 479
    "while" (264) 72
    "if" (265) 59 69
    "static_if" (266) 60
    "else" (267) 57 62
    "for" (268) 70 773 774 775
    "recover" (269) 261
    "true" (270) 79 90 366
    "false" (271) 80 91 367
    "new" (272) 249 250 251 252 253
    "typeinfo" (273) 287 288 289
    "type" (274) 84 286 419 425 430 632
    "in" (275) 70 85 773 774 775
    "is" (276) 173 175 419 420 421 458
    "as" (277) 43 174 176 177 178 422 425 426 427 430 431 456 457
    "elif" (278) 54
    "static_elif" (279) 55
    "array" (280) 655 748 751 754 755 758
    "return" (281) 256 257 258
    "null" (282) 360
    "break" (283) 254
    "try" (284) 261
    "options" (285) 36
    "table" (286) 658 766 767 768
    "expect" (287) 46
    "const" (288) 466 639 640 646
    "require" (289) 37 99
    "operator" (290) 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
    "enum" (291) 548
    "finally" (292) 212
    "delete" (293) 171 244 245
    "deref" (294) 410
    "typedef" (295) 539
    "typedecl" (296) 633
    "with" (297) 73
    "aka" (298) 511 513 566 568
    "assume" (299) 74
    "cast" (300) 277
    "override" (301) 463
    "abstract" (302) 477
    "upcast" (303) 280
    "iterator" (304) 661 774
    "var" (305) 263 266
    "addr" (306) 411
    "continue" (307) 255
    "where" (308) 770
    "pass" (309) 231
    "reinterpret" (310) 283
    "module" (311) 22
    "public" (312) 18 45 207 468 526 536 542 558
    "label" (313) 51 52
    "goto" (314) 52 53
    "implicit" (315) 644
    "explicit" (316) 245 638
    "shared" (317) 523
    "private" (318) 19 100 206 469 525 535 541 557
    "smart_ptr" (319) 651
    "unsafe" (320) 71 443
    "inscope" (321) 267
    "static" (322) 471
    "fixed_array" (323) 759 762
    "default" (324) 738
    "uninitialized" (325) 726
    "bool" (326) 179 569
    "void" (327) 589
    "string" (328) 180 570
    "auto" (329) 605 606
    "int" (330) 181 571 596
    "int2" (331) 182 575
    "int3" (332) 183 576
    "int4" (333) 184 577
    "uint" (334) 185 578 599
    "bitfield" (335) 595 615 703
    "uint2" (336) 186 582
    "uint3" (337) 187 583
    "uint4" (338) 188 584
    "float" (339) 189 585
    "float2" (340) 190 586
    "float3" (341) 191 587
    "float4" (342) 192 588
    "range" (343) 193 590
    "urange" (344) 194 591
    "range64" (345) 195 592
    "urange64" (346) 196 593
    "block" (347) 662 665 668
    "int64" (348) 197 574 602
    "uint64" (349) 198 581 603
    "double" (350) 199 594
    "function" (351) 669 672 675
    "lambda" (352) 676 679 682
    "int8" (353) 200 572 597
    "uint8" (354) 201 579 600
    "int16" (355) 202 573 598
    "uint16" (356) 203 580 601
    "tuple" (357) 685 695 741 744 751
    "variant" (358) 688 699 735 754
    "generator" (359) 412 413 414
    "yield" (360) 259 260
    "sealed" (361) 464 552
    "+=" (362) 122 326
    "-=" (363) 123 327
    "/=" (364) 125 329
    "*=" (365) 124 328
    "%=" (366) 126 330
    "&=" (367) 127 320
    "|=" (368) 128 321
    "^=" (369) 129 322
    "<<" (370) 155 374
    ">>" (371) 156 375
    "++" (372) 151 153 396 398
    "--" (373) 152 154 397 399
    "<=" (374) 146 387
    "<<=" (375) 157 331
    ">>=" (376) 158 332
    ">=" (377) 147 388
    "==" (378) 144 385 646 647
    "!=" (379) 145 386
    "->" (380) 337 338
    "<-" (381) 258 260 294 300 318 498 505
    "??" (382) 172 415 652
    "?." (383) 166 169 405 406 453 455
    "?[" (384) 164 403 404
    "<|" (385) 439
    "|>" (386) 109 440 441
    ":=" (387) 168 170 301 319 506 710 712 714 716
    "<<<" (388) 159 376
    ">>>" (389) 160 377
    "<<<=" (390) 161 333
    ">>>=" (391) 162 334
    "=>" (392) 293 294 739
    "::" (393) 242 243
    "&&" (394) 105 133 392
    "||" (395) 106 134 393
    "^^" (396) 107 135 394
    "&&=" (397) 130 323
    "||=" (398) 131 324
    "^^=" (399) 132 325
    ".." (400) 143 395
    "$$" (401) 444
    "$i" (402) 340 445 510 565
    "$v" (403) 446
    "$b" (404) 447
    "$a" (405) 448 481
    "$t" (406) 607
    "$c" (407) 450 451 459
    "$f" (408) 452 453 454 455 456 457 458 713 714 715 716
    "..." (409) 449
    "integer constant" <i> (410) 49 50 51 52 77 88 309
    "long integer constant" <i64> (411) 311
    "unsigned integer constant" <ui> (412) 310
    "unsigned long integer constant" <ui64> (413) 312
    "unsigned int8 constant" <ui> (414) 313
    "floating point constant" <fd> (415) 78 89 314
    "double constant" <d> (416) 315
    "name" <s> (417) 21 38 40 41 43 74 76 83 87 119 167 168 169 175 176 178 241 242 243 269 270 288 289 298 299 300 301 337 338 348 349 350 351 405 406 421 422 427 485 491 509 511 512 513 514 515 529 530 538 543 553 564 566 567 568 606 608 609 611 612 695 699 703 709 710 711 712
    "start of the string" (418) 27 31
    STRING_CHARACTER <ch> (419) 23 25 32 33
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 31
    "{" (422) 30
    "}" (423) 30
    "end of failed eader macro" (424)
    ";}}" (425)
    ";}]" (426)
    ";]]" (427)
    ",]]" (428)
    ",}]" (429)
    UNARY_MINUS (430)
    UNARY_PLUS (431)
    PRE_INC (432)
    PRE_DEC (433)
    LLPIPE (434)
    POST_INC (435)
    POST_DEC (436)
    DEREF (437)


Nonterminals, with rules where they appear

    $accept (210)
        on left: 0
    program (211)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (212)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 17 18 19
        on right: 22
    module_name <s> (214)
        on left: 20 21
        on right: 22
    module_declaration (215)
        on left: 22
        on right: 2
    character_sequence <s> (216)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (217)
        on left: 27
        on right: 75 86
    string_builder_body <pExpression> (218)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (219)
        on left: 31
        on right: 364
    reader_character_sequence (220)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (221)
        on left: 35
        on right: 16 363
    $@1 (222)
        on left: 34
        on right: 35
    options_declaration (223)
        on left: 36
        on right: 9
    require_declaration (224)
        on left: 37
        on right: 8
    require_module_name <s> (225)
        on left: 38 39 40 41
        on right: 39 40 41 42 43
    require_module (226)
        on left: 42 43
        on right: 37
    is_public_module <b> (227)
        on left: 44 45
        on right: 42 43
    expect_declaration (228)
        on left: 46
        on right: 7
    expect_list (229)
        on left: 47 48
        on right: 46 48
    expect_error (230)
        on left: 49 50
        on right: 47 48
    expression_label <pExpression> (231)
        on left: 51
        on right: 229
    expression_goto <pExpression> (232)
        on left: 52 53
        on right: 230
    elif_or_static_elif <b> (233)
        on left: 54 55
        on right: 58
    expression_else <pExpression> (234)
        on left: 56 57 58
        on right: 58 68
    if_or_static_if <b> (235)
        on left: 59 60
        on right: 68
    expression_else_one_liner <pExpression> (236)
        on left: 61 62
        on right: 69
    expression_if_one_liner <pExpression> (237)
        on left: 63 64 65 66 67
        on right: 62 69
    expression_if_then_else <pExpression> (238)
        on left: 68 69
        on right: 227
    expression_for_loop <pExpression> (239)
        on left: 70
        on right: 222
    expression_unsafe <pExpression> (240)
        on left: 71
        on right: 219
    expression_while_loop <pExpression> (241)
        on left: 72
        on right: 218
    expression_with <pExpression> (242)
        on left: 73
        on right: 220
    expression_with_alias <pExpression> (243)
        on left: 74
        on right: 221
    annotation_argument_value <aa> (244)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (245)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (246)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (247)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95 96 97
    annotation_argument_list <aaList> (248)
        on left: 94 95
        on right: 36 95 102
    metadata_argument_list <aaList> (249)
        on left: 96 97
        on right: 97 461
    annotation_declaration_name <s> (250)
        on left: 98 99 100
        on right: 101 102
    annotation_declaration_basic <fa> (251)
        on left: 101 102
        on right: 103
    annotation_declaration <fa> (252)
        on left: 103 104 105 106 107 108 109
        on right: 104 105 106 107 108 109 110 111
    annotation_list <faList> (253)
        on left: 110 111
        on right: 111 113
    optional_annotation_list <faList> (254)
        on left: 112 113
        on right: 204 306 307 477 479 548 563
    optional_function_argument_list <pVarDeclList> (255)
        on left: 114 115 116
        on right: 208 306 307 347 668 675 682
    optional_function_type <pTypeDecl> (256)
        on left: 117 118
        on right: 208 306 307 347 668 675 682
    function_name <s> (257)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 208
    global_function_declaration (258)
        on left: 204
        on right: 6
    optional_public_or_private_function <b> (259)
        on left: 205 206 207
        on right: 210
    function_declaration_header <pFuncDecl> (260)
        on left: 208
        on right: 210 477 479
    function_declaration <pFuncDecl> (261)
        on left: 210
        on right: 204
    $@2 (262)
        on left: 209
        on right: 210
    expression_block <pExpression> (263)
        on left: 211 212
        on right: 57 58 68 70 71 72 73 210 261 292 307 414 479
    expr_call_pipe <pExpression> (264)
        on left: 213
        on right: 442
    expression_any <pExpression> (265)
        on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
        on right: 233
    expressions <pExpression> (266)
        on left: 232 233 234
        on right: 211 212 233 234 308
    optional_expr_list <pExpression> (267)
        on left: 235 236
        on right: 250 634 636 758
    optional_expr_map_tuple_list <pExpression> (268)
        on left: 237 238
        on right: 767 768
    type_declaration_no_options_list <pTypeDeclList> (269)
        on left: 239 240
        on right: 240 636
    name_in_namespace <s> (270)
        on left: 241 242 243
        on right: 35 98 287 288 289 335 336 339 355 356 357 361 550 604 634 636
    expression_delete <pExpression> (271)
        on left: 244 245
        on right: 216
    new_type_declaration <pTypeDecl> (272)
        on left: 248
        on right: 251 252
    $@3 (273)
        on left: 246
        on right: 248
    $@4 (274)
        on left: 247
        on right: 248
    expr_new <pExpression> (275)
        on left: 249 250 251 252 253
        on right: 435
    expression_break <pExpression> (276)
        on left: 254
        on right: 66 223
    expression_continue <pExpression> (277)
        on left: 255
        on right: 67 224
    expression_return <pExpression> (278)
        on left: 256 257 258
        on right: 64 225
    expression_yield <pExpression> (279)
        on left: 259 260
        on right: 65 226
    expression_try_catch <pExpression> (280)
        on left: 261
        on right: 228
    kwd_let_var_or_nothing <b> (281)
        on left: 262 263 264
        on right: 480
    kwd_let <b> (282)
        on left: 265 266
        on right: 273 274 528
    optional_in_scope <b> (283)
        on left: 267 268
        on right: 273 274
    tuple_expansion <pNameList> (284)
        on left: 269 270
        on right: 270 271 272
    tuple_expansion_variable_declaration <pVarDecl> (285)
        on left: 271 272
        on right: 274
    expression_let <pExpression> (286)
        on left: 273 274
        on right: 217
    expr_cast <pExpression> (287)
        on left: 277 280 283
        on right: 434
    $@5 (288)
        on left: 275
        on right: 277
    $@6 (289)
        on left: 276
        on right: 277
    $@7 (290)
        on left: 278
        on right: 280
    $@8 (291)
        on left: 279
        on right: 280
    $@9 (292)
        on left: 281
        on right: 283
    $@10 (293)
        on left: 282
        on right: 283
    expr_type_decl <pExpression> (294)
        on left: 286
        on right: 433
    $@11 (295)
        on left: 284
        on right: 286
    $@12 (296)
        on left: 285
        on right: 286
    expr_type_info <pExpression> (297)
        on left: 287 288 289
        on right: 432
    expr_list <pExpression> (298)
        on left: 290 291
        on right: 70 236 291 336 338 351 357 359 400 451 741 745 755 759 762 773 774 775
    block_or_simple_block <pExpression> (299)
        on left: 292 293 294
        on right: 306
    block_or_lambda <i> (300)
        on left: 295 296 297
        on right: 306 307
    capture_entry <pCapt> (301)
        on left: 298 299 300 301
        on right: 302 303
    capture_list <pCaptList> (302)
        on left: 302 303
        on right: 303 305
    optional_capture_list <pCaptList> (303)
        on left: 304 305
        on right: 306 307 412 413 414
    expr_full_block <pExpression> (304)
        on left: 306
        on right: 438
    expr_full_block_assumed_piped <pExpression> (305)
        on left: 307 308
        on right: 213
    expr_numeric_const <pExpression> (306)
        on left: 309 310 311 312 313 314 315
        on right: 362
    expr_assign <pExpression> (307)
        on left: 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334
        on right: 215
    expr_named_call <pExpression> (308)
        on left: 335 336
        on right: 437
    expr_method_call <pExpression> (309)
        on left: 337 338
        on right: 436
    func_addr_name <pExpression> (310)
        on left: 339 340
        on right: 341 344 347
    func_addr_expr <pExpression> (311)
        on left: 341 344 347
        on right: 407
    $@13 (312)
        on left: 342
        on right: 344
    $@14 (313)
        on left: 343
        on right: 344
    $@15 (314)
        on left: 345
        on right: 347
    $@16 (315)
        on left: 346
        on right: 347
    expr_field <pExpression> (316)
        on left: 348 349 350 351 354
        on right: 368
    $@17 (317)
        on left: 352
        on right: 354
    $@18 (318)
        on left: 353
        on right: 354
    expr_call <pExpression> (319)
        on left: 355 356 357 358 359
        on right: 213 408
    expr <pExpression> (320)
        on left: 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 419 420 421 422 425 426 427 430 431 432 433 434 435 436 437 438 439 440 441 442 443
        on right
    $@19 (321)
        on left: 417
        on right: 419
    $@20 (322)
        on left: 418
        on right: 419
    $@21 (323)
        on left: 423
        on right: 425
    $@22 (324)
        on left: 424
        on right: 425
    $@23 (325)
        on left: 428
        on right: 430
    $@24 (326)
        on left: 429
        on right: 430
    expr_mtag <pExpression> (327)
        on left: 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459
        on right: 369
    optional_field_annotation <aaList> (328)
        on left: 460 461
        on right: 472 480 528
    optional_override <i> (329)
        on left: 462 463 464
        on right: 472 479
    optional_constant <b> (330)
        on left: 465 466
        on right: 477 479
    optional_public_or_private_member_variable <b> (331)
        on left: 467 468 469
        on right: 472 477 479
    optional_static_member_variable <b> (332)
        on left: 470 471
        on right: 472 479
    structure_variable_declaration <pVarDecl> (333)
        on left: 472
        on right: 475
    struct_variable_declaration_list <pVarDeclList> (334)
        on left: 473 475 477 479
        on right: 475 477 479 560
    $@25 (335)
        on left: 474
        on right: 475
    $@26 (336)
        on left: 476
        on right: 477
    $@27 (337)
        on left: 478
        on right: 479
    function_argument_declaration <pVarDecl> (338)
        on left: 480 481
        on right: 482 483
    function_argument_list <pVarDeclList> (339)
        on left: 482 483
        on right: 116 483
    tuple_type <pVarDecl> (340)
        on left: 484 485
        on right: 486 487 490
    tuple_type_list <pVarDeclList> (341)
        on left: 486 487
        on right: 487 685
    tuple_alias_type_list <pVarDeclList> (342)
        on left: 488 489 490
        on right: 489 490 695
    variant_type <pVarDecl> (343)
        on left: 491
        on right: 492 493 496
    variant_type_list <pVarDeclList> (344)
        on left: 492 493
        on right: 493 688
    variant_alias_type_list <pVarDeclList> (345)
        on left: 494 495 496
        on right: 495 496 699
    copy_or_move <b> (346)
        on left: 497 498
        on right: 502 503 709 711 713 715
    variable_declaration <pVarDecl> (347)
        on left: 499 500 501 502 503
        on right: 472 480
    copy_or_move_or_clone <i> (348)
        on left: 504 505 506
        on right: 271 272 517 518 520 521
    optional_ref <b> (349)
        on left: 507 508
        on right: 272 518 521
    let_variable_name_with_pos_list <pNameWithPosList> (350)
        on left: 509 510 511 512 513
        on right: 512 513 516 517 518
    global_let_variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 514 515
        on right: 515 519 520 521
    let_variable_declaration <pVarDecl> (352)
        on left: 516 517 518
        on right: 273
    global_let_variable_declaration <pVarDecl> (353)
        on left: 519 520 521
        on right: 528
    optional_shared <b> (354)
        on left: 522 523
        on right: 22 528
    optional_public_or_private_variable <b> (355)
        on left: 524 525 526
        on right: 528
    global_let (356)
        on left: 528
        on right: 5
    $@28 (357)
        on left: 527
        on right: 528
    enum_expression <pEnumPair> (358)
        on left: 529 530
        on right: 532 533
    enum_list <pEnum> (359)
        on left: 531 532 533
        on right: 533 548
    optional_public_or_private_alias <b> (360)
        on left: 534 535 536
        on right: 538 695 699 703
    single_alias (361)
        on left: 538
        on right: 539
    $@29 (362)
        on left: 537
        on right: 538
    alias_declaration (363)
        on left: 539
        on right: 10
    optional_public_or_private_enum <b> (364)
        on left: 540 541 542
        on right: 548
    enum_name <pEnum> (365)
        on left: 543
        on right: 548
    optional_enum_basic_type_declaration <type> (366)
        on left: 544 545
        on right: 548
    enum_declaration (367)
        on left: 548
        on right: 4
    $@30 (368)
        on left: 546
        on right: 548
    $@31 (369)
        on left: 547
        on right: 548
    optional_structure_parent <s> (370)
        on left: 549 550
        on right: 553
    optional_sealed <b> (371)
        on left: 551 552
        on right: 553
    structure_name <pStructure> (372)
        on left: 553
        on right: 563
    class_or_struct <b> (373)
        on left: 554 555
        on right: 563
    optional_public_or_private_structure <b> (374)
        on left: 556 557 558
        on right: 563
    optional_struct_variable_declaration_list <pVarDeclList> (375)
        on left: 559 560
        on right: 563
    structure_declaration (376)
        on left: 563
        on right: 3
    $@32 (377)
        on left: 561
        on right: 563
    $@33 (378)
        on left: 562
        on right: 563
    variable_name_with_pos_list <pNameWithPosList> (379)
        on left: 564 565 566 567 568
        on right: 70 499 500 501 502 503 567 568 773 774 775
    basic_type_declaration <type> (380)
        on left: 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595
        on right: 358 359 420 426 431 441 626
    enum_basic_type_declaration <type> (381)
        on left: 596 597 598 599 600 601 602 603
        on right: 545
    structure_type_declaration <pTypeDecl> (382)
        on left: 604
        on right: 249 250 629
    auto_type_declaration <pTypeDecl> (383)
        on left: 605 606 607
        on right: 627
    bitfield_bits <pNameList> (384)
        on left: 608 609
        on right: 609 615
    bitfield_alias_bits <pNameList> (385)
        on left: 610 611 612
        on right: 612 703
    bitfield_type_declaration <pTypeDecl> (386)
        on left: 615
        on right: 628
    $@34 (387)
        on left: 613
        on right: 615
    $@35 (388)
        on left: 614
        on right: 615
    c_or_s (389)
        on left: 616 617
        on right: 240 289 487 489 490 493 495 496 619 768
    table_type_pair <aTypePair> (390)
        on left: 618 619
        on right: 658
    dim_list <pTypeDecl> (391)
        on left: 620 621 622 623
        on right: 622 623 625
    type_declaration_no_options <pTypeDecl> (392)
        on left: 624 625
        on right: 271 277 280 283 344 412 413 414 419 516 517 519 520 689 690 729 732 735 738 744 748 751 754 758 762 767 768
    type_declaration_no_options_no_dim <pTypeDecl> (393)
        on left: 626 627 628 629 632 633 634 636 637 638 639 640 641 642 643 644 645 646 647 648 651 652 655 658 661 662 665 668 669 672 675 676 679 682 685 688
        on right: 624 625 637 638 639 640 641 642 643 644 645 646 647 648 652
    $@36 (394)
        on left: 630
        on right: 632
    $@37 (395)
        on left: 631
        on right: 632
    $@38 (396)
        on left: 635
        on right: 636
    $@39 (397)
        on left: 649
        on right: 651
    $@40 (398)
        on left: 650
        on right: 651
    $@41 (399)
        on left: 653
        on right: 655
    $@42 (400)
        on left: 654
        on right: 655
    $@43 (401)
        on left: 656
        on right: 658
    $@44 (402)
        on left: 657
        on right: 658
    $@45 (403)
        on left: 659
        on right: 661
    $@46 (404)
        on left: 660
        on right: 661
    $@47 (405)
        on left: 663
        on right: 665
    $@48 (406)
        on left: 664
        on right: 665
    $@49 (407)
        on left: 666
        on right: 668
    $@50 (408)
        on left: 667
        on right: 668
    $@51 (409)
        on left: 670
        on right: 672
    $@52 (410)
        on left: 671
        on right: 672
    $@53 (411)
        on left: 673
        on right: 675
    $@54 (412)
        on left: 674
        on right: 675
    $@55 (413)
        on left: 677
        on right: 679
    $@56 (414)
        on left: 678
        on right: 679
    $@57 (415)
        on left: 680
        on right: 682
    $@58 (416)
        on left: 681
        on right: 682
    $@59 (417)
        on left: 683
        on right: 685
    $@60 (418)
        on left: 684
        on right: 685
    $@61 (419)
        on left: 686
        on right: 688
    $@62 (420)
        on left: 687
        on right: 688
    type_declaration <pTypeDecl> (421)
        on left: 689 690 691
        on right: 118 239 240 248 286 425 430 484 485 491 501 502 538 618 619 632 651 655 661 665 672 679 690 691
    tuple_alias_declaration (422)
        on left: 695
        on right: 12
    $@63 (423)
        on left: 692
        on right: 695
    $@64 (424)
        on left: 693
        on right: 695
    $@65 (425)
        on left: 694
        on right: 695
    variant_alias_declaration (426)
        on left: 699
        on right: 11
    $@66 (427)
        on left: 696
        on right: 699
    $@67 (428)
        on left: 697
        on right: 699
    $@68 (429)
        on left: 698
        on right: 699
    bitfield_alias_declaration (430)
        on left: 703
        on right: 13
    $@69 (431)
        on left: 700
        on right: 703
    $@70 (432)
        on left: 701
        on right: 703
    $@71 (433)
        on left: 702
        on right: 703
    make_decl <pExpression> (434)
        on left: 704 705 706 707 708
        on right: 253 365
    make_struct_fields <pMakeStruct> (435)
        on left: 709 710 711 712 713 714 715 716
        on right: 335 336 711 712 715 716 717 718 719 720 721
    make_variant_dim <pExpression> (436)
        on left: 717
        on right: 735 754
    make_struct_single <pExpression> (437)
        on left: 718
        on right: 252 356
    make_struct_dim_list <pExpression> (438)
        on left: 719 720
        on right: 720 722
    make_struct_dim_decl <pExpression> (439)
        on left: 721 722
        on right: 723
    optional_make_struct_dim_decl <pExpression> (440)
        on left: 723 724
        on right: 729 732 744 748 751
    use_initializer <b> (441)
        on left: 725 726
        on right: 251 252 729 732 738 744 748 751
    make_struct_decl <pExpression> (442)
        on left: 729 732 735 738
        on right: 704
    $@72 (443)
        on left: 727
        on right: 729
    $@73 (444)
        on left: 728
        on right: 729
    $@74 (445)
        on left: 730
        on right: 732
    $@75 (446)
        on left: 731
        on right: 732
    $@76 (447)
        on left: 733
        on right: 735
    $@77 (448)
        on left: 734
        on right: 735
    $@78 (449)
        on left: 736
        on right: 738
    $@79 (450)
        on left: 737
        on right: 738
    make_map_tuple <pExpression> (451)
        on left: 739 740
        on right: 763 764 775
    make_tuple_call <pExpression> (452)
        on left: 741 744
        on right: 708
    $@80 (453)
        on left: 742
        on right: 744
    $@81 (454)
        on left: 743
        on right: 744
    make_dim_decl <pExpression> (455)
        on left: 745 748 751 754 755 758 759 762
        on right: 705
    $@82 (456)
        on left: 746
        on right: 748
    $@83 (457)
        on left: 747
        on right: 748
    $@84 (458)
        on left: 749
        on right: 751
    $@85 (459)
        on left: 750
        on right: 751
    $@86 (460)
        on left: 752
        on right: 754
    $@87 (461)
        on left: 753
        on right: 754
    $@88 (462)
        on left: 756
        on right: 758
    $@89 (463)
        on left: 757
        on right: 758
    $@90 (464)
        on left: 760
        on right: 762
    $@91 (465)
        on left: 761
        on right: 762
    expr_map_tuple_list <pExpression> (466)
        on left: 763 764
        on right: 238 764 765 766
    make_table_decl <pExpression> (467)
        on left: 765 766 767 768
        on right: 706
    array_comprehension_where <pExpression> (468)
        on left: 769 770
        on right: 773 774 775
    optional_comma <b> (469)
        on left: 771 772
        on right: 236 238 400 548 703 722 741 745 755 759 762 765 766
    array_comprehension <pExpression> (470)
        on left: 773 774 775
        on right: 707


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration "end of expression"
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  265 kwd_let: "let" .

    $default  reduce using rule 265 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   46 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  539 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  266 kwd_let: "var" .

    $default  reduce using rule 266 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  703 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  695 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  699 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  113 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration . "end of expression"

    "end of expression"  shift, and go to state 69


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  204 global_function_declaration: optional_annotation_list . "def" function_declaration
  548 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"
  563 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 70
    "class"   shift, and go to state 71
    "def"     shift, and go to state 72
    "enum"    shift, and go to state 73

    class_or_struct  go to state 74


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  528 global_let: kwd_let . optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 75

    $default  reduce using rule 522 (optional_shared)

    optional_shared  go to state 76


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 33

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 34

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 35

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 77

    $default  reduce using rule 92 (annotation_argument)


State 36

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 78

    $default  reduce using rule 36 (options_declaration)


State 38

   49 expect_error: "integer constant" .
   50             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 79

    $default  reduce using rule 49 (expect_error)


State 39

   46 expect_declaration: "expect" expect_list .
   48 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 80

    $default  reduce using rule 46 (expect_declaration)


State 40

   47 expect_list: expect_error .

    $default  reduce using rule 47 (expect_list)


State 41

   38 require_module_name: "name" .

    $default  reduce using rule 38 (require_module_name)


State 42

   39 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 81


State 43

   40 require_module_name: require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"
   42 require_module: require_module_name . is_public_module
   43               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 82
    "public"  shift, and go to state 83
    '/'       shift, and go to state 84
    '.'       shift, and go to state 85

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 86


State 44

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 45

  536 optional_public_or_private_alias: "public" .

    $default  reduce using rule 536 (optional_public_or_private_alias)


State 46

  535 optional_public_or_private_alias: "private" .

    $default  reduce using rule 535 (optional_public_or_private_alias)


State 47

  538 single_alias: optional_public_or_private_alias . "name" $@29 '=' type_declaration

    "name"  shift, and go to state 87


State 48

  539 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 88


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 75

    $default  reduce using rule 522 (optional_shared)

    optional_shared  go to state 89


State 52

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 90


State 53

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "name"  shift, and go to state 91


State 54

  699 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "name"  shift, and go to state 92


State 55

  243 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 93


State 56

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"

    "::"  shift, and go to state 94

    $default  reduce using rule 241 (name_in_namespace)


State 57

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 95


State 58

   99 annotation_declaration_name: "require" .

    $default  reduce using rule 99 (annotation_declaration_name)


State 59

  100 annotation_declaration_name: "private" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 60

  109 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 61

  104 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 62

  108 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 63

  101 annotation_declaration_basic: annotation_declaration_name .
  102                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 99

    $default  reduce using rule 101 (annotation_declaration_basic)


State 64

  103 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 103 (annotation_declaration)


State 65

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  110 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 110 (annotation_list)


State 66

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 103
    ']'  shift, and go to state 104


State 67

   98 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 98 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

    9 program: program options_declaration "end of expression" .

    $default  reduce using rule 9 (program)


State 70

  555 class_or_struct: "struct" .

    $default  reduce using rule 555 (class_or_struct)


State 71

  554 class_or_struct: "class" .

    $default  reduce using rule 554 (class_or_struct)


State 72

  204 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 105
    "private"  shift, and go to state 106

    $default  reduce using rule 205 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 107
    function_declaration                 go to state 108


State 73

  548 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 540 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 111


State 74

  563 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 556 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 114


State 75

  523 optional_shared: "shared" .

    $default  reduce using rule 523 (optional_shared)


State 76

  528 global_let: kwd_let optional_shared . optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 524 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 117


State 77

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 118
    "false"                    shift, and go to state 119
    "integer constant"         shift, and go to state 120
    "floating point constant"  shift, and go to state 121
    "name"                     shift, and go to state 122
    "start of the string"      shift, and go to state 123
    '('                        shift, and go to state 124

    string_constant  go to state 125


State 78

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 126


State 79

   50 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 127


State 80

   48 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 128


State 81

   39 require_module_name: '%' require_module_name .
   40                    | require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"

    '.'  shift, and go to state 85

    $default  reduce using rule 39 (require_module_name)


State 82

   43 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 129


State 83

   45 is_public_module: "public" .

    $default  reduce using rule 45 (is_public_module)


State 84

   41 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 130


State 85

   40 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 131


State 86

   42 require_module: require_module_name is_public_module .

    $default  reduce using rule 42 (require_module)


State 87

  538 single_alias: optional_public_or_private_alias "name" . $@29 '=' type_declaration

    $default  reduce using rule 537 ($@29)

    $@29  go to state 132


State 88

  539 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 539 (alias_declaration)


State 89

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 133
    "private"  shift, and go to state 134

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 135


State 90

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 700 ($@69)

    $@69  go to state 136


State 91

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 692 ($@63)

    $@63  go to state 137


State 92

  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 696 ($@66)

    $@66  go to state 138


State 93

  243 name_in_namespace: "::" "name" .

    $default  reduce using rule 243 (name_in_namespace)


State 94

  242 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 139


State 95

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 140

    reader_character_sequence  go to state 141


State 96

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  109                       | "|>" annotation_declaration .

    $default  reduce using rule 109 (annotation_declaration)


State 97

  104 annotation_declaration: '!' annotation_declaration .
  105                       | annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 104 (annotation_declaration)


State 98

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  108                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102
    ')'   shift, and go to state 142


State 99

  102 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 143


State 100

  105 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 101

  106 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  107 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  111 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 147
    name_in_namespace             go to state 67


State 104

  113 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 113 (optional_annotation_list)


State 105

  207 optional_public_or_private_function: "public" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 106

  206 optional_public_or_private_function: "private" .

    $default  reduce using rule 206 (optional_public_or_private_function)


State 107

  210 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 209 ($@2)

    $@2  go to state 148


State 108

  204 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 204 (global_function_declaration)


State 109

  542 optional_public_or_private_enum: "public" .

    $default  reduce using rule 542 (optional_public_or_private_enum)


State 110

  541 optional_public_or_private_enum: "private" .

    $default  reduce using rule 541 (optional_public_or_private_enum)


State 111

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 149

    enum_name  go to state 150


State 112

  558 optional_public_or_private_structure: "public" .

    $default  reduce using rule 558 (optional_public_or_private_structure)


State 113

  557 optional_public_or_private_structure: "private" .

    $default  reduce using rule 557 (optional_public_or_private_structure)


State 114

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 561 ($@32)

    $@32  go to state 151


State 115

  526 optional_public_or_private_variable: "public" .

    $default  reduce using rule 526 (optional_public_or_private_variable)


State 116

  525 optional_public_or_private_variable: "private" .

    $default  reduce using rule 525 (optional_public_or_private_variable)


State 117

  528 global_let: kwd_let optional_shared optional_public_or_private_variable . $@28 optional_field_annotation global_let_variable_declaration

    $default  reduce using rule 527 ($@28)

    $@28  go to state 152


State 118

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 119

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 120

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 121

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 122

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 123

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154

    character_sequence  go to state 155


State 124

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 123

    string_constant                 go to state 161
    annotation_argument_value       go to state 162
    annotation_argument_value_list  go to state 163


State 125

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 126

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 127

   50 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 50 (expect_error)


State 128

   48 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 48 (expect_list)


State 129

   43 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 83

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 164


State 130

   41 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 41 (require_module_name)


State 131

   40 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 40 (require_module_name)


State 132

  538 single_alias: optional_public_or_private_alias "name" $@29 . '=' type_declaration

    '='  shift, and go to state 165


State 133

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 134

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 135

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 136

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 . "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "begin of code block"  shift, and go to state 166


State 137

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 . "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "begin of code block"  shift, and go to state 167


State 138

  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 . "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "begin of code block"  shift, and go to state 168


State 139

  242 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 242 (name_in_namespace)


State 140

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 141

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 169

    $default  reduce using rule 35 (expr_reader)


State 142

  108 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 108 (annotation_declaration)


State 143

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 78
    ')'  shift, and go to state 170


State 144

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration .
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 145

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration .
  107                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 100
    "^^"  shift, and go to state 102

    $default  reduce using rule 106 (annotation_declaration)


State 146

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 100

    $default  reduce using rule 107 (annotation_declaration)


State 147

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 111 (annotation_list)


State 148

  210 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 201


State 149

  543 enum_name: "name" .

    $default  reduce using rule 543 (enum_name)


State 150

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    ':'  shift, and go to state 202

    $default  reduce using rule 544 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 203


State 151

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 204

    $default  reduce using rule 551 (optional_sealed)

    optional_sealed  go to state 205
    structure_name   go to state 206


State 152

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list     go to state 208
    optional_field_annotation  go to state 209


State 153

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 154

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 155

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 210
    STRING_CHARACTER_ESC  shift, and go to state 211
    "end of the string"   shift, and go to state 212


State 156

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 157

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 158

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 159

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 160

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 161

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 162

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 163

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 213
    ')'  shift, and go to state 214


State 164

   43 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 43 (require_module)


State 165

  538 single_alias: optional_public_or_private_alias "name" $@29 '=' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 263


State 166

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" . $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 701 ($@70)

    $@70  go to state 264


State 167

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" . $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 693 ($@64)

    $@64  go to state 265


State 168

  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" . $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 697 ($@67)

    $@67  go to state 266


State 169

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 170

  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 102 (annotation_declaration_basic)


State 171

  120 function_name: "operator" . '!'
  121              | "operator" . '~'
  122              | "operator" . "+="
  123              | "operator" . "-="
  124              | "operator" . "*="
  125              | "operator" . "/="
  126              | "operator" . "%="
  127              | "operator" . "&="
  128              | "operator" . "|="
  129              | "operator" . "^="
  130              | "operator" . "&&="
  131              | "operator" . "||="
  132              | "operator" . "^^="
  133              | "operator" . "&&"
  134              | "operator" . "||"
  135              | "operator" . "^^"
  136              | "operator" . '+'
  137              | "operator" . '-'
  138              | "operator" . '*'
  139              | "operator" . '/'
  140              | "operator" . '%'
  141              | "operator" . '<'
  142              | "operator" . '>'
  143              | "operator" . ".."
  144              | "operator" . "=="
  145              | "operator" . "!="
  146              | "operator" . "<="
  147              | "operator" . ">="
  148              | "operator" . '&'
  149              | "operator" . '|'
  150              | "operator" . '^'
  153              | "operator" . "++"
  154              | "operator" . "--"
  155              | "operator" . "<<"
  156              | "operator" . ">>"
  157              | "operator" . "<<="
  158              | "operator" . ">>="
  159              | "operator" . "<<<"
  160              | "operator" . ">>>"
  161              | "operator" . "<<<="
  162              | "operator" . ">>>="
  163              | "operator" . '[' ']'
  164              | "operator" . "?[" ']'
  165              | "operator" . '.'
  166              | "operator" . "?."
  167              | "operator" . '.' "name"
  168              | "operator" . '.' "name" ":="
  169              | "operator" . "?." "name"
  170              | "operator" . ":="
  171              | "operator" . "delete"
  172              | "operator" . "??"
  173              | "operator" . "is"
  174              | "operator" . "as"
  175              | "operator" . "is" "name"
  176              | "operator" . "as" "name"
  177              | "operator" . '?' "as"
  178              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 267
    "as"      shift, and go to state 268
    "delete"  shift, and go to state 269
    "+="      shift, and go to state 270
    "-="      shift, and go to state 271
    "/="      shift, and go to state 272
    "*="      shift, and go to state 273
    "%="      shift, and go to state 274
    "&="      shift, and go to state 275
    "|="      shift, and go to state 276
    "^="      shift, and go to state 277
    "<<"      shift, and go to state 278
    ">>"      shift, and go to state 279
    "++"      shift, and go to state 280
    "--"      shift, and go to state 281
    "<="      shift, and go to state 282
    "<<="     shift, and go to state 283
    ">>="     shift, and go to state 284
    ">="      shift, and go to state 285
    "=="      shift, and go to state 286
    "!="      shift, and go to state 287
    "??"      shift, and go to state 288
    "?."      shift, and go to state 289
    "?["      shift, and go to state 290
    ":="      shift, and go to state 291
    "<<<"     shift, and go to state 292
    ">>>"     shift, and go to state 293
    "<<<="    shift, and go to state 294
    ">>>="    shift, and go to state 295
    "&&"      shift, and go to state 296
    "||"      shift, and go to state 297
    "^^"      shift, and go to state 298
    "&&="     shift, and go to state 299
    "||="     shift, and go to state 300
    "^^="     shift, and go to state 301
    ".."      shift, and go to state 302
    '?'       shift, and go to state 303
    '|'       shift, and go to state 304
    '^'       shift, and go to state 305
    '&'       shift, and go to state 306
    '<'       shift, and go to state 307
    '>'       shift, and go to state 308
    '-'       shift, and go to state 309
    '+'       shift, and go to state 310
    '*'       shift, and go to state 311
    '/'       shift, and go to state 312
    '%'       shift, and go to state 313
    '~'       shift, and go to state 314
    '!'       shift, and go to state 315
    '.'       shift, and go to state 316
    '['       shift, and go to state 317


State 172

  179 function_name: "bool" .

    $default  reduce using rule 179 (function_name)


State 173

  180 function_name: "string" .

    $default  reduce using rule 180 (function_name)


State 174

  181 function_name: "int" .

    $default  reduce using rule 181 (function_name)


State 175

  182 function_name: "int2" .

    $default  reduce using rule 182 (function_name)


State 176

  183 function_name: "int3" .

    $default  reduce using rule 183 (function_name)


State 177

  184 function_name: "int4" .

    $default  reduce using rule 184 (function_name)


State 178

  185 function_name: "uint" .

    $default  reduce using rule 185 (function_name)


State 179

  186 function_name: "uint2" .

    $default  reduce using rule 186 (function_name)


State 180

  187 function_name: "uint3" .

    $default  reduce using rule 187 (function_name)


State 181

  188 function_name: "uint4" .

    $default  reduce using rule 188 (function_name)


State 182

  189 function_name: "float" .

    $default  reduce using rule 189 (function_name)


State 183

  190 function_name: "float2" .

    $default  reduce using rule 190 (function_name)


State 184

  191 function_name: "float3" .

    $default  reduce using rule 191 (function_name)


State 185

  192 function_name: "float4" .

    $default  reduce using rule 192 (function_name)


State 186

  193 function_name: "range" .

    $default  reduce using rule 193 (function_name)


State 187

  194 function_name: "urange" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "range64" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "urange64" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "int64" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "uint64" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "double" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "int8" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "uint8" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "int16" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "uint16" .

    $default  reduce using rule 203 (function_name)


State 197

  151 function_name: "++" . "operator"

    "operator"  shift, and go to state 318


State 198

  152 function_name: "--" . "operator"

    "operator"  shift, and go to state 319


State 199

  119 function_name: "name" .

    $default  reduce using rule 119 (function_name)


State 200

  208 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 321


State 201

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 323


State 202

  545 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 324
    "uint"    shift, and go to state 325
    "int64"   shift, and go to state 326
    "uint64"  shift, and go to state 327
    "int8"    shift, and go to state 328
    "uint8"   shift, and go to state 329
    "int16"   shift, and go to state 330
    "uint16"  shift, and go to state 331

    enum_basic_type_declaration  go to state 332


State 203

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "begin of code block"  shift, and go to state 333


State 204

  552 optional_sealed: "sealed" .

    $default  reduce using rule 552 (optional_sealed)


State 205

  553 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 334


State 206

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 562 ($@33)

    $@33  go to state 335


State 207

   96 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 336


State 208

   97 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  461 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 337

    $default  reduce using rule 461 (optional_field_annotation)


State 209

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 338

    global_let_variable_name_with_pos_list  go to state 339
    global_let_variable_declaration         go to state 340


State 210

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 211

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 212

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 213

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 123

    string_constant            go to state 161
    annotation_argument_value  go to state 341


State 214

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 215

  632 type_declaration_no_options_no_dim: "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 342


State 216

  655 type_declaration_no_options_no_dim: "array" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 343


State 217

  658 type_declaration_no_options_no_dim: "table" . '<' $@43 table_type_pair '>' $@44

    '<'  shift, and go to state 344


State 218

  633 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 345


State 219

  661 type_declaration_no_options_no_dim: "iterator" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 346


State 220

  651 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@39 type_declaration '>' $@40

    '<'  shift, and go to state 347


State 221

  569 basic_type_declaration: "bool" .

    $default  reduce using rule 569 (basic_type_declaration)


State 222

  589 basic_type_declaration: "void" .

    $default  reduce using rule 589 (basic_type_declaration)


State 223

  570 basic_type_declaration: "string" .

    $default  reduce using rule 570 (basic_type_declaration)


State 224

  605 auto_type_declaration: "auto" .
  606                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 348

    $default  reduce using rule 605 (auto_type_declaration)


State 225

  571 basic_type_declaration: "int" .

    $default  reduce using rule 571 (basic_type_declaration)


State 226

  575 basic_type_declaration: "int2" .

    $default  reduce using rule 575 (basic_type_declaration)


State 227

  576 basic_type_declaration: "int3" .

    $default  reduce using rule 576 (basic_type_declaration)


State 228

  577 basic_type_declaration: "int4" .

    $default  reduce using rule 577 (basic_type_declaration)


State 229

  578 basic_type_declaration: "uint" .

    $default  reduce using rule 578 (basic_type_declaration)


State 230

  595 basic_type_declaration: "bitfield" .
  615 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 349

    $default  reduce using rule 595 (basic_type_declaration)


State 231

  582 basic_type_declaration: "uint2" .

    $default  reduce using rule 582 (basic_type_declaration)


State 232

  583 basic_type_declaration: "uint3" .

    $default  reduce using rule 583 (basic_type_declaration)


State 233

  584 basic_type_declaration: "uint4" .

    $default  reduce using rule 584 (basic_type_declaration)


State 234

  585 basic_type_declaration: "float" .

    $default  reduce using rule 585 (basic_type_declaration)


State 235

  586 basic_type_declaration: "float2" .

    $default  reduce using rule 586 (basic_type_declaration)


State 236

  587 basic_type_declaration: "float3" .

    $default  reduce using rule 587 (basic_type_declaration)


State 237

  588 basic_type_declaration: "float4" .

    $default  reduce using rule 588 (basic_type_declaration)


State 238

  590 basic_type_declaration: "range" .

    $default  reduce using rule 590 (basic_type_declaration)


State 239

  591 basic_type_declaration: "urange" .

    $default  reduce using rule 591 (basic_type_declaration)


State 240

  592 basic_type_declaration: "range64" .

    $default  reduce using rule 592 (basic_type_declaration)


State 241

  593 basic_type_declaration: "urange64" .

    $default  reduce using rule 593 (basic_type_declaration)


State 242

  662 type_declaration_no_options_no_dim: "block" .
  665                                   | "block" . '<' $@47 type_declaration '>' $@48
  668                                   | "block" . '<' $@49 optional_function_argument_list optional_function_type '>' $@50

    '<'  shift, and go to state 350

    $default  reduce using rule 662 (type_declaration_no_options_no_dim)


State 243

  574 basic_type_declaration: "int64" .

    $default  reduce using rule 574 (basic_type_declaration)


State 244

  581 basic_type_declaration: "uint64" .

    $default  reduce using rule 581 (basic_type_declaration)


State 245

  594 basic_type_declaration: "double" .

    $default  reduce using rule 594 (basic_type_declaration)


State 246

  669 type_declaration_no_options_no_dim: "function" .
  672                                   | "function" . '<' $@51 type_declaration '>' $@52
  675                                   | "function" . '<' $@53 optional_function_argument_list optional_function_type '>' $@54

    '<'  shift, and go to state 351

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 247

  676 type_declaration_no_options_no_dim: "lambda" .
  679                                   | "lambda" . '<' $@55 type_declaration '>' $@56
  682                                   | "lambda" . '<' $@57 optional_function_argument_list optional_function_type '>' $@58

    '<'  shift, and go to state 352

    $default  reduce using rule 676 (type_declaration_no_options_no_dim)


State 248

  572 basic_type_declaration: "int8" .

    $default  reduce using rule 572 (basic_type_declaration)


State 249

  579 basic_type_declaration: "uint8" .

    $default  reduce using rule 579 (basic_type_declaration)


State 250

  573 basic_type_declaration: "int16" .

    $default  reduce using rule 573 (basic_type_declaration)


State 251

  580 basic_type_declaration: "uint16" .

    $default  reduce using rule 580 (basic_type_declaration)


State 252

  685 type_declaration_no_options_no_dim: "tuple" . '<' $@59 tuple_type_list '>' $@60

    '<'  shift, and go to state 353


State 253

  688 type_declaration_no_options_no_dim: "variant" . '<' $@61 variant_type_list '>' $@62

    '<'  shift, and go to state 354


State 254

  607 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 355


State 255

  634 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  636                                   | '$' . name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 356


State 256

  604 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 604 (structure_type_declaration)


State 257

  626 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 626 (type_declaration_no_options_no_dim)


State 258

  629 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 629 (type_declaration_no_options_no_dim)


State 259

  627 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 627 (type_declaration_no_options_no_dim)


State 260

  628 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 628 (type_declaration_no_options_no_dim)


State 261

  689 type_declaration: type_declaration_no_options .

    $default  reduce using rule 689 (type_declaration)


State 262

  624 type_declaration_no_options: type_declaration_no_options_no_dim .
  625                            | type_declaration_no_options_no_dim . dim_list
  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  638                                   | type_declaration_no_options_no_dim . "explicit"
  639                                   | type_declaration_no_options_no_dim . "const"
  640                                   | type_declaration_no_options_no_dim . '-' "const"
  641                                   | type_declaration_no_options_no_dim . '&'
  642                                   | type_declaration_no_options_no_dim . '-' '&'
  643                                   | type_declaration_no_options_no_dim . '#'
  644                                   | type_declaration_no_options_no_dim . "implicit"
  645                                   | type_declaration_no_options_no_dim . '-' '#'
  646                                   | type_declaration_no_options_no_dim . "==" "const"
  647                                   | type_declaration_no_options_no_dim . "==" '&'
  648                                   | type_declaration_no_options_no_dim . '?'
  652                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 357
    "implicit"  shift, and go to state 358
    "explicit"  shift, and go to state 359
    "=="        shift, and go to state 360
    "??"        shift, and go to state 361
    '?'         shift, and go to state 362
    '&'         shift, and go to state 363
    '-'         shift, and go to state 364
    '['         shift, and go to state 365
    '#'         shift, and go to state 366

    $default  reduce using rule 624 (type_declaration_no_options)

    dim_list  go to state 367


State 263

  538 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 538 (single_alias)


State 264

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 . bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 369

    $default  reduce using rule 610 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 370


State 265

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 . tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 488 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 371


State 266

  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 . variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 494 (variant_alias_type_list)

    variant_alias_type_list  go to state 372


State 267

  173 function_name: "operator" "is" .
  175              | "operator" "is" . "name"

    "name"  shift, and go to state 373

    $default  reduce using rule 173 (function_name)


State 268

  174 function_name: "operator" "as" .
  176              | "operator" "as" . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 174 (function_name)


State 269

  171 function_name: "operator" "delete" .

    $default  reduce using rule 171 (function_name)


State 270

  122 function_name: "operator" "+=" .

    $default  reduce using rule 122 (function_name)


State 271

  123 function_name: "operator" "-=" .

    $default  reduce using rule 123 (function_name)


State 272

  125 function_name: "operator" "/=" .

    $default  reduce using rule 125 (function_name)


State 273

  124 function_name: "operator" "*=" .

    $default  reduce using rule 124 (function_name)


State 274

  126 function_name: "operator" "%=" .

    $default  reduce using rule 126 (function_name)


State 275

  127 function_name: "operator" "&=" .

    $default  reduce using rule 127 (function_name)


State 276

  128 function_name: "operator" "|=" .

    $default  reduce using rule 128 (function_name)


State 277

  129 function_name: "operator" "^=" .

    $default  reduce using rule 129 (function_name)


State 278

  155 function_name: "operator" "<<" .

    $default  reduce using rule 155 (function_name)


State 279

  156 function_name: "operator" ">>" .

    $default  reduce using rule 156 (function_name)


State 280

  153 function_name: "operator" "++" .

    $default  reduce using rule 153 (function_name)


State 281

  154 function_name: "operator" "--" .

    $default  reduce using rule 154 (function_name)


State 282

  146 function_name: "operator" "<=" .

    $default  reduce using rule 146 (function_name)


State 283

  157 function_name: "operator" "<<=" .

    $default  reduce using rule 157 (function_name)


State 284

  158 function_name: "operator" ">>=" .

    $default  reduce using rule 158 (function_name)


State 285

  147 function_name: "operator" ">=" .

    $default  reduce using rule 147 (function_name)


State 286

  144 function_name: "operator" "==" .

    $default  reduce using rule 144 (function_name)


State 287

  145 function_name: "operator" "!=" .

    $default  reduce using rule 145 (function_name)


State 288

  172 function_name: "operator" "??" .

    $default  reduce using rule 172 (function_name)


State 289

  166 function_name: "operator" "?." .
  169              | "operator" "?." . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 166 (function_name)


State 290

  164 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 376


State 291

  170 function_name: "operator" ":=" .

    $default  reduce using rule 170 (function_name)


State 292

  159 function_name: "operator" "<<<" .

    $default  reduce using rule 159 (function_name)


State 293

  160 function_name: "operator" ">>>" .

    $default  reduce using rule 160 (function_name)


State 294

  161 function_name: "operator" "<<<=" .

    $default  reduce using rule 161 (function_name)


State 295

  162 function_name: "operator" ">>>=" .

    $default  reduce using rule 162 (function_name)


State 296

  133 function_name: "operator" "&&" .

    $default  reduce using rule 133 (function_name)


State 297

  134 function_name: "operator" "||" .

    $default  reduce using rule 134 (function_name)


State 298

  135 function_name: "operator" "^^" .

    $default  reduce using rule 135 (function_name)


State 299

  130 function_name: "operator" "&&=" .

    $default  reduce using rule 130 (function_name)


State 300

  131 function_name: "operator" "||=" .

    $default  reduce using rule 131 (function_name)


State 301

  132 function_name: "operator" "^^=" .

    $default  reduce using rule 132 (function_name)


State 302

  143 function_name: "operator" ".." .

    $default  reduce using rule 143 (function_name)


State 303

  177 function_name: "operator" '?' . "as"
  178              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 377


State 304

  149 function_name: "operator" '|' .

    $default  reduce using rule 149 (function_name)


State 305

  150 function_name: "operator" '^' .

    $default  reduce using rule 150 (function_name)


State 306

  148 function_name: "operator" '&' .

    $default  reduce using rule 148 (function_name)


State 307

  141 function_name: "operator" '<' .

    $default  reduce using rule 141 (function_name)


State 308

  142 function_name: "operator" '>' .

    $default  reduce using rule 142 (function_name)


State 309

  137 function_name: "operator" '-' .

    $default  reduce using rule 137 (function_name)


State 310

  136 function_name: "operator" '+' .

    $default  reduce using rule 136 (function_name)


State 311

  138 function_name: "operator" '*' .

    $default  reduce using rule 138 (function_name)


State 312

  139 function_name: "operator" '/' .

    $default  reduce using rule 139 (function_name)


State 313

  140 function_name: "operator" '%' .

    $default  reduce using rule 140 (function_name)


State 314

  121 function_name: "operator" '~' .

    $default  reduce using rule 121 (function_name)


State 315

  120 function_name: "operator" '!' .

    $default  reduce using rule 120 (function_name)


State 316

  165 function_name: "operator" '.' .
  167              | "operator" '.' . "name"
  168              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 378

    $default  reduce using rule 165 (function_name)


State 317

  163 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 379


State 318

  151 function_name: "++" "operator" .

    $default  reduce using rule 151 (function_name)


State 319

  152 function_name: "--" "operator" .

    $default  reduce using rule 152 (function_name)


State 320

  115 optional_function_argument_list: '(' . ')'
  116                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 380
    ')'   shift, and go to state 381
    '@'   shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list         go to state 208
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 383
    function_argument_list         go to state 384


State 321

  208 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 386


State 322

  211 expression_block: "begin of code block" . expressions "end of code block"
  212                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 387


State 323

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 210 (function_declaration)


State 324

  596 enum_basic_type_declaration: "int" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 325

  599 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 599 (enum_basic_type_declaration)


State 326

  602 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 602 (enum_basic_type_declaration)


State 327

  603 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 603 (enum_basic_type_declaration)


State 328

  597 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 597 (enum_basic_type_declaration)


State 329

  600 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 600 (enum_basic_type_declaration)


State 330

  598 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 598 (enum_basic_type_declaration)


State 331

  601 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 601 (enum_basic_type_declaration)


State 332

  545 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 545 (optional_enum_basic_type_declaration)


State 333

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@30 enum_list optional_comma $@31 "end of code block"

    $default  reduce using rule 546 ($@30)

    $@30  go to state 388


State 334

  553 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 389

    $default  reduce using rule 549 (optional_structure_parent)

    optional_structure_parent  go to state 390


State 335

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 391

    $default  reduce using rule 559 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 392


State 336

   96 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 96 (metadata_argument_list)


State 337

   97 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 393


State 338

  514 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 514 (global_let_variable_name_with_pos_list)


State 339

  515 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  519 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  520                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  521                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 394
    ':'  shift, and go to state 395
    '&'  shift, and go to state 396

    $default  reduce using rule 507 (optional_ref)

    optional_ref  go to state 397


State 340

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 528 (global_let)


State 341

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 342

  632 type_declaration_no_options_no_dim: "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 630 ($@36)

    $@36  go to state 398


State 343

  655 type_declaration_no_options_no_dim: "array" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 653 ($@41)

    $@41  go to state 399


State 344

  658 type_declaration_no_options_no_dim: "table" '<' . $@43 table_type_pair '>' $@44

    $default  reduce using rule 656 ($@43)

    $@43  go to state 400


State 345

  633 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 466
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 346

  661 type_declaration_no_options_no_dim: "iterator" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 659 ($@45)

    $@45  go to state 475


State 347

  651 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@39 type_declaration '>' $@40

    $default  reduce using rule 649 ($@39)

    $@39  go to state 476


State 348

  606 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 477


State 349

  615 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 613 ($@34)

    $@34  go to state 478


State 350

  665 type_declaration_no_options_no_dim: "block" '<' . $@47 type_declaration '>' $@48
  668                                   | "block" '<' . $@49 optional_function_argument_list optional_function_type '>' $@50

    ':'       reduce using rule 666 ($@49)
    '>'       reduce using rule 666 ($@49)
    '('       reduce using rule 666 ($@49)
    $default  reduce using rule 663 ($@47)

    $@47  go to state 479
    $@49  go to state 480


State 351

  672 type_declaration_no_options_no_dim: "function" '<' . $@51 type_declaration '>' $@52
  675                                   | "function" '<' . $@53 optional_function_argument_list optional_function_type '>' $@54

    ':'       reduce using rule 673 ($@53)
    '>'       reduce using rule 673 ($@53)
    '('       reduce using rule 673 ($@53)
    $default  reduce using rule 670 ($@51)

    $@51  go to state 481
    $@53  go to state 482


State 352

  679 type_declaration_no_options_no_dim: "lambda" '<' . $@55 type_declaration '>' $@56
  682                                   | "lambda" '<' . $@57 optional_function_argument_list optional_function_type '>' $@58

    ':'       reduce using rule 680 ($@57)
    '>'       reduce using rule 680 ($@57)
    '('       reduce using rule 680 ($@57)
    $default  reduce using rule 677 ($@55)

    $@55  go to state 483
    $@57  go to state 484


State 353

  685 type_declaration_no_options_no_dim: "tuple" '<' . $@59 tuple_type_list '>' $@60

    $default  reduce using rule 683 ($@59)

    $@59  go to state 485


State 354

  688 type_declaration_no_options_no_dim: "variant" '<' . $@61 variant_type_list '>' $@62

    $default  reduce using rule 686 ($@61)

    $@61  go to state 486


State 355

  607 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 487
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 356

  634 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  636                                   | '$' name_in_namespace . '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 488
    '('  shift, and go to state 489


State 357

  639 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 639 (type_declaration_no_options_no_dim)


State 358

  644 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 644 (type_declaration_no_options_no_dim)


State 359

  638 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 638 (type_declaration_no_options_no_dim)


State 360

  646 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  647                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 490
    '&'      shift, and go to state 491


State 361

  652 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 652 (type_declaration_no_options_no_dim)


State 362

  648 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 648 (type_declaration_no_options_no_dim)


State 363

  641 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 641 (type_declaration_no_options_no_dim)


State 364

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  640                                   | type_declaration_no_options_no_dim '-' . "const"
  642                                   | type_declaration_no_options_no_dim '-' . '&'
  645                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 492
    '&'      shift, and go to state 493
    '['      shift, and go to state 494
    '#'      shift, and go to state 495


State 365

  620 dim_list: '[' . expr ']'
  621         | '[' . ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    ']'                               shift, and go to state 496
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 497
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 366

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 643 (type_declaration_no_options_no_dim)


State 367

  622 dim_list: dim_list . '[' expr ']'
  623         | dim_list . '[' ']'
  625 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 498

    $default  reduce using rule 625 (type_declaration_no_options)


State 368

  690 type_declaration: type_declaration '|' . type_declaration_no_options
  691                 | type_declaration '|' . '#'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255
    '#'          shift, and go to state 499

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 500
    type_declaration_no_options_no_dim  go to state 262


State 369

  611 bitfield_alias_bits: "name" .

    $default  reduce using rule 611 (bitfield_alias_bits)


State 370

  612 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits . optional_comma $@71 "end of code block"

    ','  shift, and go to state 501

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 502


State 371

  489 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  490                      | tuple_alias_type_list . tuple_type c_or_s
  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list . $@65 "end of code block"

    "type"               shift, and go to state 215
    "array"              shift, and go to state 216
    "table"              shift, and go to state 217
    "typedecl"           shift, and go to state 218
    "iterator"           shift, and go to state 219
    "smart_ptr"          shift, and go to state 220
    "bool"               shift, and go to state 221
    "void"               shift, and go to state 222
    "string"             shift, and go to state 223
    "auto"               shift, and go to state 224
    "int"                shift, and go to state 225
    "int2"               shift, and go to state 226
    "int3"               shift, and go to state 227
    "int4"               shift, and go to state 228
    "uint"               shift, and go to state 229
    "bitfield"           shift, and go to state 230
    "uint2"              shift, and go to state 231
    "uint3"              shift, and go to state 232
    "uint4"              shift, and go to state 233
    "float"              shift, and go to state 234
    "float2"             shift, and go to state 235
    "float3"             shift, and go to state 236
    "float4"             shift, and go to state 237
    "range"              shift, and go to state 238
    "urange"             shift, and go to state 239
    "range64"            shift, and go to state 240
    "urange64"           shift, and go to state 241
    "block"              shift, and go to state 242
    "int64"              shift, and go to state 243
    "uint64"             shift, and go to state 244
    "double"             shift, and go to state 245
    "function"           shift, and go to state 246
    "lambda"             shift, and go to state 247
    "int8"               shift, and go to state 248
    "uint8"              shift, and go to state 249
    "int16"              shift, and go to state 250
    "uint16"             shift, and go to state 251
    "tuple"              shift, and go to state 252
    "variant"            shift, and go to state 253
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 254
    "name"               shift, and go to state 503
    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505
    '$'                  shift, and go to state 255

    $default  reduce using rule 694 ($@65)

    name_in_namespace                   go to state 256
    tuple_type                          go to state 506
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    c_or_s                              go to state 507
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 508
    $@65                                go to state 509


State 372

  495 variant_alias_type_list: variant_alias_type_list . c_or_s
  496                        | variant_alias_type_list . variant_type c_or_s
  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list . $@68 "end of code block"

    "name"               shift, and go to state 510
    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505

    $default  reduce using rule 698 ($@68)

    variant_type  go to state 511
    c_or_s        go to state 512
    $@68          go to state 513


State 373

  175 function_name: "operator" "is" "name" .

    $default  reduce using rule 175 (function_name)


State 374

  176 function_name: "operator" "as" "name" .

    $default  reduce using rule 176 (function_name)


State 375

  169 function_name: "operator" "?." "name" .

    $default  reduce using rule 169 (function_name)


State 376

  164 function_name: "operator" "?[" ']' .

    $default  reduce using rule 164 (function_name)


State 377

  177 function_name: "operator" '?' "as" .
  178              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 514

    $default  reduce using rule 177 (function_name)


State 378

  167 function_name: "operator" '.' "name" .
  168              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 515

    $default  reduce using rule 167 (function_name)


State 379

  163 function_name: "operator" '[' ']' .

    $default  reduce using rule 163 (function_name)


State 380

  481 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 516


State 381

  115 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 115 (optional_function_argument_list)


State 382

  480 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 517
    "var"  shift, and go to state 518

    $default  reduce using rule 264 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 519


State 383

  482 function_argument_list: function_argument_declaration .

    $default  reduce using rule 482 (function_argument_list)


State 384

  116 optional_function_argument_list: '(' function_argument_list . ')'
  483 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 520
    ')'                  shift, and go to state 521


State 385

  118 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 522


State 386

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 208 (function_declaration_header)


State 387

  211 expression_block: "begin of code block" expressions . "end of code block"
  212                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 523
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 524
    "if"                              shift, and go to state 525
    "static_if"                       shift, and go to state 526
    "for"                             shift, and go to state 527
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 528
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 529
    "try"                             shift, and go to state 530
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 531
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 532
    "assume"                          shift, and go to state 533
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 534
    "pass"                            shift, and go to state 535
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 536
    "goto"                            shift, and go to state 537
    "unsafe"                          shift, and go to state 538
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 539
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    "end of code block"               shift, and go to state 540
    "end of expression"               shift, and go to state 541
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_label         go to state 542
    expression_goto          go to state 543
    if_or_static_if          go to state 544
    expression_if_one_liner  go to state 545
    expression_if_then_else  go to state 546
    expression_for_loop      go to state 547
    expression_unsafe        go to state 548
    expression_while_loop    go to state 549
    expression_with          go to state 550
    expression_with_alias    go to state 551
    expr_call_pipe           go to state 452
    expression_any           go to state 552
    name_in_namespace        go to state 453
    expression_delete        go to state 553
    expr_new                 go to state 454
    expression_break         go to state 554
    expression_continue      go to state 555
    expression_return        go to state 556
    expression_yield         go to state 557
    expression_try_catch     go to state 558
    kwd_let                  go to state 559
    expression_let           go to state 560
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_assign              go to state 561
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 562
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 388

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 . enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 563

    $default  reduce using rule 531 (enum_list)

    enum_expression  go to state 564
    enum_list        go to state 565


State 389

  550 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 566


State 390

  553 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 553 (structure_name)


State 391

  560 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 473 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 567


State 392

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list .

    $default  reduce using rule 563 (structure_declaration)


State 393

   97 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 394

  515 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 568


State 395

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  520                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 569
    type_declaration_no_options_no_dim  go to state 262


State 396

  508 optional_ref: '&' .

    $default  reduce using rule 508 (optional_ref)


State 397

  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 570
    ":="  shift, and go to state 571
    '='   shift, and go to state 572

    copy_or_move_or_clone  go to state 573


State 398

  632 type_declaration_no_options_no_dim: "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 574


State 399

  655 type_declaration_no_options_no_dim: "array" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 575


State 400

  658 type_declaration_no_options_no_dim: "table" '<' $@43 . table_type_pair '>' $@44

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    table_type_pair                     go to state 576
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 577


State 401

  729 make_struct_decl: "struct" . '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 578


State 402

  732 make_struct_decl: "class" . '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 579


State 403

  366 expr: "true" .

    $default  reduce using rule 366 (expr)


State 404

  367 expr: "false" .

    $default  reduce using rule 367 (expr)


State 405

  249 expr_new: "new" . structure_type_declaration
  250         | "new" . structure_type_declaration '(' optional_expr_list ')'
  251         | "new" . new_type_declaration '(' use_initializer ')'
  252         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  253         | "new" . make_decl

    "struct"               shift, and go to state 401
    "class"                shift, and go to state 402
    "array"                shift, and go to state 408
    "table"                shift, and go to state 410
    "fixed_array"          shift, and go to state 417
    "default"              shift, and go to state 418
    "tuple"                shift, and go to state 420
    "variant"              shift, and go to state 421
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 440
    '<'                    shift, and go to state 580
    '['                    shift, and go to state 446

    name_in_namespace           go to state 256
    new_type_declaration        go to state 581
    structure_type_declaration  go to state 582
    make_decl                   go to state 583
    make_struct_decl            go to state 470
    make_tuple_call             go to state 471
    make_dim_decl               go to state 472
    make_table_decl             go to state 473
    array_comprehension         go to state 474


State 406

  287 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  288               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  289               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 584


State 407

  286 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 585


State 408

  748 make_dim_decl: "array" . "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'
  751              | "array" . "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'
  754              | "array" . "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  755              | "array" . '(' expr_list optional_comma ')'
  758              | "array" . '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "struct"   shift, and go to state 586
    "tuple"    shift, and go to state 587
    "variant"  shift, and go to state 588
    '<'        shift, and go to state 589
    '('        shift, and go to state 590


State 409

  360 expr: "null" .

    $default  reduce using rule 360 (expr)


State 410

  766 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  767                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  768                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 591
    '('  shift, and go to state 592


State 411

  410 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 593


State 412

  277 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 594


State 413

  280 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 595


State 414

  411 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 596


State 415

  283 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 597


State 416

  443 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 598


State 417

  759 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  762              | "fixed_array" . '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 599
    '('  shift, and go to state 600


State 418

  738 make_struct_decl: "default" . '<' $@78 type_declaration_no_options '>' $@79 use_initializer

    '<'  shift, and go to state 601


State 419

  595 basic_type_declaration: "bitfield" .

    $default  reduce using rule 595 (basic_type_declaration)


State 420

  741 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  744                | "tuple" . '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 602
    '('  shift, and go to state 603


State 421

  735 make_struct_decl: "variant" . '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    '<'  shift, and go to state 604


State 422

  412 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" . '<' type_declaration_no_options '>' optional_capture_list expression_block

    '<'  shift, and go to state 605


State 423

  396 expr: "++" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 606
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 424

  397 expr: "--" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 607
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 425

  444 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 608


State 426

  445 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 609


State 427

  446 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 610


State 428

  447 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 611


State 429

  448 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 612


State 430

  450 expr_mtag: "$c" . '(' expr ')' '(' ')'
  451          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 613


State 431

  449 expr_mtag: "..." .

    $default  reduce using rule 449 (expr_mtag)


State 432

  309 expr_numeric_const: "integer constant" .

    $default  reduce using rule 309 (expr_numeric_const)


State 433

  311 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 434

  310 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 310 (expr_numeric_const)


State 435

  312 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 436

  313 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 437

  314 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 438

  315 expr_numeric_const: "double constant" .

    $default  reduce using rule 315 (expr_numeric_const)


State 439

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 614


State 440

  765 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  775 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 615
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 616
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 617
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    expr_map_tuple_list     go to state 618
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 441

  373 expr: '-' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 619
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 442

  372 expr: '+' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 620
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 443

  409 expr: '*' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 621
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 444

  371 expr: '~' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 622
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 445

  370 expr: '!' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 623
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 446

  745 make_dim_decl: '[' . expr_list optional_comma ']'
  773 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  774                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 624
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 625
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 626
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 447

  400 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 628
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 448

  295 block_or_lambda: '$' .

    $default  reduce using rule 295 (block_or_lambda)


State 449

  296 block_or_lambda: '@' .
  297                | '@' . '@'
  341 func_addr_expr: '@' . '@' func_addr_name
  344               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  459 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 629

    $default  reduce using rule 296 (block_or_lambda)


State 450

  364 expr: string_builder .

    $default  reduce using rule 364 (expr)


State 451

  363 expr: expr_reader .

    $default  reduce using rule 363 (expr)


State 452

  442 expr: expr_call_pipe .

    $default  reduce using rule 442 (expr)


State 453

  335 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  336                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace . '(' ')'
  356          | name_in_namespace . '(' make_struct_single ')'
  357          | name_in_namespace . '(' expr_list ')'
  361 expr: name_in_namespace .

    '('  shift, and go to state 630

    $default  reduce using rule 361 (expr)


State 454

  435 expr: expr_new .

    $default  reduce using rule 435 (expr)


State 455

  434 expr: expr_cast .

    $default  reduce using rule 434 (expr)


State 456

  433 expr: expr_type_decl .

    $default  reduce using rule 433 (expr)


State 457

  432 expr: expr_type_info .

    $default  reduce using rule 432 (expr)


State 458

  306 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 631


State 459

  438 expr: expr_full_block .

    $default  reduce using rule 438 (expr)


State 460

  362 expr: expr_numeric_const .

    $default  reduce using rule 362 (expr)


State 461

  437 expr: expr_named_call .

    $default  reduce using rule 437 (expr)


State 462

  436 expr: expr_method_call .

    $default  reduce using rule 436 (expr)


State 463

  407 expr: func_addr_expr .

    $default  reduce using rule 407 (expr)


State 464

  368 expr: expr_field .

    $default  reduce using rule 368 (expr)


State 465

  213 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  408 expr: expr_call .

    "begin of code block"  shift, and go to state 632
    '$'                    shift, and go to state 448
    '@'                    shift, and go to state 633

    $default  reduce using rule 408 (expr)

    block_or_lambda                go to state 634
    expr_full_block_assumed_piped  go to state 635


State 466

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  633 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 671


State 467

  369 expr: expr_mtag .

    $default  reduce using rule 369 (expr)


State 468

  358 expr_call: basic_type_declaration . '(' ')'
  359          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 672


State 469

  365 expr: make_decl .

    $default  reduce using rule 365 (expr)


State 470

  704 make_decl: make_struct_decl .

    $default  reduce using rule 704 (make_decl)


State 471

  708 make_decl: make_tuple_call .

    $default  reduce using rule 708 (make_decl)


State 472

  705 make_decl: make_dim_decl .

    $default  reduce using rule 705 (make_decl)


State 473

  706 make_decl: make_table_decl .

    $default  reduce using rule 706 (make_decl)


State 474

  707 make_decl: array_comprehension .

    $default  reduce using rule 707 (make_decl)


State 475

  661 type_declaration_no_options_no_dim: "iterator" '<' $@45 . type_declaration '>' $@46

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 673


State 476

  651 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 . type_declaration '>' $@40

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 674


State 477

  606 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 675


State 478

  615 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 676

    bitfield_bits  go to state 677


State 479

  665 type_declaration_no_options_no_dim: "block" '<' $@47 . type_declaration '>' $@48

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 678


State 480

  668 type_declaration_no_options_no_dim: "block" '<' $@49 . optional_function_argument_list optional_function_type '>' $@50

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 679


State 481

  672 type_declaration_no_options_no_dim: "function" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 680


State 482

  675 type_declaration_no_options_no_dim: "function" '<' $@53 . optional_function_argument_list optional_function_type '>' $@54

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 681


State 483

  679 type_declaration_no_options_no_dim: "lambda" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 682


State 484

  682 type_declaration_no_options_no_dim: "lambda" '<' $@57 . optional_function_argument_list optional_function_type '>' $@58

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 683


State 485

  685 type_declaration_no_options_no_dim: "tuple" '<' $@59 . tuple_type_list '>' $@60

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 503
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    tuple_type                          go to state 684
    tuple_type_list                     go to state 685
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 508


State 486

  688 type_declaration_no_options_no_dim: "variant" '<' $@61 . variant_type_list '>' $@62

    "name"  shift, and go to state 510

    variant_type       go to state 686
    variant_type_list  go to state 687


State 487

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  607 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 688


State 488

  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 635 ($@38)

    $@38  go to state 689


State 489

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 690
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 691
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 490

  646 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 646 (type_declaration_no_options_no_dim)


State 491

  647 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 647 (type_declaration_no_options_no_dim)


State 492

  640 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 640 (type_declaration_no_options_no_dim)


State 493

  642 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 642 (type_declaration_no_options_no_dim)


State 494

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 692


State 495

  645 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 645 (type_declaration_no_options_no_dim)


State 496

  621 dim_list: '[' ']' .

    $default  reduce using rule 621 (dim_list)


State 497

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  620 dim_list: '[' expr . ']'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 693


State 498

  622 dim_list: dim_list '[' . expr ']'
  623         | dim_list '[' . ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    ']'                               shift, and go to state 694
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 695
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 499

  691 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 691 (type_declaration)


State 500

  690 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 690 (type_declaration)


State 501

  612 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  772 optional_comma: ',' .

    "name"  shift, and go to state 696

    $default  reduce using rule 772 (optional_comma)


State 502

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma . $@71 "end of code block"

    $default  reduce using rule 702 ($@71)

    $@71  go to state 697


State 503

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"
  485 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 94
    ':'   shift, and go to state 698

    $default  reduce using rule 241 (name_in_namespace)


State 504

  617 c_or_s: "end of expression" .

    $default  reduce using rule 617 (c_or_s)


State 505

  616 c_or_s: ',' .

    $default  reduce using rule 616 (c_or_s)


State 506

  490 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505

    c_or_s  go to state 699


State 507

  489 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 489 (tuple_alias_type_list)


State 508

  484 tuple_type: type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 484 (tuple_type)


State 509

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 . "end of code block"

    "end of code block"  shift, and go to state 700


State 510

  491 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 701


State 511

  496 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505

    c_or_s  go to state 702


State 512

  495 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 495 (variant_alias_type_list)


State 513

  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 . "end of code block"

    "end of code block"  shift, and go to state 703


State 514

  178 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 178 (function_name)


State 515

  168 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 168 (function_name)


State 516

  481 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 704
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 517

  262 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 262 (kwd_let_var_or_nothing)


State 518

  263 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 263 (kwd_let_var_or_nothing)


State 519

  480 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_declaration         go to state 707
    variable_name_with_pos_list  go to state 708


State 520

  483 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 380
    '@'   shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list         go to state 208
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 709


State 521

  116 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 522

  118 optional_function_type: ':' type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 118 (optional_function_type)


State 523

  234 expressions: expressions error .

    $default  reduce using rule 234 (expressions)


State 524

   72 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 710


State 525

   59 if_or_static_if: "if" .

    $default  reduce using rule 59 (if_or_static_if)


State 526

   60 if_or_static_if: "static_if" .

    $default  reduce using rule 60 (if_or_static_if)


State 527

   70 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 711


State 528

  256 expression_return: "return" .
  257                  | "return" . expr
  258                  | "return" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "<-"                              shift, and go to state 712
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 256 (expression_return)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 713
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 529

  254 expression_break: "break" .

    $default  reduce using rule 254 (expression_break)


State 530

  261 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 714


State 531

  244 expression_delete: "delete" . expr
  245                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "explicit"                        shift, and go to state 715
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 716
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 532

   73 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 717


State 533

   74 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 718


State 534

  255 expression_continue: "continue" .

    $default  reduce using rule 255 (expression_continue)


State 535

  231 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 719


State 536

   51 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 720


State 537

   52 expression_goto: "goto" . "label" "integer constant"
   53                | "goto" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 721
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 722
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 538

   71 expression_unsafe: "unsafe" . expression_block
  443 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 322
    '('                    shift, and go to state 598

    expression_block  go to state 723


State 539

  259 expression_yield: "yield" . expr
  260                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "<-"                              shift, and go to state 724
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 725
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 540

  211 expression_block: "begin of code block" expressions "end of code block" .
  212                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 726

    $default  reduce using rule 211 (expression_block)


State 541

  214 expression_any: "end of expression" .

    $default  reduce using rule 214 (expression_any)


State 542

  229 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 727


State 543

  230 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 728


State 544

   68 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 729


State 545

   69 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 730


State 546

  227 expression_any: expression_if_then_else .

    $default  reduce using rule 227 (expression_any)


State 547

  222 expression_any: expression_for_loop .

    $default  reduce using rule 222 (expression_any)


State 548

  219 expression_any: expression_unsafe .

    $default  reduce using rule 219 (expression_any)


State 549

  218 expression_any: expression_while_loop .

    $default  reduce using rule 218 (expression_any)


State 550

  220 expression_any: expression_with .

    $default  reduce using rule 220 (expression_any)


State 551

  221 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 731


State 552

  233 expressions: expressions expression_any .

    $default  reduce using rule 233 (expressions)


State 553

  216 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 732


State 554

   66 expression_if_one_liner: expression_break .
  223 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 733

    $default  reduce using rule 66 (expression_if_one_liner)


State 555

   67 expression_if_one_liner: expression_continue .
  224 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 734

    $default  reduce using rule 67 (expression_if_one_liner)


State 556

   64 expression_if_one_liner: expression_return .
  225 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 735

    $default  reduce using rule 64 (expression_if_one_liner)


State 557

   65 expression_if_one_liner: expression_yield .
  226 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 736

    $default  reduce using rule 65 (expression_if_one_liner)


State 558

  228 expression_any: expression_try_catch .

    $default  reduce using rule 228 (expression_any)


State 559

  273 expression_let: kwd_let . optional_in_scope let_variable_declaration
  274               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 737

    $default  reduce using rule 268 (optional_in_scope)

    optional_in_scope  go to state 738


State 560

  217 expression_any: expression_let .

    $default  reduce using rule 217 (expression_any)


State 561

  215 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 739


State 562

   63 expression_if_one_liner: expr .
  316 expr_assign: expr .
  317            | expr . '=' expr
  318            | expr . "<-" expr
  319            | expr . ":=" expr
  320            | expr . "&=" expr
  321            | expr . "|=" expr
  322            | expr . "^=" expr
  323            | expr . "&&=" expr
  324            | expr . "||=" expr
  325            | expr . "^^=" expr
  326            | expr . "+=" expr
  327            | expr . "-=" expr
  328            | expr . "*=" expr
  329            | expr . "/=" expr
  330            | expr . "%=" expr
  331            | expr . "<<=" expr
  332            | expr . ">>=" expr
  333            | expr . "<<<=" expr
  334            | expr . ">>>=" expr
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 636
    "as"    shift, and go to state 637
    "+="    shift, and go to state 740
    "-="    shift, and go to state 741
    "/="    shift, and go to state 742
    "*="    shift, and go to state 743
    "%="    shift, and go to state 744
    "&="    shift, and go to state 745
    "|="    shift, and go to state 746
    "^="    shift, and go to state 747
    "<<"    shift, and go to state 638
    ">>"    shift, and go to state 639
    "++"    shift, and go to state 640
    "--"    shift, and go to state 641
    "<="    shift, and go to state 642
    "<<="   shift, and go to state 748
    ">>="   shift, and go to state 749
    ">="    shift, and go to state 643
    "=="    shift, and go to state 644
    "!="    shift, and go to state 645
    "->"    shift, and go to state 646
    "<-"    shift, and go to state 750
    "??"    shift, and go to state 647
    "?."    shift, and go to state 648
    "?["    shift, and go to state 649
    "<|"    shift, and go to state 650
    "|>"    shift, and go to state 651
    ":="    shift, and go to state 751
    "<<<"   shift, and go to state 652
    ">>>"   shift, and go to state 653
    "<<<="  shift, and go to state 752
    ">>>="  shift, and go to state 753
    "&&"    shift, and go to state 654
    "||"    shift, and go to state 655
    "^^"    shift, and go to state 656
    "&&="   shift, and go to state 754
    "||="   shift, and go to state 755
    "^^="   shift, and go to state 756
    ".."    shift, and go to state 657
    '='     shift, and go to state 757
    '?'     shift, and go to state 658
    '|'     shift, and go to state 659
    '^'     shift, and go to state 660
    '&'     shift, and go to state 661
    '<'     shift, and go to state 662
    '>'     shift, and go to state 663
    '-'     shift, and go to state 664
    '+'     shift, and go to state 665
    '*'     shift, and go to state 666
    '/'     shift, and go to state 667
    '%'     shift, and go to state 668
    '.'     shift, and go to state 669
    '['     shift, and go to state 670

    "end of expression"  reduce using rule 316 (expr_assign)
    $default             reduce using rule 63 (expression_if_one_liner)


State 563

  529 enum_expression: "name" .
  530                | "name" . '=' expr

    '='  shift, and go to state 758

    $default  reduce using rule 529 (enum_expression)


State 564

  532 enum_list: enum_expression .

    $default  reduce using rule 532 (enum_list)


State 565

  533 enum_list: enum_list . ',' enum_expression
  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list . optional_comma $@31 "end of code block"

    ','  shift, and go to state 759

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 760


State 566

  550 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 550 (optional_structure_parent)


State 567

  475 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  477                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  560 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 761
    '['                  shift, and go to state 15

    "def"     reduce using rule 112 (optional_annotation_list)
    $default  reduce using rule 474 ($@25)

    optional_annotation_list  go to state 762
    $@25                      go to state 763


State 568

  515 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 515 (global_let_variable_name_with_pos_list)


State 569

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  520                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 570
    ":="                 shift, and go to state 571
    "end of expression"  shift, and go to state 764
    '='                  shift, and go to state 572

    copy_or_move_or_clone  go to state 765


State 570

  505 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 505 (copy_or_move_or_clone)


State 571

  506 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 506 (copy_or_move_or_clone)


State 572

  504 copy_or_move_or_clone: '=' .

    $default  reduce using rule 504 (copy_or_move_or_clone)


State 573

  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 766
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 574

  632 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration . '>' $@37
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 767


State 575

  655 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration . '>' $@42
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 768


State 576

  658 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair . '>' $@44

    '>'  shift, and go to state 769


State 577

  618 table_type_pair: type_declaration .
  619                | type_declaration . c_or_s type_declaration
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505
    '|'                  shift, and go to state 368

    $default  reduce using rule 618 (table_type_pair)

    c_or_s  go to state 770


State 578

  729 make_struct_decl: "struct" '<' . $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 727 ($@72)

    $@72  go to state 771


State 579

  732 make_struct_decl: "class" '<' . $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 730 ($@74)

    $@74  go to state 772


State 580

  248 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 246 ($@3)

    $@3  go to state 773


State 581

  251 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  252         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 774


State 582

  249 expr_new: "new" structure_type_declaration .
  250         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 775

    $default  reduce using rule 249 (expr_new)


State 583

  253 expr_new: "new" make_decl .

    $default  reduce using rule 253 (expr_new)


State 584

  287 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  288               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 776
    '('  shift, and go to state 777


State 585

  286 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 284 ($@11)

    $@11  go to state 778


State 586

  748 make_dim_decl: "array" "struct" . '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 779


State 587

  751 make_dim_decl: "array" "tuple" . '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 780


State 588

  754 make_dim_decl: "array" "variant" . '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    '<'  shift, and go to state 781


State 589

  758 make_dim_decl: "array" '<' . $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    $default  reduce using rule 756 ($@88)

    $@88  go to state 782


State 590

  755 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 783
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 591

  767 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  768                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 784
    type_declaration_no_options_no_dim  go to state 262


State 592

  766 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 616
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 617
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    expr_map_tuple_list     go to state 785
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 593

  410 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 786
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 594

  277 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 275 ($@5)

    $@5  go to state 787


State 595

  280 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 278 ($@7)

    $@7  go to state 788


State 596

  411 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 789
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 597

  283 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 281 ($@9)

    $@9  go to state 790


State 598

  443 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 791
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 599

  762 make_dim_decl: "fixed_array" '<' . $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 760 ($@90)

    $@90  go to state 792


State 600

  759 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 793
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 601

  738 make_struct_decl: "default" '<' . $@78 type_declaration_no_options '>' $@79 use_initializer

    $default  reduce using rule 736 ($@78)

    $@78  go to state 794


State 602

  744 make_tuple_call: "tuple" '<' . $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 742 ($@80)

    $@80  go to state 795


State 603

  741 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 796
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 604

  735 make_struct_decl: "variant" '<' . $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    $default  reduce using rule 733 ($@76)

    $@76  go to state 797


State 605

  412 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' . type_declaration_no_options '>' optional_capture_list expression_block

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 798
    type_declaration_no_options_no_dim  go to state 262


State 606

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  396     | "++" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 396 (expr)


State 607

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  397     | "--" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 397 (expr)


State 608

  444 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 799
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 609

  445 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 800
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 610

  446 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 801
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 611

  447 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 802
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 612

  448 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 803
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 613

  450 expr_mtag: "$c" '(' . expr ')' '(' ')'
  451          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 804
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 614

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154
    "end of the string"   shift, and go to state 805
    "{"                   shift, and go to state 806

    character_sequence  go to state 807


State 615

  775 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_name_with_pos_list  go to state 808


State 616

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  739 make_map_tuple: expr . "=>" expr
  740               | expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "=>"   shift, and go to state 809
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 740 (make_map_tuple)


State 617

  763 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 763 (expr_map_tuple_list)


State 618

  764 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  765 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 810

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 811


State 619

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  373 expr: '-' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 373 (expr)


State 620

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  372 expr: '+' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 372 (expr)


State 621

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  409     | '*' expr .
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 409 (expr)


State 622

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  371 expr: '~' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 371 (expr)


State 623

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  370 expr: '!' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 370 (expr)


State 624

  773 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_name_with_pos_list  go to state 812


State 625

  774 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 813


State 626

  291 expr_list: expr_list . ',' expr
  745 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 814

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 815


State 627

  290 expr_list: expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 290 (expr_list)


State 628

  291 expr_list: expr_list . ',' expr
  400 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 814

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 816


State 629

  297 block_or_lambda: '@' '@' .
  341 func_addr_expr: '@' '@' . func_addr_name
  344               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  459 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 817
    "$c"    shift, and go to state 818
    "name"  shift, and go to state 56
    '<'     shift, and go to state 819

    $default  reduce using rule 297 (block_or_lambda)

    name_in_namespace  go to state 820
    func_addr_name     go to state 821


State 630

  335 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  336                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace '(' . ')'
  356          | name_in_namespace '(' . make_struct_single ')'
  357          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "$f"                              shift, and go to state 822
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 823
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 824
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 825
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 826
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_fields      go to state 827
    make_struct_single      go to state 828
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 631

  306 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 829

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 830


State 632

  308 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 831


State 633

  296 block_or_lambda: '@' .
  297                | '@' . '@'

    '@'  shift, and go to state 832

    $default  reduce using rule 296 (block_or_lambda)


State 634

  307 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 833


State 635

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 213 (expr_call_pipe)


State 636

  419 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr "is" . basic_type_declaration
  421     | expr "is" . "name"
  458 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 834
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 419
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 835
    "name"      shift, and go to state 836

    basic_type_declaration  go to state 837


State 637

  422 expr: expr "as" . "name"
  425     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  426     | expr "as" . basic_type_declaration
  456 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 838
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 419
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 839
    "name"      shift, and go to state 840

    basic_type_declaration  go to state 841


State 638

  374 expr: expr "<<" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 842
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 639

  375 expr: expr ">>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 843
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 640

  398 expr: expr "++" .

    $default  reduce using rule 398 (expr)


State 641

  399 expr: expr "--" .

    $default  reduce using rule 399 (expr)


State 642

  387 expr: expr "<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 844
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 643

  388 expr: expr ">=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 845
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 644

  385 expr: expr "==" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 846
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 645

  386 expr: expr "!=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 847
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 646

  337 expr_method_call: expr "->" . "name" '(' ')'
  338                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 848


State 647

  415 expr: expr "??" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 849
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 648

  405 expr: expr "?." . "name"
  453 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 850
    "name"  shift, and go to state 851


State 649

  403 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 852
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 650

  439 expr: expr "<|" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 853
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 651

  440 expr: expr "|>" . expr
  441     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 854
    expr_mtag               go to state 467
    basic_type_declaration  go to state 855
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 652

  376 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 856
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 653

  377 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 857
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 654

  392 expr: expr "&&" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 858
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 655

  393 expr: expr "||" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 859
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 656

  394 expr: expr "^^" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 860
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 657

  395 expr: expr ".." . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 861
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 658

  416 expr: expr '?' . expr ':' expr
  427     | expr '?' . "as" "name"
  430     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' . "as" basic_type_declaration
  457 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "as"                              shift, and go to state 862
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 863
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 659

  390 expr: expr '|' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 864
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 660

  391 expr: expr '^' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 865
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 661

  389 expr: expr '&' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 866
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 662

  383 expr: expr '<' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 867
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 663

  384 expr: expr '>' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 868
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 664

  379 expr: expr '-' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 869
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 665

  378 expr: expr '+' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 870
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 666

  380 expr: expr '*' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 871
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 667

  381 expr: expr '/' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 872
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 668

  382 expr: expr '%' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 873
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 669

  348 expr_field: expr '.' . "name"
  349           | expr '.' . '.' "name"
  350           | expr '.' . "name" '(' ')'
  351           | expr '.' . "name" '(' expr_list ')'
  354           | expr '.' . $@17 error $@18
  402 expr: expr '.' . '[' expr ']'
  404     | expr '.' . "?[" expr ']'
  406     | expr '.' . "?." "name"
  452 expr_mtag: expr '.' . "$f" '(' expr ')'
  454          | expr '.' . '.' "$f" '(' expr ')'
  455          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 874
    "?["    shift, and go to state 875
    "$f"    shift, and go to state 876
    "name"  shift, and go to state 877
    '.'     shift, and go to state 878
    '['     shift, and go to state 879

    $default  reduce using rule 352 ($@17)

    $@17  go to state 880


State 670

  401 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 881
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 671

  633 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 633 (type_declaration_no_options_no_dim)


State 672

  358 expr_call: basic_type_declaration '(' . ')'
  359          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 882
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 883
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 673

  661 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration . '>' $@46
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 884


State 674

  651 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration . '>' $@40
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 885


State 675

  606 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 606 (auto_type_declaration)


State 676

  608 bitfield_bits: "name" .

    $default  reduce using rule 608 (bitfield_bits)


State 677

  609 bitfield_bits: bitfield_bits . "end of expression" "name"
  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    "end of expression"  shift, and go to state 886
    '>'                  shift, and go to state 887


State 678

  665 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration . '>' $@48
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 888


State 679

  668 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list . optional_function_type '>' $@50

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 889


State 680

  672 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration . '>' $@52
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 890


State 681

  675 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list . optional_function_type '>' $@54

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 891


State 682

  679 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration . '>' $@56
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 892


State 683

  682 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list . optional_function_type '>' $@58

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 893


State 684

  486 tuple_type_list: tuple_type .

    $default  reduce using rule 486 (tuple_type_list)


State 685

  487 tuple_type_list: tuple_type_list . c_or_s tuple_type
  685 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list . '>' $@60

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505
    '>'                  shift, and go to state 894

    c_or_s  go to state 895


State 686

  492 variant_type_list: variant_type .

    $default  reduce using rule 492 (variant_type_list)


State 687

  493 variant_type_list: variant_type_list . c_or_s variant_type
  688 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list . '>' $@62

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505
    '>'                  shift, and go to state 896

    c_or_s  go to state 897


State 688

  607 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 607 (auto_type_declaration)


State 689

  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    type_declaration_no_options_list    go to state 898
    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 899


State 690

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 900


State 691

  236 optional_expr_list: expr_list . optional_comma
  291 expr_list: expr_list . ',' expr

    ','  shift, and go to state 814

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 901


State 692

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 637 (type_declaration_no_options_no_dim)


State 693

  620 dim_list: '[' expr ']' .

    $default  reduce using rule 620 (dim_list)


State 694

  623 dim_list: dim_list '[' ']' .

    $default  reduce using rule 623 (dim_list)


State 695

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  622 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 902


State 696

  612 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 612 (bitfield_alias_bits)


State 697

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 . "end of code block"

    "end of code block"  shift, and go to state 903


State 698

  485 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 904


State 699

  490 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 490 (tuple_alias_type_list)


State 700

  695 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block" .

    $default  reduce using rule 695 (tuple_alias_declaration)


State 701

  491 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 905


State 702

  496 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 496 (variant_alias_type_list)


State 703

  699 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block" .

    $default  reduce using rule 699 (variant_alias_declaration)


State 704

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  481 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 906


State 705

  565 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 907


State 706

  564 variable_name_with_pos_list: "name" .
  566                            | "name" . "aka" "name"

    "aka"  shift, and go to state 908

    $default  reduce using rule 564 (variable_name_with_pos_list)


State 707

  480 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 480 (function_argument_declaration)


State 708

  499 variable_declaration: variable_name_with_pos_list .
  500                     | variable_name_with_pos_list . '&'
  501                     | variable_name_with_pos_list . ':' type_declaration
  502                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  503                     | variable_name_with_pos_list . copy_or_move expr
  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 909
    ','   shift, and go to state 910
    '='   shift, and go to state 911
    ':'   shift, and go to state 912
    '&'   shift, and go to state 913

    $default  reduce using rule 499 (variable_declaration)

    copy_or_move  go to state 914


State 709

  483 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 483 (function_argument_list)


State 710

   72 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 915
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 711

   70 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_name_with_pos_list  go to state 916


State 712

  258 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 917
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 713

  257 expression_return: "return" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 257 (expression_return)


State 714

  261 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 918


State 715

  245 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 919
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 716

  244 expression_delete: "delete" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 244 (expression_delete)


State 717

   73 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 920
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 718

   74 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 921


State 719

  231 expression_any: "pass" "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 720

   51 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 922


State 721

   52 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 923


State 722

   53 expression_goto: "goto" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 53 (expression_goto)


State 723

   71 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 71 (expression_unsafe)


State 724

  260 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 924
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 725

  259 expression_yield: "yield" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 259 (expression_yield)


State 726

  212 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 925


State 727

  229 expression_any: expression_label "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 728

  230 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 729

   68 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 926
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 730

   69 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 927


State 731

  221 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 732

  216 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 733

  223 expression_any: expression_break "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 734

  224 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 735

  225 expression_any: expression_return "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 736

  226 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 737

  267 optional_in_scope: "inscope" .

    $default  reduce using rule 267 (optional_in_scope)


State 738

  273 expression_let: kwd_let optional_in_scope . let_variable_declaration
  274               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 928
    "name"  shift, and go to state 929
    '('     shift, and go to state 930

    tuple_expansion_variable_declaration  go to state 931
    let_variable_name_with_pos_list       go to state 932
    let_variable_declaration              go to state 933


State 739

  215 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 740

  326 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 934
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 741

  327 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 935
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 742

  329 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 936
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 743

  328 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 937
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 744

  330 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 938
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 745

  320 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 939
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 746

  321 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 940
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 747

  322 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 941
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 748

  331 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 942
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 749

  332 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 943
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 750

  318 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 944
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 751

  319 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 945
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 752

  333 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 946
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 753

  334 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 947
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 754

  323 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 948
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 755

  324 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 949
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 756

  325 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 950
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 757

  317 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 951
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 758

  530 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 952
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 759

  533 enum_list: enum_list ',' . enum_expression
  772 optional_comma: ',' .

    "name"  shift, and go to state 563

    $default  reduce using rule 772 (optional_comma)

    enum_expression  go to state 953


State 760

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma . $@31 "end of code block"

    $default  reduce using rule 547 ($@31)

    $@31  go to state 954


State 761

  560 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 560 (optional_struct_variable_declaration_list)


State 762

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 955


State 763

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list          go to state 208
    optional_field_annotation       go to state 956
    structure_variable_declaration  go to state 957


State 764

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 519 (global_let_variable_declaration)


State 765

  520 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 958
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 766

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 959
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670


State 767

  632 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 631 ($@37)

    $@37  go to state 960


State 768

  655 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 654 ($@42)

    $@42  go to state 961


State 769

  658 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' . $@44

    $default  reduce using rule 657 ($@44)

    $@44  go to state 962


State 770

  619 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 963


State 771

  729 make_struct_decl: "struct" '<' $@72 . type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 964
    type_declaration_no_options_no_dim  go to state 262


State 772

  732 make_struct_decl: "class" '<' $@74 . type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 965
    type_declaration_no_options_no_dim  go to state 262


State 773

  248 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 966


State 774

  251 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  252         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 967

    $default  reduce using rule 725 (use_initializer)

    use_initializer  go to state 968


State 775

  250 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 969
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 691
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 776

  288 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 970


State 777

  287 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 971
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 778

  286 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 972


State 779

  748 make_dim_decl: "array" "struct" '<' . $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 746 ($@82)

    $@82  go to state 973


State 780

  751 make_dim_decl: "array" "tuple" '<' . $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 749 ($@84)

    $@84  go to state 974


State 781

  754 make_dim_decl: "array" "variant" '<' . $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    $default  reduce using rule 752 ($@86)

    $@86  go to state 975


State 782

  758 make_dim_decl: "array" '<' $@88 . type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 976
    type_declaration_no_options_no_dim  go to state 262


State 783

  291 expr_list: expr_list . ',' expr
  755 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 814

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 977


State 784

  767 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  768                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505
    '>'                  shift, and go to state 978

    c_or_s  go to state 979


State 785

  764 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  766 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 810

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 980


State 786

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  410     | "deref" '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 981


State 787

  277 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 982
    type_declaration_no_options_no_dim  go to state 262


State 788

  280 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 983
    type_declaration_no_options_no_dim  go to state 262


State 789

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  411     | "addr" '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 984


State 790

  283 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 985
    type_declaration_no_options_no_dim  go to state 262


State 791

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  443     | "unsafe" '(' expr . ')'
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 986


State 792

  762 make_dim_decl: "fixed_array" '<' $@90 . type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 987
    type_declaration_no_options_no_dim  go to state 262


State 793

  291 expr_list: expr_list . ',' expr
  759 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 814

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 988


State 794

  738 make_struct_decl: "default" '<' $@78 . type_declaration_no_options '>' $@79 use_initializer

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 989
    type_declaration_no_options_no_dim  go to state 262


State 795

  744 make_tuple_call: "tuple" '<' $@80 . type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 990
    type_declaration_no_options_no_dim  go to state 262


State 796

  291 expr_list: expr_list . ',' expr
  741 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 814

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 991


State 797

  735 make_struct_decl: "variant" '<' $@76 . type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 992
    type_declaration_no_options_no_dim  go to state 262


State 798

  412 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options . '>' optional_capture_list expression_block

    '>'  shift, and go to state 993


State 799

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  444 expr_mtag: "$$" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 994


State 800

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  445 expr_mtag: "$i" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 995


State 801

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  446 expr_mtag: "$v" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 996


State 802

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  447 expr_mtag: "$b" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 997


State 803

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  448 expr_mtag: "$a" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 998


State 804

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  450 expr_mtag: "$c" '(' expr . ')' '(' ')'
  451          | "$c" '(' expr . ')' '(' expr_list ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 999


State 805

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 806

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1000
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 807

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 210
    STRING_CHARACTER_ESC  shift, and go to state 211

    $default  reduce using rule 29 (string_builder_body)


State 808

  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  775 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1001
    ','   shift, and go to state 910


State 809

  739 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1002
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 810

  764 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  772 optional_comma: ',' .

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 772 (optional_comma)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 616
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 1003
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 811

  765 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1004


State 812

  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  773 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1005
    ','   shift, and go to state 910


State 813

  774 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_name_with_pos_list  go to state 1006


State 814

  291 expr_list: expr_list ',' . expr
  772 optional_comma: ',' .

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 772 (optional_comma)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1007
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 815

  745 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1008


State 816

  400 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1009


State 817

  340 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1010


State 818

  459 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1011


State 819

  344 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 345 ($@15)
    '>'       reduce using rule 345 ($@15)
    '('       reduce using rule 345 ($@15)
    $default  reduce using rule 342 ($@13)

    $@13  go to state 1012
    $@15  go to state 1013


State 820

  339 func_addr_name: name_in_namespace .

    $default  reduce using rule 339 (func_addr_name)


State 821

  341 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 341 (func_addr_expr)


State 822

  713 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  714                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1014


State 823

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"
  709 make_struct_fields: "name" . copy_or_move expr
  710                   | "name" . ":=" expr

    "<-"  shift, and go to state 909
    ":="  shift, and go to state 1015
    "::"  shift, and go to state 94
    '='   shift, and go to state 911

    $default  reduce using rule 241 (name_in_namespace)

    copy_or_move  go to state 1016


State 824

  335 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  745 make_dim_decl: '[' . expr_list optional_comma ']'
  773 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  774                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 624
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 625
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "$f"                              shift, and go to state 822
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 823
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 626
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_fields      go to state 1017
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 825

  355 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 355 (expr_call)


State 826

  291 expr_list: expr_list . ',' expr
  336 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  357 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1018
    ')'  shift, and go to state 1019


State 827

  711 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  712                   | make_struct_fields . ',' "name" ":=" expr
  715                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  718 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1020

    $default  reduce using rule 718 (make_struct_single)


State 828

  356 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1021


State 829

  305 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1022


State 830

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1023


State 831

  233 expressions: expressions . expression_any
  234            | expressions . error
  308 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 523
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 524
    "if"                              shift, and go to state 525
    "static_if"                       shift, and go to state 526
    "for"                             shift, and go to state 527
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 528
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 529
    "try"                             shift, and go to state 530
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 531
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 532
    "assume"                          shift, and go to state 533
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 534
    "pass"                            shift, and go to state 535
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 536
    "goto"                            shift, and go to state 537
    "unsafe"                          shift, and go to state 538
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 539
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    "end of code block"               shift, and go to state 1024
    "end of expression"               shift, and go to state 541
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_label         go to state 542
    expression_goto          go to state 543
    if_or_static_if          go to state 544
    expression_if_one_liner  go to state 545
    expression_if_then_else  go to state 546
    expression_for_loop      go to state 547
    expression_unsafe        go to state 548
    expression_while_loop    go to state 549
    expression_with          go to state 550
    expression_with_alias    go to state 551
    expr_call_pipe           go to state 452
    expression_any           go to state 552
    name_in_namespace        go to state 453
    expression_delete        go to state 553
    expr_new                 go to state 454
    expression_break         go to state 554
    expression_continue      go to state 555
    expression_return        go to state 556
    expression_yield         go to state 557
    expression_try_catch     go to state 558
    kwd_let                  go to state 559
    expression_let           go to state 560
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_assign              go to state 561
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 562
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 832

  297 block_or_lambda: '@' '@' .

    $default  reduce using rule 297 (block_or_lambda)


State 833

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 829

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 1025


State 834

  419 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1026


State 835

  458 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1027


State 836

  421 expr: expr "is" "name" .

    $default  reduce using rule 421 (expr)


State 837

  420 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 420 (expr)


State 838

  425 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1028


State 839

  456 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1029


State 840

  422 expr: expr "as" "name" .

    $default  reduce using rule 422 (expr)


State 841

  426 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 426 (expr)


State 842

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  374     | expr "<<" expr .
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 374 (expr)


State 843

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  375     | expr ">>" expr .
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 375 (expr)


State 844

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  387     | expr "<=" expr .
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 387 (expr)


State 845

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  388     | expr ">=" expr .
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 388 (expr)


State 846

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  385     | expr "==" expr .
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 385 (expr)


State 847

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  386     | expr "!=" expr .
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 386 (expr)


State 848

  337 expr_method_call: expr "->" "name" . '(' ')'
  338                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1030


State 849

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  415     | expr "??" expr .
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 415 (expr)


State 850

  453 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1031


State 851

  405 expr: expr "?." "name" .

    $default  reduce using rule 405 (expr)


State 852

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  403     | expr "?[" expr . ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1032


State 853

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  439     | expr "<|" expr .
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 439 (expr)


State 854

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  440     | expr "|>" expr .
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 646
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 440 (expr)


State 855

  358 expr_call: basic_type_declaration . '(' ')'
  359          | basic_type_declaration . '(' expr_list ')'
  441 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 672

    $default  reduce using rule 441 (expr)


State 856

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  376     | expr "<<<" expr .
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 376 (expr)


State 857

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  377     | expr ">>>" expr .
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '-'   shift, and go to state 664
    '+'   shift, and go to state 665
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 377 (expr)


State 858

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  392     | expr "&&" expr .
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 392 (expr)


State 859

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  393     | expr "||" expr .
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "^^"   shift, and go to state 656
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 393 (expr)


State 860

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  394     | expr "^^" expr .
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 394 (expr)


State 861

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  395     | expr ".." expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    ".."  error (nonassociative)

    $default  reduce using rule 395 (expr)


State 862

  427 expr: expr '?' "as" . "name"
  430     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' "as" . basic_type_declaration
  457 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1033
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 419
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 1034
    "name"      shift, and go to state 1035

    basic_type_declaration  go to state 1036


State 863

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  416     | expr '?' expr . ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    ':'    shift, and go to state 1037
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670


State 864

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  390     | expr '|' expr .
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 390 (expr)


State 865

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  391     | expr '^' expr .
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 391 (expr)


State 866

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  389     | expr '&' expr .
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 389 (expr)


State 867

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  383     | expr '<' expr .
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 383 (expr)


State 868

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  384     | expr '>' expr .
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 384 (expr)


State 869

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  379     | expr '-' expr .
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 379 (expr)


State 870

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  378     | expr '+' expr .
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '*'   shift, and go to state 666
    '/'   shift, and go to state 667
    '%'   shift, and go to state 668
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 378 (expr)


State 871

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  380     | expr '*' expr .
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 380 (expr)


State 872

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  381     | expr '/' expr .
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 381 (expr)


State 873

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  382     | expr '%' expr .
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 636
    "as"  shift, and go to state 637
    "++"  shift, and go to state 640
    "--"  shift, and go to state 641
    "->"  shift, and go to state 646
    "??"  shift, and go to state 647
    "?."  shift, and go to state 648
    "?["  shift, and go to state 649
    "<|"  shift, and go to state 650
    "|>"  shift, and go to state 651
    '.'   shift, and go to state 669
    '['   shift, and go to state 670

    $default  reduce using rule 382 (expr)


State 874

  406 expr: expr '.' "?." . "name"
  455 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1038
    "name"  shift, and go to state 1039


State 875

  404 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1040
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 876

  452 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1041


State 877

  348 expr_field: expr '.' "name" .
  350           | expr '.' "name" . '(' ')'
  351           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1042

    $default  reduce using rule 348 (expr_field)


State 878

  349 expr_field: expr '.' '.' . "name"
  454 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1043
    "name"  shift, and go to state 1044


State 879

  402 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1045
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 880

  354 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1046


State 881

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  401     | expr '[' expr . ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1047


State 882

  358 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 358 (expr_call)


State 883

  291 expr_list: expr_list . ',' expr
  359 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1048
    ')'  shift, and go to state 1049


State 884

  661 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 660 ($@46)

    $@46  go to state 1050


State 885

  651 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' . $@40

    $default  reduce using rule 650 ($@40)

    $@40  go to state 1051


State 886

  609 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1052


State 887

  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 614 ($@35)

    $@35  go to state 1053


State 888

  665 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 664 ($@48)

    $@48  go to state 1054


State 889

  668 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type . '>' $@50

    '>'  shift, and go to state 1055


State 890

  672 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 671 ($@52)

    $@52  go to state 1056


State 891

  675 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type . '>' $@54

    '>'  shift, and go to state 1057


State 892

  679 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 678 ($@56)

    $@56  go to state 1058


State 893

  682 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type . '>' $@58

    '>'  shift, and go to state 1059


State 894

  685 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' . $@60

    $default  reduce using rule 684 ($@60)

    $@60  go to state 1060


State 895

  487 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 503
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    tuple_type                          go to state 1061
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 508


State 896

  688 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' . $@62

    $default  reduce using rule 687 ($@62)

    $@62  go to state 1062


State 897

  493 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 510

    variant_type  go to state 1063


State 898

  240 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505
    '>'                  shift, and go to state 1064

    c_or_s  go to state 1065


State 899

  239 type_declaration_no_options_list: type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 239 (type_declaration_no_options_list)


State 900

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 634 (type_declaration_no_options_no_dim)


State 901

  236 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 236 (optional_expr_list)


State 902

  622 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 622 (dim_list)


State 903

  703 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block" .

    $default  reduce using rule 703 (bitfield_alias_declaration)


State 904

  485 tuple_type: "name" ':' type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 485 (tuple_type)


State 905

  491 variant_type: "name" ':' type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 491 (variant_type)


State 906

  481 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 481 (function_argument_declaration)


State 907

  565 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1066
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 908

  566 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1067


State 909

  498 copy_or_move: "<-" .

    $default  reduce using rule 498 (copy_or_move)


State 910

  567 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  568                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1068


State 911

  497 copy_or_move: '=' .

    $default  reduce using rule 497 (copy_or_move)


State 912

  501 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  502                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1069


State 913

  500 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 500 (variable_declaration)


State 914

  503 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1070
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 915

   72 expression_while_loop: "while" '(' expr . ')' expression_block
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1071


State 916

   70 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1072
    ','   shift, and go to state 910


State 917

  258 expression_return: "return" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 258 (expression_return)


State 918

  261 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1073


State 919

  245 expression_delete: "delete" "explicit" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 245 (expression_delete)


State 920

   73 expression_with: "with" '(' expr . ')' expression_block
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1074


State 921

   74 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1075
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 922

   51 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 51 (expression_label)


State 923

   52 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 52 (expression_goto)


State 924

  260 expression_yield: "yield" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 260 (expression_yield)


State 925

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 1076


State 926

   68 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1077


State 927

   69 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1078
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 928

  510 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1079


State 929

  509 let_variable_name_with_pos_list: "name" .
  511                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1080

    $default  reduce using rule 509 (let_variable_name_with_pos_list)


State 930

  271 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1081

    tuple_expansion  go to state 1082


State 931

  274 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 274 (expression_let)


State 932

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  513                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  516 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  517                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  518                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1083
    ':'  shift, and go to state 1084
    '&'  shift, and go to state 396

    $default  reduce using rule 507 (optional_ref)

    optional_ref  go to state 1085


State 933

  273 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 273 (expression_let)


State 934

  326 expr_assign: expr "+=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 326 (expr_assign)


State 935

  327 expr_assign: expr "-=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 327 (expr_assign)


State 936

  329 expr_assign: expr "/=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 329 (expr_assign)


State 937

  328 expr_assign: expr "*=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 328 (expr_assign)


State 938

  330 expr_assign: expr "%=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 330 (expr_assign)


State 939

  320 expr_assign: expr "&=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 320 (expr_assign)


State 940

  321 expr_assign: expr "|=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 321 (expr_assign)


State 941

  322 expr_assign: expr "^=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 322 (expr_assign)


State 942

  331 expr_assign: expr "<<=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 331 (expr_assign)


State 943

  332 expr_assign: expr ">>=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 332 (expr_assign)


State 944

  318 expr_assign: expr "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 318 (expr_assign)


State 945

  319 expr_assign: expr ":=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 319 (expr_assign)


State 946

  333 expr_assign: expr "<<<=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 333 (expr_assign)


State 947

  334 expr_assign: expr ">>>=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 334 (expr_assign)


State 948

  323 expr_assign: expr "&&=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 323 (expr_assign)


State 949

  324 expr_assign: expr "||=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 324 (expr_assign)


State 950

  325 expr_assign: expr "^^=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 325 (expr_assign)


State 951

  317 expr_assign: expr '=' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 317 (expr_assign)


State 952

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  530 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 530 (enum_expression)


State 953

  533 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 533 (enum_list)


State 954

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 . "end of code block"

    "end of code block"  shift, and go to state 1086


State 955

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1087
    "private"  shift, and go to state 1088

    $default  reduce using rule 467 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1089


State 956

  472 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1090

    $default  reduce using rule 470 (optional_static_member_variable)

    optional_static_member_variable  go to state 1091


State 957

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1092


State 958

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  520 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 1093
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670


State 959

  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 521 (global_let_variable_declaration)


State 960

  632 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 632 (type_declaration_no_options_no_dim)


State 961

  655 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 655 (type_declaration_no_options_no_dim)


State 962

  658 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44 .

    $default  reduce using rule 658 (type_declaration_no_options_no_dim)


State 963

  619 table_type_pair: type_declaration c_or_s type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 619 (table_type_pair)


State 964

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options . '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1094


State 965

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options . '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1095


State 966

  248 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1096


State 967

  726 use_initializer: "uninitialized" .

    $default  reduce using rule 726 (use_initializer)


State 968

  251 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  252         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097
    ')'     shift, and go to state 1098

    make_struct_fields  go to state 827
    make_struct_single  go to state 1099


State 969

  250 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1100


State 970

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 504
    ','                  shift, and go to state 505
    '>'                  shift, and go to state 1101

    c_or_s  go to state 1102


State 971

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1103


State 972

  286 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1104


State 973

  748 make_dim_decl: "array" "struct" '<' $@82 . type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1105
    type_declaration_no_options_no_dim  go to state 262


State 974

  751 make_dim_decl: "array" "tuple" '<' $@84 . type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1106
    type_declaration_no_options_no_dim  go to state 262


State 975

  754 make_dim_decl: "array" "variant" '<' $@86 . type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1107
    type_declaration_no_options_no_dim  go to state 262


State 976

  758 make_dim_decl: "array" '<' $@88 type_declaration_no_options . '>' $@89 '(' optional_expr_list ')'

    '>'  shift, and go to state 1108


State 977

  755 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1109


State 978

  767 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1110


State 979

  768 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1111
    type_declaration_no_options_no_dim  go to state 262


State 980

  766 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1112


State 981

  410 expr: "deref" '(' expr ')' .

    $default  reduce using rule 410 (expr)


State 982

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1113


State 983

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1114


State 984

  411 expr: "addr" '(' expr ')' .

    $default  reduce using rule 411 (expr)


State 985

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1115


State 986

  443 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 443 (expr)


State 987

  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options . '>' $@91 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1116


State 988

  759 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1117


State 989

  738 make_struct_decl: "default" '<' $@78 type_declaration_no_options . '>' $@79 use_initializer

    '>'  shift, and go to state 1118


State 990

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options . '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1119


State 991

  741 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1120


State 992

  735 make_struct_decl: "variant" '<' $@76 type_declaration_no_options . '>' $@77 '(' make_variant_dim ')'

    '>'  shift, and go to state 1121


State 993

  412 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' . optional_capture_list expression_block

    "capture"  shift, and go to state 829

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 1122


State 994

  444 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 444 (expr_mtag)


State 995

  445 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 445 (expr_mtag)


State 996

  446 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 446 (expr_mtag)


State 997

  447 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 447 (expr_mtag)


State 998

  448 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 448 (expr_mtag)


State 999

  450 expr_mtag: "$c" '(' expr ')' . '(' ')'
  451          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1123


State 1000

   30 string_builder_body: string_builder_body "{" expr . "}"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    "}"    shift, and go to state 1124
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670


State 1001

  775 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1125
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1002

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  739 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 739 (make_map_tuple)


State 1003

  764 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 764 (expr_map_tuple_list)


State 1004

  765 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 765 (make_table_decl)


State 1005

  773 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1126
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1006

  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  774 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1127
    ','   shift, and go to state 910


State 1007

  291 expr_list: expr_list ',' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 291 (expr_list)


State 1008

  745 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 745 (make_dim_decl)


State 1009

  400 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 400 (expr)


State 1010

  340 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1128
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1011

  459 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1129
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1012

  344 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1130
    type_declaration_no_options_no_dim  go to state 262


State 1013

  347 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1131


State 1014

  713 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  714                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1132
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1015

  710 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1133
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1016

  709 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1134
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1017

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  711 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  712                   | make_struct_fields . ',' "name" ":=" expr
  715                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1020
    ']'  shift, and go to state 1135


State 1018

  291 expr_list: expr_list ',' . expr
  336 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 1136
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1007
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1019

  357 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 357 (expr_call)


State 1020

  711 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  712                   | make_struct_fields ',' . "name" ":=" expr
  715                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1137
    "name"  shift, and go to state 1138


State 1021

  356 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 356 (expr_call)


State 1022

  305 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"  shift, and go to state 1139
    ":="  shift, and go to state 1140
    '='   shift, and go to state 1141
    '&'   shift, and go to state 1142

    capture_entry  go to state 1143
    capture_list   go to state 1144


State 1023

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1145


State 1024

  308 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 308 (expr_full_block_assumed_piped)


State 1025

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1146


State 1026

  419 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 417 ($@19)

    $@19  go to state 1147


State 1027

  458 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1148
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1028

  425 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 423 ($@21)

    $@21  go to state 1149


State 1029

  456 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1150
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1030

  337 expr_method_call: expr "->" "name" '(' . ')'
  338                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1151
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1152
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1031

  453 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1153
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1032

  403 expr: expr "?[" expr ']' .

    $default  reduce using rule 403 (expr)


State 1033

  430 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1154


State 1034

  457 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1155


State 1035

  427 expr: expr '?' "as" "name" .

    $default  reduce using rule 427 (expr)


State 1036

  431 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 431 (expr)


State 1037

  416 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1156
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1038

  455 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1157


State 1039

  406 expr: expr '.' "?." "name" .

    $default  reduce using rule 406 (expr)


State 1040

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  404     | expr '.' "?[" expr . ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1158


State 1041

  452 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1159
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1042

  350 expr_field: expr '.' "name" '(' . ')'
  351           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1160
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1161
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1043

  454 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1162


State 1044

  349 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 349 (expr_field)


State 1045

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  402     | expr '.' '[' expr . ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ']'    shift, and go to state 1163


State 1046

  354 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 353 ($@18)

    $@18  go to state 1164


State 1047

  401 expr: expr '[' expr ']' .

    $default  reduce using rule 401 (expr)


State 1048

  291 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1007
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1049

  359 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 359 (expr_call)


State 1050

  661 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 661 (type_declaration_no_options_no_dim)


State 1051

  651 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40 .

    $default  reduce using rule 651 (type_declaration_no_options_no_dim)


State 1052

  609 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 609 (bitfield_bits)


State 1053

  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 615 (bitfield_type_declaration)


State 1054

  665 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 665 (type_declaration_no_options_no_dim)


State 1055

  668 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' . $@50

    $default  reduce using rule 667 ($@50)

    $@50  go to state 1165


State 1056

  672 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 672 (type_declaration_no_options_no_dim)


State 1057

  675 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' . $@54

    $default  reduce using rule 674 ($@54)

    $@54  go to state 1166


State 1058

  679 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 679 (type_declaration_no_options_no_dim)


State 1059

  682 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' . $@58

    $default  reduce using rule 681 ($@58)

    $@58  go to state 1167


State 1060

  685 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60 .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 1061

  487 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 487 (tuple_type_list)


State 1062

  688 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62 .

    $default  reduce using rule 688 (type_declaration_no_options_no_dim)


State 1063

  493 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 493 (variant_type_list)


State 1064

  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1168


State 1065

  240 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1169


State 1066

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  565 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1170


State 1067

  566 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 566 (variable_name_with_pos_list)


State 1068

  567 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  568                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1171

    $default  reduce using rule 567 (variable_name_with_pos_list)


State 1069

  501 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  502                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 909
    '='   shift, and go to state 911
    '|'   shift, and go to state 368

    $default  reduce using rule 501 (variable_declaration)

    copy_or_move  go to state 1172


State 1070

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  503 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 503 (variable_declaration)


State 1071

   72 expression_while_loop: "while" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1173


State 1072

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1174
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1073

  261 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 261 (expression_try_catch)


State 1074

   73 expression_with: "with" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1175


State 1075

   74 expression_with_alias: "assume" "name" '=' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 74 (expression_with_alias)


State 1076

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 523
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 524
    "if"                              shift, and go to state 525
    "static_if"                       shift, and go to state 526
    "for"                             shift, and go to state 527
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 528
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 529
    "try"                             shift, and go to state 530
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 531
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 532
    "assume"                          shift, and go to state 533
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 534
    "pass"                            shift, and go to state 535
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 536
    "goto"                            shift, and go to state 537
    "unsafe"                          shift, and go to state 538
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 539
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    "end of code block"               shift, and go to state 1176
    "end of expression"               shift, and go to state 541
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_label         go to state 542
    expression_goto          go to state 543
    if_or_static_if          go to state 544
    expression_if_one_liner  go to state 545
    expression_if_then_else  go to state 546
    expression_for_loop      go to state 547
    expression_unsafe        go to state 548
    expression_while_loop    go to state 549
    expression_with          go to state 550
    expression_with_alias    go to state 551
    expr_call_pipe           go to state 452
    expression_any           go to state 552
    name_in_namespace        go to state 453
    expression_delete        go to state 553
    expr_new                 go to state 454
    expression_break         go to state 554
    expression_continue      go to state 555
    expression_return        go to state 556
    expression_yield         go to state 557
    expression_try_catch     go to state 558
    kwd_let                  go to state 559
    expression_let           go to state 560
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_assign              go to state 561
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 562
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 1077

   68 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1177


State 1078

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1178


State 1079

  510 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1179
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1080

  511 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1180


State 1081

  269 tuple_expansion: "name" .

    $default  reduce using rule 269 (tuple_expansion)


State 1082

  270 tuple_expansion: tuple_expansion . ',' "name"
  271 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1181
    ')'  shift, and go to state 1182


State 1083

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  513                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1183


State 1084

  516 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  517                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1184
    type_declaration_no_options_no_dim  go to state 262


State 1085

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 570
    ":="  shift, and go to state 571
    '='   shift, and go to state 572

    copy_or_move_or_clone  go to state 1185


State 1086

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block" .

    $default  reduce using rule 548 (enum_declaration)


State 1087

  468 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 468 (optional_public_or_private_member_variable)


State 1088

  469 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 469 (optional_public_or_private_member_variable)


State 1089

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1186
    "static"    shift, and go to state 1090

    $default  reduce using rule 470 (optional_static_member_variable)

    optional_static_member_variable  go to state 1187


State 1090

  471 optional_static_member_variable: "static" .

    $default  reduce using rule 471 (optional_static_member_variable)


State 1091

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1188
    "sealed"    shift, and go to state 1189

    $default  reduce using rule 462 (optional_override)

    optional_override  go to state 1190


State 1092

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 475 (struct_variable_declaration_list)


State 1093

  520 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 520 (global_let_variable_declaration)


State 1094

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' . $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 728 ($@73)

    $@73  go to state 1191


State 1095

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' . $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 731 ($@75)

    $@75  go to state 1192


State 1096

  248 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 247 ($@4)

    $@4  go to state 1193


State 1097

  709 make_struct_fields: "name" . copy_or_move expr
  710                   | "name" . ":=" expr

    "<-"  shift, and go to state 909
    ":="  shift, and go to state 1015
    '='   shift, and go to state 911

    copy_or_move  go to state 1016


State 1098

  251 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 251 (expr_new)


State 1099

  252 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1194


State 1100

  250 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 250 (expr_new)


State 1101

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1195


State 1102

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1196


State 1103

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 287 (expr_type_info)


State 1104

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 285 ($@12)

    $@12  go to state 1197


State 1105

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options . '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1198


State 1106

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options . '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1199


State 1107

  754 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options . '>' $@87 '(' make_variant_dim ')'

    '>'  shift, and go to state 1200


State 1108

  758 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' . $@89 '(' optional_expr_list ')'

    $default  reduce using rule 757 ($@89)

    $@89  go to state 1201


State 1109

  755 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 755 (make_dim_decl)


State 1110

  767 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 237 (optional_expr_map_tuple_list)

    string_builder                go to state 450
    expr_reader                   go to state 451
    expr_call_pipe                go to state 452
    optional_expr_map_tuple_list  go to state 1202
    name_in_namespace             go to state 453
    expr_new                      go to state 454
    expr_cast                     go to state 455
    expr_type_decl                go to state 456
    expr_type_info                go to state 457
    block_or_lambda               go to state 458
    expr_full_block               go to state 459
    expr_numeric_const            go to state 460
    expr_named_call               go to state 461
    expr_method_call              go to state 462
    func_addr_expr                go to state 463
    expr_field                    go to state 464
    expr_call                     go to state 465
    expr                          go to state 616
    expr_mtag                     go to state 467
    basic_type_declaration        go to state 468
    make_decl                     go to state 469
    make_struct_decl              go to state 470
    make_map_tuple                go to state 617
    make_tuple_call               go to state 471
    make_dim_decl                 go to state 472
    expr_map_tuple_list           go to state 1203
    make_table_decl               go to state 473
    array_comprehension           go to state 474


State 1111

  768 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1204


State 1112

  766 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 766 (make_table_decl)


State 1113

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 276 ($@6)

    $@6  go to state 1205


State 1114

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 279 ($@8)

    $@8  go to state 1206


State 1115

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 282 ($@10)

    $@10  go to state 1207


State 1116

  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' . $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 761 ($@91)

    $@91  go to state 1208


State 1117

  759 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 759 (make_dim_decl)


State 1118

  738 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' . $@79 use_initializer

    $default  reduce using rule 737 ($@79)

    $@79  go to state 1209


State 1119

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' . $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 743 ($@81)

    $@81  go to state 1210


State 1120

  741 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 741 (make_tuple_call)


State 1121

  735 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' . $@77 '(' make_variant_dim ')'

    $default  reduce using rule 734 ($@77)

    $@77  go to state 1211


State 1122

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' optional_capture_list . expression_block

    "begin of code block"  shift, and go to state 322
    '('                    shift, and go to state 1212

    expression_block  go to state 1213


State 1123

  450 expr_mtag: "$c" '(' expr ')' '(' . ')'
  451          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1214
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1215
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1124

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1125

  291 expr_list: expr_list . ',' expr
  775 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1216
    ','                  shift, and go to state 1048


State 1126

  291 expr_list: expr_list . ',' expr
  773 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1217
    ','                  shift, and go to state 1048


State 1127

  774 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1218
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1128

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  340 func_addr_name: "$i" '(' expr . ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1219


State 1129

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  459          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1220


State 1130

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1221


State 1131

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1222


State 1132

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  713 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  714                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1223


State 1133

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 710 (make_struct_fields)


State 1134

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 709 (make_struct_fields)


State 1135

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1224


State 1136

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  745 make_dim_decl: '[' . expr_list optional_comma ']'
  773 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  774                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 624
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 625
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "$f"                              shift, and go to state 822
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 823
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 626
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_fields      go to state 1225
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1137

  715 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  716                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1226


State 1138

  711 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  712                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 909
    ":="  shift, and go to state 1227
    '='   shift, and go to state 911

    copy_or_move  go to state 1228


State 1139

  300 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1229


State 1140

  301 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1230


State 1141

  299 capture_entry: '=' . "name"

    "name"  shift, and go to state 1231


State 1142

  298 capture_entry: '&' . "name"

    "name"  shift, and go to state 1232


State 1143

  302 capture_list: capture_entry .

    $default  reduce using rule 302 (capture_list)


State 1144

  303 capture_list: capture_list . ',' capture_entry
  305 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1233
    ')'  shift, and go to state 1234


State 1145

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1235
    "begin of code block"  shift, and go to state 322

    expression_block       go to state 1236
    block_or_simple_block  go to state 1237


State 1146

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1238


State 1147

  419 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1239
    type_declaration_no_options_no_dim  go to state 262


State 1148

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  458          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1240


State 1149

  425 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1241


State 1150

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  456          | expr "as" "$f" '(' expr . ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1242


State 1151

  337 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 337 (expr_method_call)


State 1152

  291 expr_list: expr_list . ',' expr
  338 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1048
    ')'  shift, and go to state 1243


State 1153

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  453          | expr "?." "$f" '(' expr . ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1244


State 1154

  430 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 428 ($@23)

    $@23  go to state 1245


State 1155

  457 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1246
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1156

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  416     | expr '?' expr ':' expr .
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 416 (expr)


State 1157

  455 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1247
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1158

  404 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 404 (expr)


State 1159

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr '.' "$f" '(' expr . ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1248


State 1160

  350 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 350 (expr_field)


State 1161

  291 expr_list: expr_list . ',' expr
  351 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1048
    ')'  shift, and go to state 1249


State 1162

  454 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1250
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1163

  402 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 402 (expr)


State 1164

  354 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 354 (expr_field)


State 1165

  668 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50 .

    $default  reduce using rule 668 (type_declaration_no_options_no_dim)


State 1166

  675 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54 .

    $default  reduce using rule 675 (type_declaration_no_options_no_dim)


State 1167

  682 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58 .

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 1168

  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 1251
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 691
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1169

  240 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 240 (type_declaration_no_options_list)


State 1170

  565 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 565 (variable_name_with_pos_list)


State 1171

  568 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1252


State 1172

  502 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1253
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1173

   72 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 72 (expression_while_loop)


State 1174

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  291 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1048
    ')'  shift, and go to state 1254


State 1175

   73 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_with)


State 1176

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 212 (expression_block)


State 1177

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1255
    "elif"         shift, and go to state 1256
    "static_elif"  shift, and go to state 1257

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1258
    expression_else      go to state 1259


State 1178

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1260

    $default  reduce using rule 61 (expression_else_one_liner)

    expression_else_one_liner  go to state 1261


State 1179

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  510 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1262


State 1180

  511 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 511 (let_variable_name_with_pos_list)


State 1181

  270 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1263


State 1182

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1264
    '&'  shift, and go to state 396

    $default  reduce using rule 507 (optional_ref)

    optional_ref  go to state 1265


State 1183

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  513                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1266

    $default  reduce using rule 512 (let_variable_name_with_pos_list)


State 1184

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  517                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 570
    ":="                 shift, and go to state 571
    "end of expression"  shift, and go to state 1267
    '='                  shift, and go to state 572

    copy_or_move_or_clone  go to state 1268


State 1185

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1269
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1186

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1270

    $default  reduce using rule 465 (optional_constant)

    optional_constant  go to state 1271


State 1187

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1188
    "sealed"    shift, and go to state 1189

    $default  reduce using rule 462 (optional_override)

    optional_override  go to state 1272


State 1188

  463 optional_override: "override" .

    $default  reduce using rule 463 (optional_override)


State 1189

  464 optional_override: "sealed" .

    $default  reduce using rule 464 (optional_override)


State 1190

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1087
    "private"  shift, and go to state 1088

    $default  reduce using rule 467 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1273


State 1191

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1274


State 1192

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1275


State 1193

  248 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 248 (new_type_declaration)


State 1194

  252 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 252 (expr_new)


State 1195

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1276
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1196

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1277


State 1197

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 286 (expr_type_decl)


State 1198

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' . $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 747 ($@83)

    $@83  go to state 1278


State 1199

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' . $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 750 ($@85)

    $@85  go to state 1279


State 1200

  754 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' . $@87 '(' make_variant_dim ')'

    $default  reduce using rule 753 ($@87)

    $@87  go to state 1280


State 1201

  758 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 . '(' optional_expr_list ')'

    '('  shift, and go to state 1281


State 1202

  767 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1282


State 1203

  238 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  764 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 810

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 1283


State 1204

  768 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1284


State 1205

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1285
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1206

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1286
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1207

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1287
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1208

  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1288


State 1209

  738 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 . use_initializer

    "uninitialized"  shift, and go to state 967

    $default  reduce using rule 725 (use_initializer)

    use_initializer  go to state 1289


State 1210

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1290


State 1211

  735 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 . '(' make_variant_dim ')'

    '('  shift, and go to state 1291


State 1212

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1292
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1293
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1213

  414 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block .

    $default  reduce using rule 414 (expr)


State 1214

  450 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 450 (expr_mtag)


State 1215

  291 expr_list: expr_list . ',' expr
  451 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1048
    ')'  shift, and go to state 1294


State 1216

  775 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 616
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 1295
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1217

  773 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1296
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1218

  291 expr_list: expr_list . ',' expr
  774 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1297
    ','                  shift, and go to state 1048


State 1219

  340 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 340 (func_addr_name)


State 1220

  459 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1221

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 343 ($@14)

    $@14  go to state 1298


State 1222

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1299


State 1223

  713 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  714                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 909
    ":="  shift, and go to state 1300
    '='   shift, and go to state 911

    copy_or_move  go to state 1301


State 1224

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 335 (expr_named_call)


State 1225

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  711 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  712                   | make_struct_fields . ',' "name" ":=" expr
  715                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1020
    ']'  shift, and go to state 1302


State 1226

  715 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  716                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1303
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1227

  712 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1304
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1228

  711 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1305
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1229

  300 capture_entry: "<-" "name" .

    $default  reduce using rule 300 (capture_entry)


State 1230

  301 capture_entry: ":=" "name" .

    $default  reduce using rule 301 (capture_entry)


State 1231

  299 capture_entry: '=' "name" .

    $default  reduce using rule 299 (capture_entry)


State 1232

  298 capture_entry: '&' "name" .

    $default  reduce using rule 298 (capture_entry)


State 1233

  303 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1139
    ":="  shift, and go to state 1140
    '='   shift, and go to state 1141
    '&'   shift, and go to state 1142

    capture_entry  go to state 1306


State 1234

  305 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 305 (optional_capture_list)


State 1235

  293 block_or_simple_block: "=>" . expr
  294                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "<-"                              shift, and go to state 1307
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1308
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1236

  292 block_or_simple_block: expression_block .

    $default  reduce using rule 292 (block_or_simple_block)


State 1237

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 306 (expr_full_block)


State 1238

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1309


State 1239

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1310


State 1240

  458 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 1241

  425 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1311


State 1242

  456 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1243

  338 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 338 (expr_method_call)


State 1244

  453 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1245

  430 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1312


State 1246

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr '?' "as" "$f" '(' expr . ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1313


State 1247

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr '.' "?." "$f" '(' expr . ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1314


State 1248

  452 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1249

  351 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 351 (expr_field)


State 1250

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr '.' '.' "$f" '(' expr . ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1315


State 1251

  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1316


State 1252

  568 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 568 (variable_name_with_pos_list)


State 1253

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  502 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 502 (variable_declaration)


State 1254

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1317


State 1255

   57 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1318


State 1256

   54 elif_or_static_elif: "elif" .

    $default  reduce using rule 54 (elif_or_static_elif)


State 1257

   55 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1258

   58 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1319


State 1259

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 68 (expression_if_then_else)


State 1260

   62 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 528
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 529
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 534
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 539
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_if_one_liner  go to state 1320
    expr_call_pipe           go to state 452
    name_in_namespace        go to state 453
    expr_new                 go to state 454
    expression_break         go to state 1321
    expression_continue      go to state 1322
    expression_return        go to state 1323
    expression_yield         go to state 1324
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 1325
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 1261

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1326


State 1262

  510 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 510 (let_variable_name_with_pos_list)


State 1263

  270 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 270 (tuple_expansion)


State 1264

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1327
    type_declaration_no_options_no_dim  go to state 262


State 1265

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 570
    ":="  shift, and go to state 571
    '='   shift, and go to state 572

    copy_or_move_or_clone  go to state 1328


State 1266

  513 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1329


State 1267

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 516 (let_variable_declaration)


State 1268

  517 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1330
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1269

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 1331
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670


State 1270

  466 optional_constant: "const" .

    $default  reduce using rule 466 (optional_constant)


State 1271

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 476 ($@26)

    $@26  go to state 1332


State 1272

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1270

    $default  reduce using rule 465 (optional_constant)

    optional_constant  go to state 1333


State 1273

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_declaration         go to state 1334
    variable_name_with_pos_list  go to state 708


State 1274

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 967

    $default  reduce using rule 725 (use_initializer)

    use_initializer  go to state 1335


State 1275

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 967

    $default  reduce using rule 725 (use_initializer)

    use_initializer  go to state 1336


State 1276

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1337


State 1277

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1338


State 1278

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1339


State 1279

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1340


State 1280

  754 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 . '(' make_variant_dim ')'

    '('  shift, and go to state 1341


State 1281

  758 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 1342
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 691
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1282

  767 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 767 (make_table_decl)


State 1283

  238 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 238 (optional_expr_map_tuple_list)


State 1284

  768 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 237 (optional_expr_map_tuple_list)

    string_builder                go to state 450
    expr_reader                   go to state 451
    expr_call_pipe                go to state 452
    optional_expr_map_tuple_list  go to state 1343
    name_in_namespace             go to state 453
    expr_new                      go to state 454
    expr_cast                     go to state 455
    expr_type_decl                go to state 456
    expr_type_info                go to state 457
    block_or_lambda               go to state 458
    expr_full_block               go to state 459
    expr_numeric_const            go to state 460
    expr_named_call               go to state 461
    expr_method_call              go to state 462
    func_addr_expr                go to state 463
    expr_field                    go to state 464
    expr_call                     go to state 465
    expr                          go to state 616
    expr_mtag                     go to state 467
    basic_type_declaration        go to state 468
    make_decl                     go to state 469
    make_struct_decl              go to state 470
    make_map_tuple                go to state 617
    make_tuple_call               go to state 471
    make_dim_decl                 go to state 472
    expr_map_tuple_list           go to state 1203
    make_table_decl               go to state 473
    array_comprehension           go to state 474


State 1285

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 277 (expr_cast)


State 1286

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 280 (expr_cast)


State 1287

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 283 (expr_cast)


State 1288

  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1344
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 627
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1289

  738 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer .

    $default  reduce using rule 738 (make_struct_decl)


State 1290

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 967

    $default  reduce using rule 725 (use_initializer)

    use_initializer  go to state 1345


State 1291

  735 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097

    make_struct_fields  go to state 1346
    make_variant_dim    go to state 1347


State 1292

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 412 (expr)


State 1293

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1348


State 1294

  451 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 451 (expr_mtag)


State 1295

  775 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1349

    $default  reduce using rule 769 (array_comprehension_where)

    array_comprehension_where  go to state 1350


State 1296

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  773 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 1349
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670

    $default  reduce using rule 769 (array_comprehension_where)

    array_comprehension_where  go to state 1351


State 1297

  774 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1352
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1298

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 817
    "name"  shift, and go to state 56

    name_in_namespace  go to state 820
    func_addr_name     go to state 1353


State 1299

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 346 ($@16)

    $@16  go to state 1354


State 1300

  714 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1355
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1301

  713 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1356
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1302

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1357


State 1303

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  715 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  716                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1358


State 1304

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  712 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 712 (make_struct_fields)


State 1305

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  711 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 711 (make_struct_fields)


State 1306

  303 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 303 (capture_list)


State 1307

  294 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1359
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1308

  293 block_or_simple_block: "=>" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    ".."  error (nonassociative)

    $default  reduce using rule 293 (block_or_simple_block)


State 1309

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 307 (expr_full_block_assumed_piped)


State 1310

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 418 ($@20)

    $@20  go to state 1360


State 1311

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 424 ($@22)

    $@22  go to state 1361


State 1312

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  690 type_declaration: type_declaration . '|' type_declaration_no_options
  691                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1362


State 1313

  457 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1314

  455 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1315

  454 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1316

  636 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 636 (type_declaration_no_options_no_dim)


State 1317

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 70 (expression_for_loop)


State 1318

   57 expression_else: "else" expression_block .

    $default  reduce using rule 57 (expression_else)


State 1319

   58 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1363
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1320

   62 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 62 (expression_else_one_liner)


State 1321

   66 expression_if_one_liner: expression_break .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1322

   67 expression_if_one_liner: expression_continue .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1323

   64 expression_if_one_liner: expression_return .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1324

   65 expression_if_one_liner: expression_yield .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1325

   63 expression_if_one_liner: expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 63 (expression_if_one_liner)


State 1326

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 69 (expression_if_then_else)


State 1327

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 570
    ":="  shift, and go to state 571
    '='   shift, and go to state 572

    copy_or_move_or_clone  go to state 1364


State 1328

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1365
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1329

  513 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 513 (let_variable_name_with_pos_list)


State 1330

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  517 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 1366
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670


State 1331

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 518 (let_variable_declaration)


State 1332

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1367


State 1333

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 478 ($@27)

    $@27  go to state 1368


State 1334

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 472 (structure_variable_declaration)


State 1335

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097
    '('     shift, and go to state 1369

    $default  reduce using rule 724 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1370
    make_struct_dim_list           go to state 1371
    make_struct_dim_decl           go to state 1372
    optional_make_struct_dim_decl  go to state 1373


State 1336

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097
    '('     shift, and go to state 1369

    $default  reduce using rule 724 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1370
    make_struct_dim_list           go to state 1371
    make_struct_dim_decl           go to state 1372
    optional_make_struct_dim_decl  go to state 1374


State 1337

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 288 (expr_type_info)


State 1338

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1375
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1339

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 967

    $default  reduce using rule 725 (use_initializer)

    use_initializer  go to state 1376


State 1340

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 967

    $default  reduce using rule 725 (use_initializer)

    use_initializer  go to state 1377


State 1341

  754 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097

    make_struct_fields  go to state 1346
    make_variant_dim    go to state 1378


State 1342

  758 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1379


State 1343

  768 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1380


State 1344

  291 expr_list: expr_list . ',' expr
  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 814

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 1381


State 1345

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097
    '('     shift, and go to state 1369

    $default  reduce using rule 724 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1370
    make_struct_dim_list           go to state 1371
    make_struct_dim_decl           go to state 1372
    optional_make_struct_dim_decl  go to state 1382


State 1346

  711 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  712                   | make_struct_fields . ',' "name" ":=" expr
  715                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  717 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1020

    $default  reduce using rule 717 (make_variant_dim)


State 1347

  735 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1383


State 1348

  413 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 413 (expr)


State 1349

  770 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1384


State 1350

  775 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1385


State 1351

  773 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1386


State 1352

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  774 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 1349
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670

    $default  reduce using rule 769 (array_comprehension_where)

    array_comprehension_where  go to state 1387


State 1353

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 344 (func_addr_expr)


State 1354

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 817
    "name"  shift, and go to state 56

    name_in_namespace  go to state 820
    func_addr_name     go to state 1388


State 1355

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  714 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 714 (make_struct_fields)


State 1356

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  713 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 713 (make_struct_fields)


State 1357

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 336 (expr_named_call)


State 1358

  715 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  716                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 909
    ":="  shift, and go to state 1389
    '='   shift, and go to state 911

    copy_or_move  go to state 1390


State 1359

  294 block_or_simple_block: "=>" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 294 (block_or_simple_block)


State 1360

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 419 (expr)


State 1361

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 425 (expr)


State 1362

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 429 ($@24)

    $@24  go to state 1391


State 1363

   58 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1392


State 1364

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1393
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1365

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 1394
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670


State 1366

  517 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 517 (let_variable_declaration)


State 1367

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1395


State 1368

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1396


State 1369

  719 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097

    make_struct_fields  go to state 1397


State 1370

  711 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  712                   | make_struct_fields . ',' "name" ":=" expr
  715                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  721 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1020

    $default  reduce using rule 721 (make_struct_dim_decl)


State 1371

  720 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  722 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1398

    $default  reduce using rule 771 (optional_comma)

    optional_comma  go to state 1399


State 1372

  723 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 723 (optional_make_struct_dim_decl)


State 1373

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1400


State 1374

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1401


State 1375

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670
    ')'    shift, and go to state 1402


State 1376

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097
    '('     shift, and go to state 1369

    $default  reduce using rule 724 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1370
    make_struct_dim_list           go to state 1371
    make_struct_dim_decl           go to state 1372
    optional_make_struct_dim_decl  go to state 1403


State 1377

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097
    '('     shift, and go to state 1369

    $default  reduce using rule 724 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1370
    make_struct_dim_list           go to state 1371
    make_struct_dim_decl           go to state 1372
    optional_make_struct_dim_decl  go to state 1404


State 1378

  754 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1405


State 1379

  758 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')' .

    $default  reduce using rule 758 (make_dim_decl)


State 1380

  768 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 768 (make_table_decl)


State 1381

  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1406


State 1382

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1407


State 1383

  735 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')' .

    $default  reduce using rule 735 (make_struct_decl)


State 1384

  770 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1408
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1385

  775 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 775 (array_comprehension)


State 1386

  773 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 773 (array_comprehension)


State 1387

  774 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1409


State 1388

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 347 (func_addr_expr)


State 1389

  716 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1410
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1390

  715 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1411
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1391

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 430 (expr)


State 1392

   58 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1412


State 1393

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 636
    "as"                 shift, and go to state 637
    "<<"                 shift, and go to state 638
    ">>"                 shift, and go to state 639
    "++"                 shift, and go to state 640
    "--"                 shift, and go to state 641
    "<="                 shift, and go to state 642
    ">="                 shift, and go to state 643
    "=="                 shift, and go to state 644
    "!="                 shift, and go to state 645
    "->"                 shift, and go to state 646
    "??"                 shift, and go to state 647
    "?."                 shift, and go to state 648
    "?["                 shift, and go to state 649
    "<|"                 shift, and go to state 650
    "|>"                 shift, and go to state 651
    "<<<"                shift, and go to state 652
    ">>>"                shift, and go to state 653
    "&&"                 shift, and go to state 654
    "||"                 shift, and go to state 655
    "^^"                 shift, and go to state 656
    ".."                 shift, and go to state 657
    "end of expression"  shift, and go to state 1413
    '?'                  shift, and go to state 658
    '|'                  shift, and go to state 659
    '^'                  shift, and go to state 660
    '&'                  shift, and go to state 661
    '<'                  shift, and go to state 662
    '>'                  shift, and go to state 663
    '-'                  shift, and go to state 664
    '+'                  shift, and go to state 665
    '*'                  shift, and go to state 666
    '/'                  shift, and go to state 667
    '%'                  shift, and go to state 668
    '.'                  shift, and go to state 669
    '['                  shift, and go to state 670


State 1394

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 272 (tuple_expansion_variable_declaration)


State 1395

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 477 (struct_variable_declaration_list)


State 1396

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1414


State 1397

  711 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  712                   | make_struct_fields . ',' "name" ":=" expr
  715                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  719 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1415


State 1398

  720 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  772 optional_comma: ',' .

    '('  shift, and go to state 1416

    $default  reduce using rule 772 (optional_comma)


State 1399

  722 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 722 (make_struct_dim_decl)


State 1400

  729 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 729 (make_struct_decl)


State 1401

  732 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 732 (make_struct_decl)


State 1402

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 289 (expr_type_info)


State 1403

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1417


State 1404

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1418


State 1405

  754 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')' .

    $default  reduce using rule 754 (make_dim_decl)


State 1406

  762 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')' .

    $default  reduce using rule 762 (make_dim_decl)


State 1407

  744 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 744 (make_tuple_call)


State 1408

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  770 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 770 (array_comprehension_where)


State 1409

  774 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 774 (array_comprehension)


State 1410

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  716 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 716 (make_struct_fields)


State 1411

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  715 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 636
    "as"   shift, and go to state 637
    "<<"   shift, and go to state 638
    ">>"   shift, and go to state 639
    "++"   shift, and go to state 640
    "--"   shift, and go to state 641
    "<="   shift, and go to state 642
    ">="   shift, and go to state 643
    "=="   shift, and go to state 644
    "!="   shift, and go to state 645
    "->"   shift, and go to state 646
    "??"   shift, and go to state 647
    "?."   shift, and go to state 648
    "?["   shift, and go to state 649
    "<|"   shift, and go to state 650
    "|>"   shift, and go to state 651
    "<<<"  shift, and go to state 652
    ">>>"  shift, and go to state 653
    "&&"   shift, and go to state 654
    "||"   shift, and go to state 655
    "^^"   shift, and go to state 656
    ".."   shift, and go to state 657
    '?'    shift, and go to state 658
    '|'    shift, and go to state 659
    '^'    shift, and go to state 660
    '&'    shift, and go to state 661
    '<'    shift, and go to state 662
    '>'    shift, and go to state 663
    '-'    shift, and go to state 664
    '+'    shift, and go to state 665
    '*'    shift, and go to state 666
    '/'    shift, and go to state 667
    '%'    shift, and go to state 668
    '.'    shift, and go to state 669
    '['    shift, and go to state 670

    $default  reduce using rule 715 (make_struct_fields)


State 1412

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1255
    "elif"         shift, and go to state 1256
    "static_elif"  shift, and go to state 1257

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1258
    expression_else      go to state 1419


State 1413

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 271 (tuple_expansion_variable_declaration)


State 1414

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 479 (struct_variable_declaration_list)


State 1415

  719 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 719 (make_struct_dim_list)


State 1416

  720 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 822
    "name"  shift, and go to state 1097

    make_struct_fields  go to state 1420


State 1417

  748 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 748 (make_dim_decl)


State 1418

  751 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 751 (make_dim_decl)


State 1419

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 58 (expression_else)


State 1420

  711 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  712                   | make_struct_fields . ',' "name" ":=" expr
  715                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  716                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  720 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1421


State 1421

  720 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 720 (make_struct_dim_list)
