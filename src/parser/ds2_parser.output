Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1418 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 string_builder_body: %empty
   34                    | string_builder_body character_sequence
   35                    | string_builder_body "{" expr "}"

   36 string_builder: "start of the string" string_builder_body "end of the string"

   37 reader_character_sequence: STRING_CHARACTER
   38                          | reader_character_sequence STRING_CHARACTER

   39 $@1: %empty

   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   41 options_declaration: "options" annotation_argument_list

   42 require_declaration: "require" require_module

   43 require_module_name: "name"
   44                    | '%' require_module_name
   45                    | require_module_name '.' "name"
   46                    | require_module_name '/' "name"

   47 require_module: require_module_name is_public_module
   48               | require_module_name "as" "name" is_public_module

   49 is_public_module: %empty
   50                 | "public"

   51 expect_declaration: "expect" expect_list

   52 expect_list: expect_error
   53            | expect_list ',' expect_error

   54 expect_error: "integer constant"
   55             | "integer constant" ':' "integer constant"

   56 expression_label: "label" "integer constant" ':'

   57 expression_goto: "goto" "label" "integer constant"
   58                | "goto" expr

   59 elif_or_static_elif: "elif"
   60                    | "static_elif"

   61 emit_semis: "new line, semicolon"
   62           | emit_semis "new line, semicolon"

   63 optional_emit_semis: %empty
   64                    | emit_semis

   65 expression_else: %empty
   66                | "else" optional_emit_semis expression_block
   67                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   68 if_or_static_if: "if"
   69                | "static_if"

   70 expression_else_one_liner: %empty
   71                          | "else" expression_if_one_liner

   72 expression_if_one_liner: expr
   73                        | expression_return
   74                        | expression_yield
   75                        | expression_break
   76                        | expression_continue

   77 semis: SEMICOLON
   78      | semis SEMICOLON

   79 optional_semis: %empty
   80               | semis

   81 $@2: %empty

   82 $@3: %empty

   83 expression_if_block: $@2 '{' expressions $@3 '}' expression_block_finally

   84 $@4: %empty

   85 expression_if_block: $@4 expression_if_one_liner SEMICOLON

   86 $@5: %empty

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   89 $@6: %empty

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   91 expression_unsafe: "unsafe" optional_emit_semis expression_block

   92 $@7: %empty

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis expression_block

   94 $@8: %empty

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis expression_block

   96 expression_with_alias: "assume" "name" '=' expr

   97 annotation_argument_value: string_constant
   98                          | "name"
   99                          | "integer constant"
  100                          | "floating point constant"
  101                          | "true"
  102                          | "false"

  103 annotation_argument_value_list: annotation_argument_value
  104                               | annotation_argument_value_list ',' annotation_argument_value

  105 annotation_argument_name: "name"
  106                         | "type"
  107                         | "in"

  108 annotation_argument: annotation_argument_name '=' string_constant
  109                    | annotation_argument_name '=' "name"
  110                    | annotation_argument_name '=' "integer constant"
  111                    | annotation_argument_name '=' "floating point constant"
  112                    | annotation_argument_name '=' "true"
  113                    | annotation_argument_name '=' "false"
  114                    | annotation_argument_name
  115                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  116 annotation_argument_list: annotation_argument
  117                         | annotation_argument_list ',' annotation_argument

  118 metadata_argument_list: '@' annotation_argument optional_emit_semis
  119                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  120 annotation_declaration_name: name_in_namespace
  121                            | "require"
  122                            | "private"
  123                            | "template"

  124 annotation_declaration_basic: annotation_declaration_name
  125                             | annotation_declaration_name '(' annotation_argument_list ')'

  126 annotation_declaration: annotation_declaration_basic
  127                       | '!' annotation_declaration
  128                       | annotation_declaration "&&" annotation_declaration
  129                       | annotation_declaration "||" annotation_declaration
  130                       | annotation_declaration "^^" annotation_declaration
  131                       | '(' annotation_declaration ')'
  132                       | "|>" annotation_declaration

  133 annotation_list: annotation_declaration
  134                | annotation_list ',' annotation_declaration

  135 optional_annotation_list: %empty
  136                         | '[' annotation_list ']'

  137 optional_annotation_list_with_emit_semis: %empty
  138                                         | '[' annotation_list ']' optional_emit_semis

  139 optional_function_argument_list: %empty
  140                                | '(' ')'
  141                                | '(' function_argument_list ')'

  142 optional_function_type: %empty
  143                       | ':' type_declaration

  144 function_name: "name"
  145              | "operator" '!'
  146              | "operator" '~'
  147              | "operator" "+="
  148              | "operator" "-="
  149              | "operator" "*="
  150              | "operator" "/="
  151              | "operator" "%="
  152              | "operator" "&="
  153              | "operator" "|="
  154              | "operator" "^="
  155              | "operator" "&&="
  156              | "operator" "||="
  157              | "operator" "^^="
  158              | "operator" "&&"
  159              | "operator" "||"
  160              | "operator" "^^"
  161              | "operator" '+'
  162              | "operator" '-'
  163              | "operator" '*'
  164              | "operator" '/'
  165              | "operator" '%'
  166              | "operator" '<'
  167              | "operator" '>'
  168              | "operator" ".."
  169              | "operator" "=="
  170              | "operator" "!="
  171              | "operator" "<="
  172              | "operator" ">="
  173              | "operator" '&'
  174              | "operator" '|'
  175              | "operator" '^'
  176              | "++" "operator"
  177              | "--" "operator"
  178              | "operator" "++"
  179              | "operator" "--"
  180              | "operator" "<<"
  181              | "operator" ">>"
  182              | "operator" "<<="
  183              | "operator" ">>="
  184              | "operator" "<<<"
  185              | "operator" ">>>"
  186              | "operator" "<<<="
  187              | "operator" ">>>="
  188              | "operator" '[' ']'
  189              | "operator" "?[" ']'
  190              | "operator" '.'
  191              | "operator" "?."
  192              | "operator" '.' "name"
  193              | "operator" '.' "name" ":="
  194              | "operator" "?." "name"
  195              | "operator" ":="
  196              | "operator" "delete"
  197              | "operator" "??"
  198              | "operator" "is"
  199              | "operator" "as"
  200              | "operator" "is" "name"
  201              | "operator" "as" "name"
  202              | "operator" '?' "as"
  203              | "operator" '?' "as" "name"
  204              | "bool"
  205              | "string"
  206              | "int"
  207              | "int2"
  208              | "int3"
  209              | "int4"
  210              | "uint"
  211              | "uint2"
  212              | "uint3"
  213              | "uint4"
  214              | "float"
  215              | "float2"
  216              | "float3"
  217              | "float4"
  218              | "range"
  219              | "urange"
  220              | "range64"
  221              | "urange64"
  222              | "int64"
  223              | "uint64"
  224              | "double"
  225              | "int8"
  226              | "uint8"
  227              | "int16"
  228              | "uint16"

  229 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  230 optional_public_or_private_function: %empty
  231                                    | "private"
  232                                    | "public"

  233 function_declaration_header: function_name optional_function_argument_list optional_function_type

  234 $@9: %empty

  235 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis expression_block

  236 expression_block_finally: %empty

  237 $@10: %empty

  238 $@11: %empty

  239 expression_block_finally: "finally" $@10 '{' expressions $@11 '}'

  240 $@12: %empty

  241 $@13: %empty

  242 expression_block: $@12 '{' expressions $@13 '}' expression_block_finally

  243 expr_call_pipe: expr_call expr_full_block_assumed_piped

  244 expression_any: SEMICOLON
  245               | expr_assign SEMICOLON
  246               | expression_delete SEMICOLON
  247               | expression_let
  248               | expression_while_loop
  249               | expression_unsafe
  250               | expression_with
  251               | expression_with_alias SEMICOLON
  252               | expression_for_loop
  253               | expression_break SEMICOLON
  254               | expression_continue SEMICOLON
  255               | expression_return SEMICOLON
  256               | expression_yield SEMICOLON
  257               | expression_if_then_else
  258               | expression_if_then_else_oneliner
  259               | expression_try_catch
  260               | expression_label SEMICOLON
  261               | expression_goto SEMICOLON
  262               | "pass" SEMICOLON

  263 expressions: %empty
  264            | expressions expression_any
  265            | expressions error

  266 optional_expr_list: %empty
  267                   | expr_list optional_comma

  268 optional_expr_map_tuple_list: %empty
  269                             | expr_map_tuple_list optional_comma

  270 type_declaration_no_options_list: type_declaration
  271                                 | type_declaration_no_options_list c_or_s type_declaration

  272 name_in_namespace: "name"
  273                  | "name" "::" "name"
  274                  | "::" "name"

  275 expression_delete: "delete" expr
  276                  | "delete" "explicit" expr

  277 $@14: %empty

  278 $@15: %empty

  279 new_type_declaration: '<' $@14 type_declaration '>' $@15
  280                     | structure_type_declaration

  281 expr_new: "new" new_type_declaration
  282         | "new" new_type_declaration '(' use_initializer ')'
  283         | "new" new_type_declaration '(' expr_list ')'
  284         | "new" new_type_declaration '(' make_struct_single ')'
  285         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  286         | "new" make_decl

  287 expression_break: "break"

  288 expression_continue: "continue"

  289 expression_return: "return"
  290                  | "return" expr
  291                  | "return" "<-" expr

  292 expression_yield: "yield" expr
  293                 | "yield" "<-" expr

  294 expression_try_catch: "try" expression_block "recover" expression_block

  295 kwd_let_var_or_nothing: "let"
  296                       | "var"
  297                       | %empty

  298 kwd_let: "let"
  299        | "var"

  300 optional_in_scope: "inscope"
  301                  | %empty

  302 tuple_expansion: "name"
  303                | tuple_expansion ',' "name"

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  305                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  306 expression_let: kwd_let optional_in_scope let_variable_declaration
  307               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  308               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  309 $@16: %empty

  310 $@17: %empty

  311 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 expr

  312 $@18: %empty

  313 $@19: %empty

  314 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 expr

  315 $@20: %empty

  316 $@21: %empty

  317 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 expr

  318 $@22: %empty

  319 $@23: %empty

  320 expr_type_decl: "type" '<' $@22 type_declaration '>' $@23

  321 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  322               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  323               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  324 expr_list: expr
  325          | expr_list ',' expr

  326 block_or_simple_block: expression_block
  327                      | "=>" expr
  328                      | "=>" "<-" expr

  329 block_or_lambda: '$'
  330                | '@'
  331                | '@' '@'

  332 capture_entry: '&' "name"
  333              | '=' "name"
  334              | "<-" "name"
  335              | ":=" "name"
  336              | "name" '(' "name" ')'

  337 capture_list: capture_entry
  338             | capture_list ',' capture_entry

  339 optional_capture_list: %empty
  340                      | "capture" '(' capture_list ')'

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  342 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  343                              | '{' expressions '}'

  344 expr_numeric_const: "integer constant"
  345                   | "unsigned integer constant"
  346                   | "long integer constant"
  347                   | "unsigned long integer constant"
  348                   | "unsigned int8 constant"
  349                   | "floating point constant"
  350                   | "double constant"

  351 expr_assign: expr
  352            | expr '=' expr
  353            | expr "<-" expr
  354            | expr ":=" expr
  355            | expr "&=" expr
  356            | expr "|=" expr
  357            | expr "^=" expr
  358            | expr "&&=" expr
  359            | expr "||=" expr
  360            | expr "^^=" expr
  361            | expr "+=" expr
  362            | expr "-=" expr
  363            | expr "*=" expr
  364            | expr "/=" expr
  365            | expr "%=" expr
  366            | expr "<<=" expr
  367            | expr ">>=" expr
  368            | expr "<<<=" expr
  369            | expr ">>>=" expr

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  371                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  372 expr_method_call: expr "->" "name" '(' ')'
  373                 | expr "->" "name" '(' expr_list ')'

  374 func_addr_name: name_in_namespace
  375               | "$i" '(' expr ')'

  376 func_addr_expr: '@' '@' func_addr_name

  377 $@24: %empty

  378 $@25: %empty

  379 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name

  380 $@26: %empty

  381 $@27: %empty

  382 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

  383 expr_field: expr '.' "name"
  384           | expr '.' '.' "name"
  385           | expr '.' "name" '(' ')'
  386           | expr '.' "name" '(' expr_list ')'
  387           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr '.' basic_type_declaration '(' ')'
  389           | expr '.' basic_type_declaration '(' expr_list ')'

  390 $@28: %empty

  391 $@29: %empty

  392 expr_field: expr '.' $@28 error $@29

  393 expr_call: name_in_namespace '(' ')'
  394          | name_in_namespace '(' "uninitialized" ')'
  395          | name_in_namespace '(' make_struct_single ')'
  396          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  397          | name_in_namespace '(' expr_list ')'
  398          | basic_type_declaration '(' ')'
  399          | basic_type_declaration '(' expr_list ')'

  400 expr: "null"
  401     | name_in_namespace
  402     | expr_numeric_const
  403     | expr_reader
  404     | string_builder
  405     | make_decl
  406     | "true"
  407     | "false"
  408     | expr_field
  409     | expr_mtag
  410     | '!' expr
  411     | '~' expr
  412     | '+' expr
  413     | '-' expr
  414     | expr "<<" expr
  415     | expr ">>" expr
  416     | expr "<<<" expr
  417     | expr ">>>" expr
  418     | expr '+' expr
  419     | expr '-' expr
  420     | expr '*' expr
  421     | expr '/' expr
  422     | expr '%' expr
  423     | expr '<' expr
  424     | expr '>' expr
  425     | expr "==" expr
  426     | expr "!=" expr
  427     | expr "<=" expr
  428     | expr ">=" expr
  429     | expr '&' expr
  430     | expr '|' expr
  431     | expr '^' expr
  432     | expr "&&" expr
  433     | expr "||" expr
  434     | expr "^^" expr
  435     | expr ".." expr
  436     | "++" expr
  437     | "--" expr
  438     | expr "++"
  439     | expr "--"
  440     | '(' expr_list optional_comma ')'
  441     | expr '[' expr ']'
  442     | expr '.' '[' expr ']'
  443     | expr "?[" expr ']'
  444     | expr '.' "?[" expr ']'
  445     | expr "?." "name"
  446     | expr '.' "?." "name"
  447     | func_addr_expr
  448     | expr_call
  449     | '*' expr
  450     | "deref" '(' expr ')'
  451     | "addr" '(' expr ')'
  452     | expr_generator
  453     | expr "??" expr
  454     | expr '?' expr ':' expr

  455 $@30: %empty

  456 $@31: %empty

  457 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr "is" basic_type_declaration
  459     | expr "is" "name"
  460     | expr "as" "name"

  461 $@32: %empty

  462 $@33: %empty

  463 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr "as" basic_type_declaration
  465     | expr '?' "as" "name"

  466 $@34: %empty

  467 $@35: %empty

  468 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr '?' "as" basic_type_declaration
  470     | expr_type_info
  471     | expr_type_decl
  472     | expr_cast
  473     | expr_new
  474     | expr_method_call
  475     | expr_named_call
  476     | expr_full_block
  477     | expr "<|" expr
  478     | expr "|>" expr
  479     | expr "|>" basic_type_declaration
  480     | expr_call_pipe
  481     | "unsafe" '(' expr ')'

  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  483               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  484               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  485 expr_mtag: "$$" '(' expr ')'
  486          | "$i" '(' expr ')'
  487          | "$v" '(' expr ')'
  488          | "$b" '(' expr ')'
  489          | "$a" '(' expr ')'
  490          | "..."
  491          | "$c" '(' expr ')' '(' ')'
  492          | "$c" '(' expr ')' '(' expr_list ')'
  493          | expr '.' "$f" '(' expr ')'
  494          | expr "?." "$f" '(' expr ')'
  495          | expr '.' '.' "$f" '(' expr ')'
  496          | expr '.' "?." "$f" '(' expr ')'
  497          | expr "as" "$f" '(' expr ')'
  498          | expr '?' "as" "$f" '(' expr ')'
  499          | expr "is" "$f" '(' expr ')'
  500          | '@' '@' "$c" '(' expr ')'

  501 optional_field_annotation: %empty
  502                          | metadata_argument_list

  503 optional_override: %empty
  504                  | "override"
  505                  | "sealed"

  506 optional_constant: %empty
  507                  | "const"

  508 optional_public_or_private_member_variable: %empty
  509                                           | "public"
  510                                           | "private"

  511 optional_static_member_variable: %empty
  512                                | "static"

  513 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  514 struct_variable_declaration_list: %empty
  515                                 | struct_variable_declaration_list "new line, semicolon"

  516 $@36: %empty

  517 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration SEMICOLON

  518 $@37: %empty

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON

  520 $@38: %empty

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

  522 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  523                              | "$a" '(' expr ')'

  524 function_argument_list: function_argument_declaration
  525                       | function_argument_list ';' function_argument_declaration

  526 tuple_type: type_declaration
  527           | "name" ':' type_declaration

  528 tuple_type_list: tuple_type
  529                | tuple_type_list c_or_s tuple_type

  530 tuple_alias_type_list: %empty
  531                      | tuple_type
  532                      | tuple_alias_type_list semis tuple_type

  533 variant_type: "name" ':' type_declaration

  534 variant_type_list: variant_type
  535                  | variant_type_list c_or_s variant_type

  536 variant_alias_type_list: %empty
  537                        | variant_type
  538                        | variant_alias_type_list semis variant_type

  539 copy_or_move: '='
  540             | "<-"

  541 variable_declaration: variable_name_with_pos_list
  542                     | variable_name_with_pos_list '&'
  543                     | variable_name_with_pos_list ':' type_declaration
  544                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  545                     | variable_name_with_pos_list copy_or_move expr

  546 copy_or_move_or_clone: '='
  547                      | "<-"
  548                      | ":="

  549 optional_ref: %empty
  550             | '&'

  551 let_variable_name_with_pos_list: "name"
  552                                | "$i" '(' expr ')'
  553                                | "name" "aka" "name"
  554                                | let_variable_name_with_pos_list ',' "name"
  555                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  556 global_let_variable_name_with_pos_list: "name"
  557                                       | global_let_variable_name_with_pos_list ',' "name"

  558 variable_declaration_list: %empty
  559                          | variable_declaration_list SEMICOLON
  560                          | variable_declaration_list let_variable_declaration

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  563                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  565                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  566                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  567 optional_shared: %empty
  568                | "shared"

  569 optional_public_or_private_variable: %empty
  570                                    | "private"
  571                                    | "public"

  572 global_variable_declaration_list: %empty
  573                                 | global_variable_declaration_list SEMICOLON

  574 $@39: %empty

  575 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation let_variable_declaration

  576 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  577 $@40: %empty

  578 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

  579 enum_expression: "name"
  580                | "name" '=' expr

  581 commas: COMMA
  582       | commas COMMA

  583 enum_list: %empty
  584          | enum_expression
  585          | enum_list commas enum_expression

  586 optional_public_or_private_alias: %empty
  587                                 | "private"
  588                                 | "public"

  589 $@41: %empty

  590 single_alias: optional_public_or_private_alias "name" $@41 '=' type_declaration

  591 alias_declaration: "typedef" single_alias SEMICOLON

  592 optional_public_or_private_enum: %empty
  593                                | "private"
  594                                | "public"

  595 enum_name: "name"

  596 optional_enum_basic_type_declaration: %empty
  597                                     | ':' enum_basic_type_declaration

  598 optional_commas: %empty
  599                | commas

  600 emit_commas: "new line, comma"
  601            | emit_commas "new line, comma"

  602 optional_emit_commas: %empty
  603                     | emit_commas

  604 $@42: %empty

  605 $@43: %empty

  606 $@44: %empty

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

  608 optional_structure_parent: %empty
  609                          | ':' name_in_namespace

  610 optional_sealed: %empty
  611                | "sealed"

  612 structure_name: optional_sealed "name" optional_structure_parent

  613 class_or_struct: "class"
  614                | "struct"
  615                | "template" "class"
  616                | "template" "struct"

  617 optional_public_or_private_structure: %empty
  618                                     | "private"
  619                                     | "public"

  620 optional_struct_variable_declaration_list: ';'
  621                                          | '{' struct_variable_declaration_list '}'

  622 $@45: %empty

  623 $@46: %empty

  624 $@47: %empty

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

  626 variable_name_with_pos_list: "name"
  627                            | "$i" '(' expr ')'
  628                            | "name" "aka" "name"
  629                            | variable_name_with_pos_list ',' "name"
  630                            | variable_name_with_pos_list ',' "name" "aka" "name"

  631 basic_type_declaration: "bool"
  632                       | "string"
  633                       | "int"
  634                       | "int8"
  635                       | "int16"
  636                       | "int64"
  637                       | "int2"
  638                       | "int3"
  639                       | "int4"
  640                       | "uint"
  641                       | "uint8"
  642                       | "uint16"
  643                       | "uint64"
  644                       | "uint2"
  645                       | "uint3"
  646                       | "uint4"
  647                       | "float"
  648                       | "float2"
  649                       | "float3"
  650                       | "float4"
  651                       | "void"
  652                       | "range"
  653                       | "urange"
  654                       | "range64"
  655                       | "urange64"
  656                       | "double"
  657                       | "bitfield"

  658 enum_basic_type_declaration: "int"
  659                            | "int8"
  660                            | "int16"
  661                            | "uint"
  662                            | "uint8"
  663                            | "uint16"
  664                            | "int64"
  665                            | "uint64"

  666 structure_type_declaration: name_in_namespace

  667 auto_type_declaration: "auto"
  668                      | "auto" '(' "name" ')'
  669                      | "$t" '(' expr ')'

  670 bitfield_bits: "name"
  671              | bitfield_bits ';' "name"

  672 bitfield_alias_bits: %empty
  673                    | "name"
  674                    | bitfield_alias_bits commas "name"

  675 $@48: %empty

  676 $@49: %empty

  677 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  678 c_or_s: COMMA
  679       | SEMICOLON

  680 table_type_pair: type_declaration
  681                | type_declaration c_or_s type_declaration

  682 dim_list: '[' expr ']'
  683         | '[' ']'
  684         | dim_list '[' expr ']'
  685         | dim_list '[' ']'

  686 type_declaration_no_options: type_declaration_no_options_no_dim
  687                            | type_declaration_no_options_no_dim dim_list

  688 type_declaration_no_options_no_dim: basic_type_declaration
  689                                   | auto_type_declaration
  690                                   | bitfield_type_declaration
  691                                   | structure_type_declaration

  692 $@50: %empty

  693 $@51: %empty

  694 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' $@51
  695                                   | "typedecl" '(' expr ')'
  696                                   | '$' name_in_namespace '(' optional_expr_list ')'

  697 $@52: %empty

  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  699                                   | type_declaration_no_options_no_dim '-' '[' ']'
  700                                   | type_declaration_no_options_no_dim "explicit"
  701                                   | type_declaration_no_options_no_dim "const"
  702                                   | type_declaration_no_options_no_dim '-' "const"
  703                                   | type_declaration_no_options_no_dim '&'
  704                                   | type_declaration_no_options_no_dim '-' '&'
  705                                   | type_declaration_no_options_no_dim '#'
  706                                   | type_declaration_no_options_no_dim "implicit"
  707                                   | type_declaration_no_options_no_dim '-' '#'
  708                                   | type_declaration_no_options_no_dim "==" "const"
  709                                   | type_declaration_no_options_no_dim "==" '&'
  710                                   | type_declaration_no_options_no_dim '?'

  711 $@53: %empty

  712 $@54: %empty

  713 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' $@54
  714                                   | type_declaration_no_options_no_dim "??"

  715 $@55: %empty

  716 $@56: %empty

  717 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' $@56

  718 $@57: %empty

  719 $@58: %empty

  720 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' $@58

  721 $@59: %empty

  722 $@60: %empty

  723 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' $@60
  724                                   | "block"

  725 $@61: %empty

  726 $@62: %empty

  727 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' $@62

  728 $@63: %empty

  729 $@64: %empty

  730 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  731                                   | "function"

  732 $@65: %empty

  733 $@66: %empty

  734 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' $@66

  735 $@67: %empty

  736 $@68: %empty

  737 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  738                                   | "lambda"

  739 $@69: %empty

  740 $@70: %empty

  741 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' $@70

  742 $@71: %empty

  743 $@72: %empty

  744 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  745 $@73: %empty

  746 $@74: %empty

  747 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' $@74

  748 $@75: %empty

  749 $@76: %empty

  750 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' $@76

  751 type_declaration: type_declaration_no_options
  752                 | type_declaration '|' type_declaration_no_options
  753                 | type_declaration '|' '#'

  754 $@77: %empty

  755 $@78: %empty

  756 $@79: %empty

  757 $@80: %empty

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

  759 $@81: %empty

  760 $@82: %empty

  761 $@83: %empty

  762 $@84: %empty

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

  764 $@85: %empty

  765 $@86: %empty

  766 $@87: %empty

  767 $@88: %empty

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

  769 make_decl: make_struct_decl
  770          | make_dim_decl
  771          | make_table_decl
  772          | array_comprehension
  773          | make_tuple_call

  774 make_struct_fields: "name" copy_or_move expr
  775                   | "name" ":=" expr
  776                   | make_struct_fields ',' "name" copy_or_move expr
  777                   | make_struct_fields ',' "name" ":=" expr
  778                   | "$f" '(' expr ')' copy_or_move expr
  779                   | "$f" '(' expr ')' ":=" expr
  780                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  782 make_variant_dim: make_struct_fields

  783 make_struct_single: make_struct_fields

  784 make_struct_dim_list: '(' make_struct_fields ')'
  785                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  786 make_struct_dim_decl: make_struct_fields
  787                     | make_struct_dim_list optional_comma

  788 optional_make_struct_dim_decl: make_struct_dim_decl
  789                              | %empty

  790 use_initializer: %empty
  791                | "uninitialized"

  792 $@89: %empty

  793 $@90: %empty

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  795 $@91: %empty

  796 $@92: %empty

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  798 $@93: %empty

  799 $@94: %empty

  800 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

  801 $@95: %empty

  802 $@96: %empty

  803 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  804 make_map_tuple: expr "=>" expr
  805               | expr

  806 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  807 $@97: %empty

  808 $@98: %empty

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  810 make_dim_decl: '[' expr_list optional_comma ']'

  811 $@99: %empty

  812 $@100: %empty

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  814 $@101: %empty

  815 $@102: %empty

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  817 $@103: %empty

  818 $@104: %empty

  819 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  820              | "array" '(' expr_list optional_comma ')'

  821 $@105: %empty

  822 $@106: %empty

  823 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  824              | "fixed_array" '(' expr_list optional_comma ')'

  825 $@107: %empty

  826 $@108: %empty

  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  828 expr_map_tuple_list: make_map_tuple
  829                    | expr_map_tuple_list ',' make_map_tuple

  830 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  831                | "table" '(' expr_map_tuple_list optional_comma ')'
  832                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  833                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  834 array_comprehension_where: %empty
  835                          | ';' "where" expr

  836 optional_comma: %empty
  837               | ','

  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  839                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  840                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 127 145 410
    '#' (35) 705 707 753
    '$' (36) 24 329 696 698
    '%' (37) 40 44 165 422
    '&' (38) 173 332 429 542 550 703 704 709
    '(' (40) 67 87 88 90 93 95 115 125 131 140 141 282 283 284 285 304 305 321 322 323 336 340 370 371 372 373 375 385 386 387 388 389 393 394 395 396 397 398 399 440 450 451 481 482 483 485 486 487 488 489 491 492 493 494 495 496 497 498 499 500 523 552 627 668 669 695 696 698 778 779 780 781 784 785 794 797 800 806 809 813 816 819 820 823 824 827 831 832 833 838 839 840
    ')' (41) 67 87 88 90 93 95 115 125 131 140 141 282 283 284 285 304 305 321 322 323 336 340 370 371 372 373 375 385 386 387 388 389 393 394 395 396 397 398 399 440 450 451 481 482 483 485 486 487 488 489 491 492 493 494 495 496 497 498 499 500 523 552 627 668 669 695 696 698 778 779 780 781 784 785 794 797 800 806 809 813 816 819 820 823 824 827 831 832 833 838 839 840
    '*' (42) 163 420 449
    '+' (43) 161 412 418
    ',' (44) 16 53 104 117 134 303 325 338 371 554 555 557 629 630 776 777 780 781 785 829 837
    '-' (45) 162 413 419 699 702 704 707
    '.' (46) 45 190 192 193 383 384 385 386 387 388 389 392 442 444 446 493 495 496
    '/' (47) 46 164 421
    ':' (58) 55 56 143 304 454 527 533 543 544 561 562 564 565 597 609
    ';' (59) 18 525 620 671 835 838 839 840
    '<' (60) 166 279 311 314 317 320 322 323 379 382 423 457 463 468 482 483 484 677 694 698 713 717 720 723 727 730 734 737 741 744 747 750 794 797 800 803 809 813 816 819 823 827 832 833
    '=' (61) 96 108 109 110 111 112 113 115 333 352 539 546 580 590
    '>' (62) 167 279 311 314 317 320 322 323 379 382 424 457 463 468 482 483 484 677 694 698 713 717 720 723 727 730 734 737 741 744 747 750 794 797 800 803 809 813 816 819 823 827 832 833
    '?' (63) 202 203 454 465 468 469 498 710
    '@' (64) 118 119 330 331 376 379 382 500
    '[' (91) 136 138 188 370 371 387 441 442 682 683 684 685 699 810 838 839
    ']' (93) 136 138 188 189 370 371 387 441 442 443 444 682 683 684 685 699 810 838 839
    '^' (94) 175 431
    '{' (123) 83 239 242 308 343 576 607 621 758 763 768 830 840
    '|' (124) 174 430 752 753
    '}' (125) 83 239 242 308 343 576 607 621 758 763 768 830 840
    '~' (126) 146 411
    error (256) 265 392
    "lexer error" (258)
    "capture" (259) 340
    "struct" (260) 614 616 794 813
    "class" (261) 613 615 797
    "let" (262) 295 298
    "def" (263) 229 519 521
    "while" (264) 93
    "if" (265) 68 88
    "static_if" (266) 69
    "else" (267) 66 71
    "for" (268) 90 838 839 840
    "recover" (269) 294
    "true" (270) 101 112 406
    "false" (271) 102 113 407
    "new" (272) 281 282 283 284 285 286
    "typeinfo" (273) 321 322 323
    "type" (274) 106 320 457 463 468 694
    "in" (275) 90 107 838 839 840
    "is" (276) 198 200 457 458 459 499
    "as" (277) 48 199 201 202 203 460 463 464 465 468 469 497 498
    "elif" (278) 59
    "static_elif" (279) 60
    "array" (280) 717 813 816 819 820 823
    "return" (281) 289 290 291
    "null" (282) 400
    "break" (283) 287
    "try" (284) 294
    "options" (285) 41
    "table" (286) 720 831 832 833
    "expect" (287) 51
    "const" (288) 507 701 702 708
    "require" (289) 42 121
    "operator" (290) 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
    "enum" (291) 607
    "finally" (292) 239
    "delete" (293) 196 275 276
    "deref" (294) 450
    "typedef" (295) 591
    "typedecl" (296) 695
    "with" (297) 95
    "aka" (298) 553 555 628 630
    "assume" (299) 96
    "cast" (300) 311
    "override" (301) 504
    "abstract" (302) 519
    "upcast" (303) 314
    "iterator" (304) 723 839
    "var" (305) 296 299
    "addr" (306) 451
    "continue" (307) 288
    "where" (308) 835
    "pass" (309) 262
    "reinterpret" (310) 317
    "module" (311) 26
    "public" (312) 22 50 232 509 571 588 594 619
    "label" (313) 56 57
    "goto" (314) 57 58
    "implicit" (315) 706
    "explicit" (316) 276 700
    "shared" (317) 568
    "private" (318) 23 122 231 510 570 587 593 618
    "smart_ptr" (319) 713
    "unsafe" (320) 91 481
    "inscope" (321) 300
    "static" (322) 512
    "fixed_array" (323) 824 827
    "default" (324) 803
    "uninitialized" (325) 285 394 396 791
    "bool" (326) 204 631
    "void" (327) 651
    "string" (328) 205 632
    "auto" (329) 667 668
    "int" (330) 206 633 658
    "int2" (331) 207 637
    "int3" (332) 208 638
    "int4" (333) 209 639
    "uint" (334) 210 640 661
    "bitfield" (335) 657 677 768
    "uint2" (336) 211 644
    "uint3" (337) 212 645
    "uint4" (338) 213 646
    "float" (339) 214 647
    "float2" (340) 215 648
    "float3" (341) 216 649
    "float4" (342) 217 650
    "range" (343) 218 652
    "urange" (344) 219 653
    "range64" (345) 220 654
    "urange64" (346) 221 655
    "block" (347) 724 727 730
    "int64" (348) 222 636 664
    "uint64" (349) 223 643 665
    "double" (350) 224 656
    "function" (351) 731 734 737
    "lambda" (352) 738 741 744
    "int8" (353) 225 634 659
    "uint8" (354) 226 641 662
    "int16" (355) 227 635 660
    "uint16" (356) 228 642 663
    "tuple" (357) 747 758 806 809 816
    "variant" (358) 750 763 800 819
    "generator" (359) 482 483 484
    "yield" (360) 292 293
    "sealed" (361) 505 611
    "template" (362) 123 615 616
    "+=" (363) 147 361
    "-=" (364) 148 362
    "/=" (365) 150 364
    "*=" (366) 149 363
    "%=" (367) 151 365
    "&=" (368) 152 355
    "|=" (369) 153 356
    "^=" (370) 154 357
    "<<" (371) 180 414
    ">>" (372) 181 415
    "++" (373) 176 178 436 438
    "--" (374) 177 179 437 439
    "<=" (375) 171 427
    "<<=" (376) 182 366
    ">>=" (377) 183 367
    ">=" (378) 172 428
    "==" (379) 169 425 708 709
    "!=" (380) 170 426
    "->" (381) 372 373
    "<-" (382) 291 293 328 334 353 540 547
    "??" (383) 197 453 714
    "?." (384) 191 194 445 446 494 496
    "?[" (385) 189 443 444
    "<|" (386) 477
    "|>" (387) 132 478 479
    ":=" (388) 193 195 335 354 548 775 777 779 781
    "<<<" (389) 184 416
    ">>>" (390) 185 417
    "<<<=" (391) 186 368
    ">>>=" (392) 187 369
    "=>" (393) 327 328 804
    "::" (394) 273 274
    "&&" (395) 128 158 432
    "||" (396) 129 159 433
    "^^" (397) 130 160 434
    "&&=" (398) 155 358
    "||=" (399) 156 359
    "^^=" (400) 157 360
    ".." (401) 168 435
    "$$" (402) 485
    "$i" (403) 375 486 552 627
    "$v" (404) 487
    "$b" (405) 488
    "$a" (406) 489 523
    "$t" (407) 669
    "$c" (408) 491 492 500
    "$f" (409) 493 494 495 496 497 498 499 778 779 780 781
    "..." (410) 490
    "integer constant" <i> (411) 54 55 56 57 99 110 344
    "long integer constant" <i64> (412) 346
    "unsigned integer constant" <ui> (413) 345
    "unsigned long integer constant" <ui64> (414) 347
    "unsigned int8 constant" <ui> (415) 348
    "floating point constant" <fd> (416) 100 111 349
    "double constant" <d> (417) 350
    "name" <s> (418) 25 43 45 46 48 96 98 105 109 144 192 193 194 200 201 203 272 273 274 302 303 322 323 332 333 334 335 336 372 373 383 384 385 386 387 445 446 459 460 465 527 533 551 553 554 555 556 557 579 580 590 595 612 626 628 629 630 668 670 671 673 674 758 763 768 774 775 776 777
    "new line, comma" (419) 17 600 601
    "new line, semicolon" (420) 19 61 62 515
    "start of the string" (421) 31 32 36
    STRING_CHARACTER <ch> (422) 27 29 37 38
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 36
    "{" (425) 35
    "}" (426) 35
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 581 582 678
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 77 78 85 88 244 245 246 251 253 254 255 256 260 261 262 304 305 517 519 559 561 562 563 564 565 566 573 591 679
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 34
    string_constant <s> (217)
        on left: 31 32
        on right: 97 108
    string_builder_body <pExpression> (218)
        on left: 33 34 35
        on right: 34 35 36
    string_builder <pExpression> (219)
        on left: 36
        on right: 404
    reader_character_sequence (220)
        on left: 37 38
        on right: 38 40
    expr_reader <pExpression> (221)
        on left: 40
        on right: 20 403
    $@1 (222)
        on left: 39
        on right: 40
    options_declaration (223)
        on left: 41
        on right: 9
    require_declaration (224)
        on left: 42
        on right: 8
    require_module_name <s> (225)
        on left: 43 44 45 46
        on right: 44 45 46 47 48
    require_module (226)
        on left: 47 48
        on right: 42
    is_public_module <b> (227)
        on left: 49 50
        on right: 47 48
    expect_declaration (228)
        on left: 51
        on right: 7
    expect_list (229)
        on left: 52 53
        on right: 51 53
    expect_error (230)
        on left: 54 55
        on right: 52 53
    expression_label <pExpression> (231)
        on left: 56
        on right: 260
    expression_goto <pExpression> (232)
        on left: 57 58
        on right: 261
    elif_or_static_elif <b> (233)
        on left: 59 60
        on right: 67
    emit_semis (234)
        on left: 61 62
        on right: 62 64
    optional_emit_semis (235)
        on left: 63 64
        on right: 66 67 87 90 91 93 95 118 119 138 235 341 342 484 521 625 758 763
    expression_else <pExpression> (236)
        on left: 65 66 67
        on right: 67 87
    if_or_static_if <b> (237)
        on left: 68 69
        on right: 87
    expression_else_one_liner <pExpression> (238)
        on left: 70 71
        on right: 88
    expression_if_one_liner <pExpression> (239)
        on left: 72 73 74 75 76
        on right: 71 85 88
    semis (240)
        on left: 77 78
        on right: 78 80 532 538
    optional_semis (241)
        on left: 79 80
        on right: 758 763
    expression_if_block <pExpression> (242)
        on left: 83 85
        on right: 87
    $@2 (243)
        on left: 81
        on right: 83
    $@3 (244)
        on left: 82
        on right: 83
    $@4 (245)
        on left: 84
        on right: 85
    expression_if_then_else <pExpression> (246)
        on left: 87
        on right: 257
    $@5 (247)
        on left: 86
        on right: 87
    expression_if_then_else_oneliner <pExpression> (248)
        on left: 88
        on right: 258
    expression_for_loop <pExpression> (249)
        on left: 90
        on right: 252
    $@6 (250)
        on left: 89
        on right: 90
    expression_unsafe <pExpression> (251)
        on left: 91
        on right: 249
    expression_while_loop <pExpression> (252)
        on left: 93
        on right: 248
    $@7 (253)
        on left: 92
        on right: 93
    expression_with <pExpression> (254)
        on left: 95
        on right: 250
    $@8 (255)
        on left: 94
        on right: 95
    expression_with_alias <pExpression> (256)
        on left: 96
        on right: 251
    annotation_argument_value <aa> (257)
        on left: 97 98 99 100 101 102
        on right: 103 104
    annotation_argument_value_list <aaList> (258)
        on left: 103 104
        on right: 104 115
    annotation_argument_name <s> (259)
        on left: 105 106 107
        on right: 108 109 110 111 112 113 114 115
    annotation_argument <aa> (260)
        on left: 108 109 110 111 112 113 114 115
        on right: 116 117 118 119
    annotation_argument_list <aaList> (261)
        on left: 116 117
        on right: 41 117 125
    metadata_argument_list <aaList> (262)
        on left: 118 119
        on right: 119 502
    annotation_declaration_name <s> (263)
        on left: 120 121 122 123
        on right: 124 125
    annotation_declaration_basic <fa> (264)
        on left: 124 125
        on right: 126
    annotation_declaration <fa> (265)
        on left: 126 127 128 129 130 131 132
        on right: 127 128 129 130 131 132 133 134
    annotation_list <faList> (266)
        on left: 133 134
        on right: 134 136 138
    optional_annotation_list <faList> (267)
        on left: 135 136
        on right: 341 342 607
    optional_annotation_list_with_emit_semis <faList> (268)
        on left: 137 138
        on right: 229 519 521 625
    optional_function_argument_list <pVarDeclList> (269)
        on left: 139 140 141
        on right: 233 341 342 382 730 737 744
    optional_function_type <pTypeDecl> (270)
        on left: 142 143
        on right: 233 341 342 382 730 737 744
    function_name <s> (271)
        on left: 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228
        on right: 233
    global_function_declaration (272)
        on left: 229
        on right: 6
    optional_public_or_private_function <b> (273)
        on left: 230 231 232
        on right: 235
    function_declaration_header <pFuncDecl> (274)
        on left: 233
        on right: 235 519 521
    function_declaration <pFuncDecl> (275)
        on left: 235
        on right: 229
    $@9 (276)
        on left: 234
        on right: 235
    expression_block_finally <pExpression> (277)
        on left: 236 239
        on right: 83 242
    $@10 (278)
        on left: 237
        on right: 239
    $@11 (279)
        on left: 238
        on right: 239
    expression_block <pExpression> (280)
        on left: 242
        on right: 66 67 90 91 93 95 235 294 326 342 484 521
    $@12 (281)
        on left: 240
        on right: 242
    $@13 (282)
        on left: 241
        on right: 242
    expr_call_pipe <pExpression> (283)
        on left: 243
        on right: 480
    expression_any <pExpression> (284)
        on left: 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262
        on right: 264
    expressions <pExpression> (285)
        on left: 263 264 265
        on right: 83 239 242 264 265 343
    optional_expr_list <pExpression> (286)
        on left: 266 267
        on right: 696 698 823
    optional_expr_map_tuple_list <pExpression> (287)
        on left: 268 269
        on right: 832 833
    type_declaration_no_options_list <pTypeDeclList> (288)
        on left: 270 271
        on right: 271 698
    name_in_namespace <s> (289)
        on left: 272 273 274
        on right: 40 120 321 322 323 370 371 374 393 394 395 396 397 401 609 666 696 698
    expression_delete <pExpression> (290)
        on left: 275 276
        on right: 246
    new_type_declaration <pTypeDecl> (291)
        on left: 279 280
        on right: 281 282 283 284 285
    $@14 (292)
        on left: 277
        on right: 279
    $@15 (293)
        on left: 278
        on right: 279
    expr_new <pExpression> (294)
        on left: 281 282 283 284 285 286
        on right: 473
    expression_break <pExpression> (295)
        on left: 287
        on right: 75 253
    expression_continue <pExpression> (296)
        on left: 288
        on right: 76 254
    expression_return <pExpression> (297)
        on left: 289 290 291
        on right: 73 255
    expression_yield <pExpression> (298)
        on left: 292 293
        on right: 74 256
    expression_try_catch <pExpression> (299)
        on left: 294
        on right: 259
    kwd_let_var_or_nothing <b> (300)
        on left: 295 296 297
        on right: 522
    kwd_let <b> (301)
        on left: 298 299
        on right: 306 307 308 576 578
    optional_in_scope <b> (302)
        on left: 300 301
        on right: 306 307 308
    tuple_expansion <pNameList> (303)
        on left: 302 303
        on right: 303 304 305
    tuple_expansion_variable_declaration <pVarDecl> (304)
        on left: 304 305
        on right: 307
    expression_let <pExpression> (305)
        on left: 306 307 308
        on right: 247
    expr_cast <pExpression> (306)
        on left: 311 314 317
        on right: 472
    $@16 (307)
        on left: 309
        on right: 311
    $@17 (308)
        on left: 310
        on right: 311
    $@18 (309)
        on left: 312
        on right: 314
    $@19 (310)
        on left: 313
        on right: 314
    $@20 (311)
        on left: 315
        on right: 317
    $@21 (312)
        on left: 316
        on right: 317
    expr_type_decl <pExpression> (313)
        on left: 320
        on right: 471
    $@22 (314)
        on left: 318
        on right: 320
    $@23 (315)
        on left: 319
        on right: 320
    expr_type_info <pExpression> (316)
        on left: 321 322 323
        on right: 470
    expr_list <pExpression> (317)
        on left: 324 325
        on right: 90 267 283 325 371 373 386 389 397 399 440 492 806 810 820 824 827 838 839 840
    block_or_simple_block <pExpression> (318)
        on left: 326 327 328
        on right: 341
    block_or_lambda <i> (319)
        on left: 329 330 331
        on right: 341 342
    capture_entry <pCapt> (320)
        on left: 332 333 334 335 336
        on right: 337 338
    capture_list <pCaptList> (321)
        on left: 337 338
        on right: 338 340
    optional_capture_list <pCaptList> (322)
        on left: 339 340
        on right: 341 342 482 483 484
    expr_full_block <pExpression> (323)
        on left: 341
        on right: 476
    expr_full_block_assumed_piped <pExpression> (324)
        on left: 342 343
        on right: 243
    expr_numeric_const <pExpression> (325)
        on left: 344 345 346 347 348 349 350
        on right: 402
    expr_assign <pExpression> (326)
        on left: 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369
        on right: 245
    expr_named_call <pExpression> (327)
        on left: 370 371
        on right: 475
    expr_method_call <pExpression> (328)
        on left: 372 373
        on right: 474
    func_addr_name <pExpression> (329)
        on left: 374 375
        on right: 376 379 382
    func_addr_expr <pExpression> (330)
        on left: 376 379 382
        on right: 447
    $@24 (331)
        on left: 377
        on right: 379
    $@25 (332)
        on left: 378
        on right: 379
    $@26 (333)
        on left: 380
        on right: 382
    $@27 (334)
        on left: 381
        on right: 382
    expr_field <pExpression> (335)
        on left: 383 384 385 386 387 388 389 392
        on right: 408
    $@28 (336)
        on left: 390
        on right: 392
    $@29 (337)
        on left: 391
        on right: 392
    expr_call <pExpression> (338)
        on left: 393 394 395 396 397 398 399
        on right: 243 448
    expr <pExpression> (339)
        on left: 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 457 458 459 460 463 464 465 468 469 470 471 472 473 474 475 476 477 478 479 480 481
        on right
    $@30 (340)
        on left: 455
        on right: 457
    $@31 (341)
        on left: 456
        on right: 457
    $@32 (342)
        on left: 461
        on right: 463
    $@33 (343)
        on left: 462
        on right: 463
    $@34 (344)
        on left: 466
        on right: 468
    $@35 (345)
        on left: 467
        on right: 468
    expr_generator <pExpression> (346)
        on left: 482 483 484
        on right: 452
    expr_mtag <pExpression> (347)
        on left: 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500
        on right: 409
    optional_field_annotation <aaList> (348)
        on left: 501 502
        on right: 513 522 575 578
    optional_override <i> (349)
        on left: 503 504 505
        on right: 513 521
    optional_constant <b> (350)
        on left: 506 507
        on right: 519 521
    optional_public_or_private_member_variable <b> (351)
        on left: 508 509 510
        on right: 513 519 521
    optional_static_member_variable <b> (352)
        on left: 511 512
        on right: 513 521
    structure_variable_declaration <pVarDecl> (353)
        on left: 513
        on right: 517
    struct_variable_declaration_list <pVarDeclList> (354)
        on left: 514 515 517 519 521
        on right: 515 517 519 521 621
    $@36 (355)
        on left: 516
        on right: 517
    $@37 (356)
        on left: 518
        on right: 519
    $@38 (357)
        on left: 520
        on right: 521
    function_argument_declaration <pVarDecl> (358)
        on left: 522 523
        on right: 524 525
    function_argument_list <pVarDeclList> (359)
        on left: 524 525
        on right: 141 525
    tuple_type <pVarDecl> (360)
        on left: 526 527
        on right: 528 529 531 532
    tuple_type_list <pVarDeclList> (361)
        on left: 528 529
        on right: 529 747
    tuple_alias_type_list <pVarDeclList> (362)
        on left: 530 531 532
        on right: 532 758
    variant_type <pVarDecl> (363)
        on left: 533
        on right: 534 535 537 538
    variant_type_list <pVarDeclList> (364)
        on left: 534 535
        on right: 535 750
    variant_alias_type_list <pVarDeclList> (365)
        on left: 536 537 538
        on right: 538 763
    copy_or_move <b> (366)
        on left: 539 540
        on right: 544 545 774 776 778 780
    variable_declaration <pVarDecl> (367)
        on left: 541 542 543 544 545
        on right: 513 522
    copy_or_move_or_clone <i> (368)
        on left: 546 547 548
        on right: 304 305 562 563 565 566
    optional_ref <b> (369)
        on left: 549 550
        on right: 305 563 566
    let_variable_name_with_pos_list <pNameWithPosList> (370)
        on left: 551 552 553 554 555
        on right: 554 555 561 562 563
    global_let_variable_name_with_pos_list <pNameWithPosList> (371)
        on left: 556 557
        on right: 557 564 565 566
    variable_declaration_list <pVarDeclList> (372)
        on left: 558 559 560
        on right: 308 559 560
    let_variable_declaration <pVarDecl> (373)
        on left: 561 562 563
        on right: 306 560 575
    global_let_variable_declaration <pVarDecl> (374)
        on left: 564 565 566
        on right: 578
    optional_shared <b> (375)
        on left: 567 568
        on right: 26 576 578
    optional_public_or_private_variable <b> (376)
        on left: 569 570 571
        on right: 576 578
    global_variable_declaration_list <pVarDeclList> (377)
        on left: 572 573 575
        on right: 573 575 576
    $@39 (378)
        on left: 574
        on right: 575
    global_let (379)
        on left: 576 578
        on right: 5
    $@40 (380)
        on left: 577
        on right: 578
    enum_expression <pEnumPair> (381)
        on left: 579 580
        on right: 584 585
    commas (382)
        on left: 581 582
        on right: 582 585 599 674
    enum_list <pEnum> (383)
        on left: 583 584 585
        on right: 585 607
    optional_public_or_private_alias <b> (384)
        on left: 586 587 588
        on right: 590 758 763 768
    single_alias (385)
        on left: 590
        on right: 591
    $@41 (386)
        on left: 589
        on right: 590
    alias_declaration (387)
        on left: 591
        on right: 10
    optional_public_or_private_enum <b> (388)
        on left: 592 593 594
        on right: 607
    enum_name <pEnum> (389)
        on left: 595
        on right: 607
    optional_enum_basic_type_declaration <type> (390)
        on left: 596 597
        on right: 607
    optional_commas (391)
        on left: 598 599
        on right: 607 768
    emit_commas (392)
        on left: 600 601
        on right: 601 603
    optional_emit_commas (393)
        on left: 602 603
        on right: 607 768
    enum_declaration (394)
        on left: 607
        on right: 4
    $@42 (395)
        on left: 604
        on right: 607
    $@43 (396)
        on left: 605
        on right: 607
    $@44 (397)
        on left: 606
        on right: 607
    optional_structure_parent <s> (398)
        on left: 608 609
        on right: 612
    optional_sealed <b> (399)
        on left: 610 611
        on right: 612
    structure_name <pStructure> (400)
        on left: 612
        on right: 625
    class_or_struct <i> (401)
        on left: 613 614 615 616
        on right: 625
    optional_public_or_private_structure <b> (402)
        on left: 617 618 619
        on right: 625
    optional_struct_variable_declaration_list <pVarDeclList> (403)
        on left: 620 621
        on right: 625
    structure_declaration (404)
        on left: 625
        on right: 3
    $@45 (405)
        on left: 622
        on right: 625
    $@46 (406)
        on left: 623
        on right: 625
    $@47 (407)
        on left: 624
        on right: 625
    variable_name_with_pos_list <pNameWithPosList> (408)
        on left: 626 627 628 629 630
        on right: 90 541 542 543 544 545 629 630 838 839 840
    basic_type_declaration <type> (409)
        on left: 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657
        on right: 388 389 398 399 458 464 469 479 688
    enum_basic_type_declaration <type> (410)
        on left: 658 659 660 661 662 663 664 665
        on right: 597
    structure_type_declaration <pTypeDecl> (411)
        on left: 666
        on right: 280 691
    auto_type_declaration <pTypeDecl> (412)
        on left: 667 668 669
        on right: 689
    bitfield_bits <pNameList> (413)
        on left: 670 671
        on right: 671 677
    bitfield_alias_bits <pNameList> (414)
        on left: 672 673 674
        on right: 674 768
    bitfield_type_declaration <pTypeDecl> (415)
        on left: 677
        on right: 690
    $@48 (416)
        on left: 675
        on right: 677
    $@49 (417)
        on left: 676
        on right: 677
    c_or_s (418)
        on left: 678 679
        on right: 271 323 529 535 681 833
    table_type_pair <aTypePair> (419)
        on left: 680 681
        on right: 720
    dim_list <pTypeDecl> (420)
        on left: 682 683 684 685
        on right: 684 685 687
    type_declaration_no_options <pTypeDecl> (421)
        on left: 686 687
        on right: 304 311 314 317 379 457 482 483 484 561 562 564 565 751 752 794 797 800 803 809 813 816 819 823 827 832 833
    type_declaration_no_options_no_dim <pTypeDecl> (422)
        on left: 688 689 690 691 694 695 696 698 699 700 701 702 703 704 705 706 707 708 709 710 713 714 717 720 723 724 727 730 731 734 737 738 741 744 747 750
        on right: 686 687 699 700 701 702 703 704 705 706 707 708 709 710 714
    $@50 (423)
        on left: 692
        on right: 694
    $@51 (424)
        on left: 693
        on right: 694
    $@52 (425)
        on left: 697
        on right: 698
    $@53 (426)
        on left: 711
        on right: 713
    $@54 (427)
        on left: 712
        on right: 713
    $@55 (428)
        on left: 715
        on right: 717
    $@56 (429)
        on left: 716
        on right: 717
    $@57 (430)
        on left: 718
        on right: 720
    $@58 (431)
        on left: 719
        on right: 720
    $@59 (432)
        on left: 721
        on right: 723
    $@60 (433)
        on left: 722
        on right: 723
    $@61 (434)
        on left: 725
        on right: 727
    $@62 (435)
        on left: 726
        on right: 727
    $@63 (436)
        on left: 728
        on right: 730
    $@64 (437)
        on left: 729
        on right: 730
    $@65 (438)
        on left: 732
        on right: 734
    $@66 (439)
        on left: 733
        on right: 734
    $@67 (440)
        on left: 735
        on right: 737
    $@68 (441)
        on left: 736
        on right: 737
    $@69 (442)
        on left: 739
        on right: 741
    $@70 (443)
        on left: 740
        on right: 741
    $@71 (444)
        on left: 742
        on right: 744
    $@72 (445)
        on left: 743
        on right: 744
    $@73 (446)
        on left: 745
        on right: 747
    $@74 (447)
        on left: 746
        on right: 747
    $@75 (448)
        on left: 748
        on right: 750
    $@76 (449)
        on left: 749
        on right: 750
    type_declaration <pTypeDecl> (450)
        on left: 751 752 753
        on right: 143 270 271 279 320 463 468 526 527 533 543 544 590 680 681 694 713 717 723 727 734 741 752 753
    tuple_alias_declaration (451)
        on left: 758
        on right: 12
    $@77 (452)
        on left: 754
        on right: 758
    $@78 (453)
        on left: 755
        on right: 758
    $@79 (454)
        on left: 756
        on right: 758
    $@80 (455)
        on left: 757
        on right: 758
    variant_alias_declaration (456)
        on left: 763
        on right: 11
    $@81 (457)
        on left: 759
        on right: 763
    $@82 (458)
        on left: 760
        on right: 763
    $@83 (459)
        on left: 761
        on right: 763
    $@84 (460)
        on left: 762
        on right: 763
    bitfield_alias_declaration (461)
        on left: 768
        on right: 13
    $@85 (462)
        on left: 764
        on right: 768
    $@86 (463)
        on left: 765
        on right: 768
    $@87 (464)
        on left: 766
        on right: 768
    $@88 (465)
        on left: 767
        on right: 768
    make_decl <pExpression> (466)
        on left: 769 770 771 772 773
        on right: 286 405
    make_struct_fields <pMakeStruct> (467)
        on left: 774 775 776 777 778 779 780 781
        on right: 370 371 387 776 777 780 781 782 783 784 785 786
    make_variant_dim <pExpression> (468)
        on left: 782
        on right: 800 819
    make_struct_single <pExpression> (469)
        on left: 783
        on right: 284 285 395 396
    make_struct_dim_list <pExpression> (470)
        on left: 784 785
        on right: 785 787
    make_struct_dim_decl <pExpression> (471)
        on left: 786 787
        on right: 788
    optional_make_struct_dim_decl <pExpression> (472)
        on left: 788 789
        on right: 794 797 809 813 816
    use_initializer <b> (473)
        on left: 790 791
        on right: 282 794 797 803 809 813 816
    make_struct_decl <pExpression> (474)
        on left: 794 797 800 803
        on right: 769
    $@89 (475)
        on left: 792
        on right: 794
    $@90 (476)
        on left: 793
        on right: 794
    $@91 (477)
        on left: 795
        on right: 797
    $@92 (478)
        on left: 796
        on right: 797
    $@93 (479)
        on left: 798
        on right: 800
    $@94 (480)
        on left: 799
        on right: 800
    $@95 (481)
        on left: 801
        on right: 803
    $@96 (482)
        on left: 802
        on right: 803
    make_map_tuple <pExpression> (483)
        on left: 804 805
        on right: 828 829 840
    make_tuple_call <pExpression> (484)
        on left: 806 809
        on right: 773
    $@97 (485)
        on left: 807
        on right: 809
    $@98 (486)
        on left: 808
        on right: 809
    make_dim_decl <pExpression> (487)
        on left: 810 813 816 819 820 823 824 827
        on right: 770
    $@99 (488)
        on left: 811
        on right: 813
    $@100 (489)
        on left: 812
        on right: 813
    $@101 (490)
        on left: 814
        on right: 816
    $@102 (491)
        on left: 815
        on right: 816
    $@103 (492)
        on left: 817
        on right: 819
    $@104 (493)
        on left: 818
        on right: 819
    $@105 (494)
        on left: 821
        on right: 823
    $@106 (495)
        on left: 822
        on right: 823
    $@107 (496)
        on left: 825
        on right: 827
    $@108 (497)
        on left: 826
        on right: 827
    expr_map_tuple_list <pExpression> (498)
        on left: 828 829
        on right: 269 829 830 831
    make_table_decl <pExpression> (499)
        on left: 830 831 832 833
        on right: 771
    array_comprehension_where <pExpression> (500)
        on left: 834 835
        on right: 838 839 840
    optional_comma <b> (501)
        on left: 836 837
        on right: 267 269 440 787 806 810 820 824 827 830 831
    array_comprehension <pExpression> (502)
        on left: 838 839 840
        on right: 772


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    "enum"    reduce using rule 135 (optional_annotation_list)
    $default  reduce using rule 137 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list                  go to state 24
    optional_annotation_list_with_emit_semis  go to state 25
    global_function_declaration               go to state 26
    kwd_let                                   go to state 27
    global_let                                go to state 28
    alias_declaration                         go to state 29
    enum_declaration                          go to state 30
    structure_declaration                     go to state 31
    tuple_alias_declaration                   go to state 32
    variant_alias_declaration                 go to state 33
    bitfield_alias_declaration                go to state 34


State 2

    0 $accept: program $end .

    $default  accept


State 3

  298 kwd_let: "let" .

    $default  reduce using rule 298 (kwd_let)


State 4

   41 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 40


State 5

   51 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 41

    expect_list   go to state 42
    expect_error  go to state 43


State 6

   42 require_declaration: "require" . require_module

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 46
    require_module       go to state 47


State 7

  591 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 586 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 50
    single_alias                      go to state 51


State 8

  299 kwd_let: "var" .

    $default  reduce using rule 299 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 52
    '$'     shift, and go to state 53

    module_name  go to state 54


State 10

  768 bitfield_alias_declaration: "bitfield" . $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 764 ($@85)

    $@85  go to state 55


State 11

  758 tuple_alias_declaration: "tuple" . $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 754 ($@77)

    $@77  go to state 56


State 12

  763 variant_alias_declaration: "variant" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 759 ($@81)

    $@81  go to state 57


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   40 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  136 optional_annotation_list: '[' . annotation_list ']'
  138 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 74


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  607 enum_declaration: optional_annotation_list . "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "enum"  shift, and go to state 75


State 25

  229 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  625 structure_declaration: optional_annotation_list_with_emit_semis . $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "def"  shift, and go to state 76

    $default  reduce using rule 622 ($@45)

    $@45  go to state 77


State 26

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 27

  576 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  578           | kwd_let . optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 78

    $default  reduce using rule 567 (optional_shared)

    optional_shared  go to state 79


State 28

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 29

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 30

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 31

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 32

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 33

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 34

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 35

  106 annotation_argument_name: "type" .

    $default  reduce using rule 106 (annotation_argument_name)


State 36

  107 annotation_argument_name: "in" .

    $default  reduce using rule 107 (annotation_argument_name)


State 37

  105 annotation_argument_name: "name" .

    $default  reduce using rule 105 (annotation_argument_name)


State 38

  108 annotation_argument: annotation_argument_name . '=' string_constant
  109                    | annotation_argument_name . '=' "name"
  110                    | annotation_argument_name . '=' "integer constant"
  111                    | annotation_argument_name . '=' "floating point constant"
  112                    | annotation_argument_name . '=' "true"
  113                    | annotation_argument_name . '=' "false"
  114                    | annotation_argument_name .
  115                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 80

    $default  reduce using rule 114 (annotation_argument)


State 39

  116 annotation_argument_list: annotation_argument .

    $default  reduce using rule 116 (annotation_argument_list)


State 40

   41 options_declaration: "options" annotation_argument_list .
  117 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 81

    $default  reduce using rule 41 (options_declaration)


State 41

   54 expect_error: "integer constant" .
   55             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 82

    $default  reduce using rule 54 (expect_error)


State 42

   51 expect_declaration: "expect" expect_list .
   53 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 83

    $default  reduce using rule 51 (expect_declaration)


State 43

   52 expect_list: expect_error .

    $default  reduce using rule 52 (expect_list)


State 44

   43 require_module_name: "name" .

    $default  reduce using rule 43 (require_module_name)


State 45

   44 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 84


State 46

   45 require_module_name: require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"
   47 require_module: require_module_name . is_public_module
   48               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 85
    "public"  shift, and go to state 86
    '/'       shift, and go to state 87
    '.'       shift, and go to state 88

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 89


State 47

   42 require_declaration: "require" require_module .

    $default  reduce using rule 42 (require_declaration)


State 48

  588 optional_public_or_private_alias: "public" .

    $default  reduce using rule 588 (optional_public_or_private_alias)


State 49

  587 optional_public_or_private_alias: "private" .

    $default  reduce using rule 587 (optional_public_or_private_alias)


State 50

  590 single_alias: optional_public_or_private_alias . "name" $@41 '=' type_declaration

    "name"  shift, and go to state 90


State 51

  591 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 91


State 52

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 53

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 54

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 78

    $default  reduce using rule 567 (optional_shared)

    optional_shared  go to state 92


State 55

  768 bitfield_alias_declaration: "bitfield" $@85 . optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 586 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  758 tuple_alias_declaration: "tuple" $@77 . optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 586 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  763 variant_alias_declaration: "variant" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 586 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95


State 58

  274 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 96


State 59

  272 name_in_namespace: "name" .
  273                  | "name" . "::" "name"

    "::"  shift, and go to state 97

    $default  reduce using rule 272 (name_in_namespace)


State 60

   40 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 39 ($@1)

    $@1  go to state 98


State 61

  121 annotation_declaration_name: "require" .

    $default  reduce using rule 121 (annotation_declaration_name)


State 62

  122 annotation_declaration_name: "private" .

    $default  reduce using rule 122 (annotation_declaration_name)


State 63

  123 annotation_declaration_name: "template" .

    $default  reduce using rule 123 (annotation_declaration_name)


State 64

  132 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 99
    name_in_namespace             go to state 71


State 65

  127 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 100
    name_in_namespace             go to state 71


State 66

  131 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 101
    name_in_namespace             go to state 71


State 67

  124 annotation_declaration_basic: annotation_declaration_name .
  125                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 102

    $default  reduce using rule 124 (annotation_declaration_basic)


State 68

  126 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 126 (annotation_declaration)


State 69

  128 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  129                       | annotation_declaration . "||" annotation_declaration
  130                       | annotation_declaration . "^^" annotation_declaration
  133 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 103
    "||"  shift, and go to state 104
    "^^"  shift, and go to state 105

    $default  reduce using rule 133 (annotation_list)


State 70

  134 annotation_list: annotation_list . ',' annotation_declaration
  136 optional_annotation_list: '[' annotation_list . ']'
  138 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 106
    ']'  shift, and go to state 107


State 71

  120 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 120 (annotation_declaration_name)


State 72

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 73

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 74

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 75

  607 enum_declaration: optional_annotation_list "enum" . $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    $default  reduce using rule 604 ($@42)

    $@42  go to state 108


State 76

  229 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 230 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 77

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 . class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 113
    "class"     shift, and go to state 114
    "template"  shift, and go to state 115

    class_or_struct  go to state 116


State 78

  568 optional_shared: "shared" .

    $default  reduce using rule 568 (optional_shared)


State 79

  576 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  578           | kwd_let optional_shared . optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 117
    "private"  shift, and go to state 118

    $default  reduce using rule 569 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 119


State 80

  108 annotation_argument: annotation_argument_name '=' . string_constant
  109                    | annotation_argument_name '=' . "name"
  110                    | annotation_argument_name '=' . "integer constant"
  111                    | annotation_argument_name '=' . "floating point constant"
  112                    | annotation_argument_name '=' . "true"
  113                    | annotation_argument_name '=' . "false"
  115                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 120
    "false"                    shift, and go to state 121
    "integer constant"         shift, and go to state 122
    "floating point constant"  shift, and go to state 123
    "name"                     shift, and go to state 124
    "start of the string"      shift, and go to state 125
    '('                        shift, and go to state 126

    string_constant  go to state 127


State 81

  117 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 128


State 82

   55 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 129


State 83

   53 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 41

    expect_error  go to state 130


State 84

   44 require_module_name: '%' require_module_name .
   45                    | require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"

    '.'  shift, and go to state 88

    $default  reduce using rule 44 (require_module_name)


State 85

   48 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 131


State 86

   50 is_public_module: "public" .

    $default  reduce using rule 50 (is_public_module)


State 87

   46 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 132


State 88

   45 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 133


State 89

   47 require_module: require_module_name is_public_module .

    $default  reduce using rule 47 (require_module)


State 90

  590 single_alias: optional_public_or_private_alias "name" . $@41 '=' type_declaration

    $default  reduce using rule 589 ($@41)

    $@41  go to state 134


State 91

  591 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 591 (alias_declaration)


State 92

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 135
    "private"  shift, and go to state 136

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 137


State 93

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias . "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "name"  shift, and go to state 138


State 94

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias . "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "name"  shift, and go to state 139


State 95

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 140


State 96

  274 name_in_namespace: "::" "name" .

    $default  reduce using rule 274 (name_in_namespace)


State 97

  273 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 141


State 98

   40 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 142

    reader_character_sequence  go to state 143


State 99

  128 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  129                       | annotation_declaration . "||" annotation_declaration
  130                       | annotation_declaration . "^^" annotation_declaration
  132                       | "|>" annotation_declaration .

    $default  reduce using rule 132 (annotation_declaration)


State 100

  127 annotation_declaration: '!' annotation_declaration .
  128                       | annotation_declaration . "&&" annotation_declaration
  129                       | annotation_declaration . "||" annotation_declaration
  130                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 127 (annotation_declaration)


State 101

  128 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  129                       | annotation_declaration . "||" annotation_declaration
  130                       | annotation_declaration . "^^" annotation_declaration
  131                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 103
    "||"  shift, and go to state 104
    "^^"  shift, and go to state 105
    ')'   shift, and go to state 144


State 102

  125 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 145


State 103

  128 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 146
    name_in_namespace             go to state 71


State 104

  129 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 147
    name_in_namespace             go to state 71


State 105

  130 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 148
    name_in_namespace             go to state 71


State 106

  134 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 149
    name_in_namespace             go to state 71


State 107

  136 optional_annotation_list: '[' annotation_list ']' .
  138 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 150

    "enum"    reduce using rule 136 (optional_annotation_list)
    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 152


State 108

  607 enum_declaration: optional_annotation_list "enum" $@42 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 592 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 109

  232 optional_public_or_private_function: "public" .

    $default  reduce using rule 232 (optional_public_or_private_function)


State 110

  231 optional_public_or_private_function: "private" .

    $default  reduce using rule 231 (optional_public_or_private_function)


State 111

  235 function_declaration: optional_public_or_private_function . $@9 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 234 ($@9)

    $@9  go to state 156


State 112

  229 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 229 (global_function_declaration)


State 113

  614 class_or_struct: "struct" .

    $default  reduce using rule 614 (class_or_struct)


State 114

  613 class_or_struct: "class" .

    $default  reduce using rule 613 (class_or_struct)


State 115

  615 class_or_struct: "template" . "class"
  616                | "template" . "struct"

    "struct"  shift, and go to state 157
    "class"   shift, and go to state 158


State 116

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct . optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 159
    "private"  shift, and go to state 160

    $default  reduce using rule 617 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 161


State 117

  571 optional_public_or_private_variable: "public" .

    $default  reduce using rule 571 (optional_public_or_private_variable)


State 118

  570 optional_public_or_private_variable: "private" .

    $default  reduce using rule 570 (optional_public_or_private_variable)


State 119

  576 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  578           | kwd_let optional_shared optional_public_or_private_variable . $@40 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 162

    $default  reduce using rule 577 ($@40)

    $@40  go to state 163


State 120

  112 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 112 (annotation_argument)


State 121

  113 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 113 (annotation_argument)


State 122

  110 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 110 (annotation_argument)


State 123

  111 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 111 (annotation_argument)


State 124

  109 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 109 (annotation_argument)


State 125

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 164
    STRING_CHARACTER_ESC  shift, and go to state 165
    "end of the string"   shift, and go to state 166

    character_sequence  go to state 167


State 126

  115 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 168
    "false"                    shift, and go to state 169
    "integer constant"         shift, and go to state 170
    "floating point constant"  shift, and go to state 171
    "name"                     shift, and go to state 172
    "start of the string"      shift, and go to state 125

    string_constant                 go to state 173
    annotation_argument_value       go to state 174
    annotation_argument_value_list  go to state 175


State 127

  108 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 108 (annotation_argument)


State 128

  117 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 117 (annotation_argument_list)


State 129

   55 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 55 (expect_error)


State 130

   53 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 53 (expect_list)


State 131

   48 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 86

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 176


State 132

   46 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 46 (require_module_name)


State 133

   45 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 45 (require_module_name)


State 134

  590 single_alias: optional_public_or_private_alias "name" $@41 . '=' type_declaration

    '='  shift, and go to state 177


State 135

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 136

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 137

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 138

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" . optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    "new line, comma"  shift, and go to state 178

    $default  reduce using rule 602 (optional_emit_commas)

    emit_commas           go to state 179
    optional_emit_commas  go to state 180


State 139

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" . optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 181


State 140

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 182


State 141

  273 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 273 (name_in_namespace)


State 142

   37 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 37 (reader_character_sequence)


State 143

   38 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 183

    $default  reduce using rule 40 (expr_reader)


State 144

  131 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 131 (annotation_declaration)


State 145

  117 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  125 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 81
    ')'  shift, and go to state 184


State 146

  128 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  128                       | annotation_declaration "&&" annotation_declaration .
  129                       | annotation_declaration . "||" annotation_declaration
  130                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 128 (annotation_declaration)


State 147

  128 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  129                       | annotation_declaration . "||" annotation_declaration
  129                       | annotation_declaration "||" annotation_declaration .
  130                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 103
    "^^"  shift, and go to state 105

    $default  reduce using rule 129 (annotation_declaration)


State 148

  128 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  129                       | annotation_declaration . "||" annotation_declaration
  130                       | annotation_declaration . "^^" annotation_declaration
  130                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 103

    $default  reduce using rule 130 (annotation_declaration)


State 149

  128 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  129                       | annotation_declaration . "||" annotation_declaration
  130                       | annotation_declaration . "^^" annotation_declaration
  134 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 103
    "||"  shift, and go to state 104
    "^^"  shift, and go to state 105

    $default  reduce using rule 134 (annotation_list)


State 150

   61 emit_semis: "new line, semicolon" .

    $default  reduce using rule 61 (emit_semis)


State 151

   62 emit_semis: emit_semis . "new line, semicolon"
   64 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 185

    $default  reduce using rule 64 (optional_emit_semis)


State 152

  138 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 138 (optional_annotation_list_with_emit_semis)


State 153

  594 optional_public_or_private_enum: "public" .

    $default  reduce using rule 594 (optional_public_or_private_enum)


State 154

  593 optional_public_or_private_enum: "private" .

    $default  reduce using rule 593 (optional_public_or_private_enum)


State 155

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "name"  shift, and go to state 186

    enum_name  go to state 187


State 156

  235 function_declaration: optional_public_or_private_function $@9 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "range64"   shift, and go to state 205
    "urange64"  shift, and go to state 206
    "int64"     shift, and go to state 207
    "uint64"    shift, and go to state 208
    "double"    shift, and go to state 209
    "int8"      shift, and go to state 210
    "uint8"     shift, and go to state 211
    "int16"     shift, and go to state 212
    "uint16"    shift, and go to state 213
    "++"        shift, and go to state 214
    "--"        shift, and go to state 215
    "name"      shift, and go to state 216

    function_name                go to state 217
    function_declaration_header  go to state 218


State 157

  616 class_or_struct: "template" "struct" .

    $default  reduce using rule 616 (class_or_struct)


State 158

  615 class_or_struct: "template" "class" .

    $default  reduce using rule 615 (class_or_struct)


State 159

  619 optional_public_or_private_structure: "public" .

    $default  reduce using rule 619 (optional_public_or_private_structure)


State 160

  618 optional_public_or_private_structure: "private" .

    $default  reduce using rule 618 (optional_public_or_private_structure)


State 161

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure . $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 623 ($@46)

    $@46  go to state 219


State 162

  576 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 572 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 220


State 163

  578 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 221

    $default  reduce using rule 501 (optional_field_annotation)

    metadata_argument_list     go to state 222
    optional_field_annotation  go to state 223


State 164

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 165

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 166

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 167

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 224
    STRING_CHARACTER_ESC  shift, and go to state 225
    "end of the string"   shift, and go to state 226


State 168

  101 annotation_argument_value: "true" .

    $default  reduce using rule 101 (annotation_argument_value)


State 169

  102 annotation_argument_value: "false" .

    $default  reduce using rule 102 (annotation_argument_value)


State 170

   99 annotation_argument_value: "integer constant" .

    $default  reduce using rule 99 (annotation_argument_value)


State 171

  100 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 100 (annotation_argument_value)


State 172

   98 annotation_argument_value: "name" .

    $default  reduce using rule 98 (annotation_argument_value)


State 173

   97 annotation_argument_value: string_constant .

    $default  reduce using rule 97 (annotation_argument_value)


State 174

  103 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 103 (annotation_argument_value_list)


State 175

  104 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  115 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 227
    ')'  shift, and go to state 228


State 176

   48 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 48 (require_module)


State 177

  590 single_alias: optional_public_or_private_alias "name" $@41 '=' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 277


State 178

  600 emit_commas: "new line, comma" .

    $default  reduce using rule 600 (emit_commas)


State 179

  601 emit_commas: emit_commas . "new line, comma"
  603 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 278

    $default  reduce using rule 603 (optional_emit_commas)


State 180

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas . $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 765 ($@86)

    $@86  go to state 279


State 181

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis . $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 755 ($@78)

    $@78  go to state 280


State 182

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 760 ($@82)

    $@82  go to state 281


State 183

   38 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 184

  125 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 125 (annotation_declaration_basic)


State 185

   62 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 62 (emit_semis)


State 186

  595 enum_name: "name" .

    $default  reduce using rule 595 (enum_name)


State 187

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    ':'  shift, and go to state 282

    $default  reduce using rule 596 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 283


State 188

  145 function_name: "operator" . '!'
  146              | "operator" . '~'
  147              | "operator" . "+="
  148              | "operator" . "-="
  149              | "operator" . "*="
  150              | "operator" . "/="
  151              | "operator" . "%="
  152              | "operator" . "&="
  153              | "operator" . "|="
  154              | "operator" . "^="
  155              | "operator" . "&&="
  156              | "operator" . "||="
  157              | "operator" . "^^="
  158              | "operator" . "&&"
  159              | "operator" . "||"
  160              | "operator" . "^^"
  161              | "operator" . '+'
  162              | "operator" . '-'
  163              | "operator" . '*'
  164              | "operator" . '/'
  165              | "operator" . '%'
  166              | "operator" . '<'
  167              | "operator" . '>'
  168              | "operator" . ".."
  169              | "operator" . "=="
  170              | "operator" . "!="
  171              | "operator" . "<="
  172              | "operator" . ">="
  173              | "operator" . '&'
  174              | "operator" . '|'
  175              | "operator" . '^'
  178              | "operator" . "++"
  179              | "operator" . "--"
  180              | "operator" . "<<"
  181              | "operator" . ">>"
  182              | "operator" . "<<="
  183              | "operator" . ">>="
  184              | "operator" . "<<<"
  185              | "operator" . ">>>"
  186              | "operator" . "<<<="
  187              | "operator" . ">>>="
  188              | "operator" . '[' ']'
  189              | "operator" . "?[" ']'
  190              | "operator" . '.'
  191              | "operator" . "?."
  192              | "operator" . '.' "name"
  193              | "operator" . '.' "name" ":="
  194              | "operator" . "?." "name"
  195              | "operator" . ":="
  196              | "operator" . "delete"
  197              | "operator" . "??"
  198              | "operator" . "is"
  199              | "operator" . "as"
  200              | "operator" . "is" "name"
  201              | "operator" . "as" "name"
  202              | "operator" . '?' "as"
  203              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 284
    "as"      shift, and go to state 285
    "delete"  shift, and go to state 286
    "+="      shift, and go to state 287
    "-="      shift, and go to state 288
    "/="      shift, and go to state 289
    "*="      shift, and go to state 290
    "%="      shift, and go to state 291
    "&="      shift, and go to state 292
    "|="      shift, and go to state 293
    "^="      shift, and go to state 294
    "<<"      shift, and go to state 295
    ">>"      shift, and go to state 296
    "++"      shift, and go to state 297
    "--"      shift, and go to state 298
    "<="      shift, and go to state 299
    "<<="     shift, and go to state 300
    ">>="     shift, and go to state 301
    ">="      shift, and go to state 302
    "=="      shift, and go to state 303
    "!="      shift, and go to state 304
    "??"      shift, and go to state 305
    "?."      shift, and go to state 306
    "?["      shift, and go to state 307
    ":="      shift, and go to state 308
    "<<<"     shift, and go to state 309
    ">>>"     shift, and go to state 310
    "<<<="    shift, and go to state 311
    ">>>="    shift, and go to state 312
    "&&"      shift, and go to state 313
    "||"      shift, and go to state 314
    "^^"      shift, and go to state 315
    "&&="     shift, and go to state 316
    "||="     shift, and go to state 317
    "^^="     shift, and go to state 318
    ".."      shift, and go to state 319
    '?'       shift, and go to state 320
    '|'       shift, and go to state 321
    '^'       shift, and go to state 322
    '&'       shift, and go to state 323
    '<'       shift, and go to state 324
    '>'       shift, and go to state 325
    '-'       shift, and go to state 326
    '+'       shift, and go to state 327
    '*'       shift, and go to state 328
    '/'       shift, and go to state 329
    '%'       shift, and go to state 330
    '~'       shift, and go to state 331
    '!'       shift, and go to state 332
    '.'       shift, and go to state 333
    '['       shift, and go to state 334


State 189

  204 function_name: "bool" .

    $default  reduce using rule 204 (function_name)


State 190

  205 function_name: "string" .

    $default  reduce using rule 205 (function_name)


State 191

  206 function_name: "int" .

    $default  reduce using rule 206 (function_name)


State 192

  207 function_name: "int2" .

    $default  reduce using rule 207 (function_name)


State 193

  208 function_name: "int3" .

    $default  reduce using rule 208 (function_name)


State 194

  209 function_name: "int4" .

    $default  reduce using rule 209 (function_name)


State 195

  210 function_name: "uint" .

    $default  reduce using rule 210 (function_name)


State 196

  211 function_name: "uint2" .

    $default  reduce using rule 211 (function_name)


State 197

  212 function_name: "uint3" .

    $default  reduce using rule 212 (function_name)


State 198

  213 function_name: "uint4" .

    $default  reduce using rule 213 (function_name)


State 199

  214 function_name: "float" .

    $default  reduce using rule 214 (function_name)


State 200

  215 function_name: "float2" .

    $default  reduce using rule 215 (function_name)


State 201

  216 function_name: "float3" .

    $default  reduce using rule 216 (function_name)


State 202

  217 function_name: "float4" .

    $default  reduce using rule 217 (function_name)


State 203

  218 function_name: "range" .

    $default  reduce using rule 218 (function_name)


State 204

  219 function_name: "urange" .

    $default  reduce using rule 219 (function_name)


State 205

  220 function_name: "range64" .

    $default  reduce using rule 220 (function_name)


State 206

  221 function_name: "urange64" .

    $default  reduce using rule 221 (function_name)


State 207

  222 function_name: "int64" .

    $default  reduce using rule 222 (function_name)


State 208

  223 function_name: "uint64" .

    $default  reduce using rule 223 (function_name)


State 209

  224 function_name: "double" .

    $default  reduce using rule 224 (function_name)


State 210

  225 function_name: "int8" .

    $default  reduce using rule 225 (function_name)


State 211

  226 function_name: "uint8" .

    $default  reduce using rule 226 (function_name)


State 212

  227 function_name: "int16" .

    $default  reduce using rule 227 (function_name)


State 213

  228 function_name: "uint16" .

    $default  reduce using rule 228 (function_name)


State 214

  176 function_name: "++" . "operator"

    "operator"  shift, and go to state 335


State 215

  177 function_name: "--" . "operator"

    "operator"  shift, and go to state 336


State 216

  144 function_name: "name" .

    $default  reduce using rule 144 (function_name)


State 217

  233 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 337

    $default  reduce using rule 139 (optional_function_argument_list)

    optional_function_argument_list  go to state 338


State 218

  235 function_declaration: optional_public_or_private_function $@9 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 339


State 219

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 . structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 340

    $default  reduce using rule 610 (optional_sealed)

    optional_sealed  go to state 341
    structure_name   go to state 342


State 220

  573 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  575                                 | global_variable_declaration_list . $@39 optional_field_annotation let_variable_declaration
  576 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 343

    $default  reduce using rule 574 ($@39)

    SEMICOLON  go to state 344
    $@39       go to state 345


State 221

  118 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 346


State 222

  119 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  502 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 347

    $default  reduce using rule 502 (optional_field_annotation)


State 223

  578 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 348

    global_let_variable_name_with_pos_list  go to state 349
    global_let_variable_declaration         go to state 350


State 224

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 225

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 226

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 227

  104 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 168
    "false"                    shift, and go to state 169
    "integer constant"         shift, and go to state 170
    "floating point constant"  shift, and go to state 171
    "name"                     shift, and go to state 172
    "start of the string"      shift, and go to state 125

    string_constant            go to state 173
    annotation_argument_value  go to state 351


State 228

  115 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 115 (annotation_argument)


State 229

  694 type_declaration_no_options_no_dim: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 352


State 230

  717 type_declaration_no_options_no_dim: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 353


State 231

  720 type_declaration_no_options_no_dim: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 354


State 232

  695 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 355


State 233

  723 type_declaration_no_options_no_dim: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 356


State 234

  713 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 357


State 235

  631 basic_type_declaration: "bool" .

    $default  reduce using rule 631 (basic_type_declaration)


State 236

  651 basic_type_declaration: "void" .

    $default  reduce using rule 651 (basic_type_declaration)


State 237

  632 basic_type_declaration: "string" .

    $default  reduce using rule 632 (basic_type_declaration)


State 238

  667 auto_type_declaration: "auto" .
  668                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 358

    $default  reduce using rule 667 (auto_type_declaration)


State 239

  633 basic_type_declaration: "int" .

    $default  reduce using rule 633 (basic_type_declaration)


State 240

  637 basic_type_declaration: "int2" .

    $default  reduce using rule 637 (basic_type_declaration)


State 241

  638 basic_type_declaration: "int3" .

    $default  reduce using rule 638 (basic_type_declaration)


State 242

  639 basic_type_declaration: "int4" .

    $default  reduce using rule 639 (basic_type_declaration)


State 243

  640 basic_type_declaration: "uint" .

    $default  reduce using rule 640 (basic_type_declaration)


State 244

  657 basic_type_declaration: "bitfield" .
  677 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 359

    $default  reduce using rule 657 (basic_type_declaration)


State 245

  644 basic_type_declaration: "uint2" .

    $default  reduce using rule 644 (basic_type_declaration)


State 246

  645 basic_type_declaration: "uint3" .

    $default  reduce using rule 645 (basic_type_declaration)


State 247

  646 basic_type_declaration: "uint4" .

    $default  reduce using rule 646 (basic_type_declaration)


State 248

  647 basic_type_declaration: "float" .

    $default  reduce using rule 647 (basic_type_declaration)


State 249

  648 basic_type_declaration: "float2" .

    $default  reduce using rule 648 (basic_type_declaration)


State 250

  649 basic_type_declaration: "float3" .

    $default  reduce using rule 649 (basic_type_declaration)


State 251

  650 basic_type_declaration: "float4" .

    $default  reduce using rule 650 (basic_type_declaration)


State 252

  652 basic_type_declaration: "range" .

    $default  reduce using rule 652 (basic_type_declaration)


State 253

  653 basic_type_declaration: "urange" .

    $default  reduce using rule 653 (basic_type_declaration)


State 254

  654 basic_type_declaration: "range64" .

    $default  reduce using rule 654 (basic_type_declaration)


State 255

  655 basic_type_declaration: "urange64" .

    $default  reduce using rule 655 (basic_type_declaration)


State 256

  724 type_declaration_no_options_no_dim: "block" .
  727                                   | "block" . '<' $@61 type_declaration '>' $@62
  730                                   | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 360

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 257

  636 basic_type_declaration: "int64" .

    $default  reduce using rule 636 (basic_type_declaration)


State 258

  643 basic_type_declaration: "uint64" .

    $default  reduce using rule 643 (basic_type_declaration)


State 259

  656 basic_type_declaration: "double" .

    $default  reduce using rule 656 (basic_type_declaration)


State 260

  731 type_declaration_no_options_no_dim: "function" .
  734                                   | "function" . '<' $@65 type_declaration '>' $@66
  737                                   | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 361

    $default  reduce using rule 731 (type_declaration_no_options_no_dim)


State 261

  738 type_declaration_no_options_no_dim: "lambda" .
  741                                   | "lambda" . '<' $@69 type_declaration '>' $@70
  744                                   | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 362

    $default  reduce using rule 738 (type_declaration_no_options_no_dim)


State 262

  634 basic_type_declaration: "int8" .

    $default  reduce using rule 634 (basic_type_declaration)


State 263

  641 basic_type_declaration: "uint8" .

    $default  reduce using rule 641 (basic_type_declaration)


State 264

  635 basic_type_declaration: "int16" .

    $default  reduce using rule 635 (basic_type_declaration)


State 265

  642 basic_type_declaration: "uint16" .

    $default  reduce using rule 642 (basic_type_declaration)


State 266

  747 type_declaration_no_options_no_dim: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 363


State 267

  750 type_declaration_no_options_no_dim: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 364


State 268

  669 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 365


State 269

  696 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  698                                   | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 366


State 270

  666 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 666 (structure_type_declaration)


State 271

  688 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 688 (type_declaration_no_options_no_dim)


State 272

  691 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 691 (type_declaration_no_options_no_dim)


State 273

  689 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 689 (type_declaration_no_options_no_dim)


State 274

  690 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 690 (type_declaration_no_options_no_dim)


State 275

  751 type_declaration: type_declaration_no_options .

    $default  reduce using rule 751 (type_declaration)


State 276

  686 type_declaration_no_options: type_declaration_no_options_no_dim .
  687                            | type_declaration_no_options_no_dim . dim_list
  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  700                                   | type_declaration_no_options_no_dim . "explicit"
  701                                   | type_declaration_no_options_no_dim . "const"
  702                                   | type_declaration_no_options_no_dim . '-' "const"
  703                                   | type_declaration_no_options_no_dim . '&'
  704                                   | type_declaration_no_options_no_dim . '-' '&'
  705                                   | type_declaration_no_options_no_dim . '#'
  706                                   | type_declaration_no_options_no_dim . "implicit"
  707                                   | type_declaration_no_options_no_dim . '-' '#'
  708                                   | type_declaration_no_options_no_dim . "==" "const"
  709                                   | type_declaration_no_options_no_dim . "==" '&'
  710                                   | type_declaration_no_options_no_dim . '?'
  714                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 367
    "implicit"  shift, and go to state 368
    "explicit"  shift, and go to state 369
    "=="        shift, and go to state 370
    "??"        shift, and go to state 371
    '?'         shift, and go to state 372
    '&'         shift, and go to state 373
    '-'         shift, and go to state 374
    '['         shift, and go to state 375
    '#'         shift, and go to state 376

    $default  reduce using rule 686 (type_declaration_no_options)

    dim_list  go to state 377


State 277

  590 single_alias: optional_public_or_private_alias "name" $@41 '=' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 590 (single_alias)


State 278

  601 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 601 (emit_commas)


State 279

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 . '{' $@87 bitfield_alias_bits optional_commas $@88 '}'

    '{'  shift, and go to state 379


State 280

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 . '{' $@79 tuple_alias_type_list optional_semis $@80 '}'

    '{'  shift, and go to state 380


State 281

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 variant_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 381


State 282

  597 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 382
    "uint"    shift, and go to state 383
    "int64"   shift, and go to state 384
    "uint64"  shift, and go to state 385
    "int8"    shift, and go to state 386
    "uint8"   shift, and go to state 387
    "int16"   shift, and go to state 388
    "uint16"  shift, and go to state 389

    enum_basic_type_declaration  go to state 390


State 283

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}'

    "new line, comma"  shift, and go to state 178

    $default  reduce using rule 602 (optional_emit_commas)

    emit_commas           go to state 179
    optional_emit_commas  go to state 391


State 284

  198 function_name: "operator" "is" .
  200              | "operator" "is" . "name"

    "name"  shift, and go to state 392

    $default  reduce using rule 198 (function_name)


State 285

  199 function_name: "operator" "as" .
  201              | "operator" "as" . "name"

    "name"  shift, and go to state 393

    $default  reduce using rule 199 (function_name)


State 286

  196 function_name: "operator" "delete" .

    $default  reduce using rule 196 (function_name)


State 287

  147 function_name: "operator" "+=" .

    $default  reduce using rule 147 (function_name)


State 288

  148 function_name: "operator" "-=" .

    $default  reduce using rule 148 (function_name)


State 289

  150 function_name: "operator" "/=" .

    $default  reduce using rule 150 (function_name)


State 290

  149 function_name: "operator" "*=" .

    $default  reduce using rule 149 (function_name)


State 291

  151 function_name: "operator" "%=" .

    $default  reduce using rule 151 (function_name)


State 292

  152 function_name: "operator" "&=" .

    $default  reduce using rule 152 (function_name)


State 293

  153 function_name: "operator" "|=" .

    $default  reduce using rule 153 (function_name)


State 294

  154 function_name: "operator" "^=" .

    $default  reduce using rule 154 (function_name)


State 295

  180 function_name: "operator" "<<" .

    $default  reduce using rule 180 (function_name)


State 296

  181 function_name: "operator" ">>" .

    $default  reduce using rule 181 (function_name)


State 297

  178 function_name: "operator" "++" .

    $default  reduce using rule 178 (function_name)


State 298

  179 function_name: "operator" "--" .

    $default  reduce using rule 179 (function_name)


State 299

  171 function_name: "operator" "<=" .

    $default  reduce using rule 171 (function_name)


State 300

  182 function_name: "operator" "<<=" .

    $default  reduce using rule 182 (function_name)


State 301

  183 function_name: "operator" ">>=" .

    $default  reduce using rule 183 (function_name)


State 302

  172 function_name: "operator" ">=" .

    $default  reduce using rule 172 (function_name)


State 303

  169 function_name: "operator" "==" .

    $default  reduce using rule 169 (function_name)


State 304

  170 function_name: "operator" "!=" .

    $default  reduce using rule 170 (function_name)


State 305

  197 function_name: "operator" "??" .

    $default  reduce using rule 197 (function_name)


State 306

  191 function_name: "operator" "?." .
  194              | "operator" "?." . "name"

    "name"  shift, and go to state 394

    $default  reduce using rule 191 (function_name)


State 307

  189 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 395


State 308

  195 function_name: "operator" ":=" .

    $default  reduce using rule 195 (function_name)


State 309

  184 function_name: "operator" "<<<" .

    $default  reduce using rule 184 (function_name)


State 310

  185 function_name: "operator" ">>>" .

    $default  reduce using rule 185 (function_name)


State 311

  186 function_name: "operator" "<<<=" .

    $default  reduce using rule 186 (function_name)


State 312

  187 function_name: "operator" ">>>=" .

    $default  reduce using rule 187 (function_name)


State 313

  158 function_name: "operator" "&&" .

    $default  reduce using rule 158 (function_name)


State 314

  159 function_name: "operator" "||" .

    $default  reduce using rule 159 (function_name)


State 315

  160 function_name: "operator" "^^" .

    $default  reduce using rule 160 (function_name)


State 316

  155 function_name: "operator" "&&=" .

    $default  reduce using rule 155 (function_name)


State 317

  156 function_name: "operator" "||=" .

    $default  reduce using rule 156 (function_name)


State 318

  157 function_name: "operator" "^^=" .

    $default  reduce using rule 157 (function_name)


State 319

  168 function_name: "operator" ".." .

    $default  reduce using rule 168 (function_name)


State 320

  202 function_name: "operator" '?' . "as"
  203              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 396


State 321

  174 function_name: "operator" '|' .

    $default  reduce using rule 174 (function_name)


State 322

  175 function_name: "operator" '^' .

    $default  reduce using rule 175 (function_name)


State 323

  173 function_name: "operator" '&' .

    $default  reduce using rule 173 (function_name)


State 324

  166 function_name: "operator" '<' .

    $default  reduce using rule 166 (function_name)


State 325

  167 function_name: "operator" '>' .

    $default  reduce using rule 167 (function_name)


State 326

  162 function_name: "operator" '-' .

    $default  reduce using rule 162 (function_name)


State 327

  161 function_name: "operator" '+' .

    $default  reduce using rule 161 (function_name)


State 328

  163 function_name: "operator" '*' .

    $default  reduce using rule 163 (function_name)


State 329

  164 function_name: "operator" '/' .

    $default  reduce using rule 164 (function_name)


State 330

  165 function_name: "operator" '%' .

    $default  reduce using rule 165 (function_name)


State 331

  146 function_name: "operator" '~' .

    $default  reduce using rule 146 (function_name)


State 332

  145 function_name: "operator" '!' .

    $default  reduce using rule 145 (function_name)


State 333

  190 function_name: "operator" '.' .
  192              | "operator" '.' . "name"
  193              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 397

    $default  reduce using rule 190 (function_name)


State 334

  188 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 398


State 335

  176 function_name: "++" "operator" .

    $default  reduce using rule 176 (function_name)


State 336

  177 function_name: "--" "operator" .

    $default  reduce using rule 177 (function_name)


State 337

  140 optional_function_argument_list: '(' . ')'
  141                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 399
    ')'   shift, and go to state 400
    '@'   shift, and go to state 221

    $default  reduce using rule 501 (optional_field_annotation)

    metadata_argument_list         go to state 222
    optional_field_annotation      go to state 401
    function_argument_declaration  go to state 402
    function_argument_list         go to state 403


State 338

  233 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 404

    $default  reduce using rule 142 (optional_function_type)

    optional_function_type  go to state 405


State 339

  235 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 406
    $@12              go to state 407


State 340

  611 optional_sealed: "sealed" .

    $default  reduce using rule 611 (optional_sealed)


State 341

  612 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 408


State 342

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name . optional_emit_semis $@47 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 409


State 343

  576 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 576 (global_let)


State 344

  573 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 573 (global_variable_declaration_list)


State 345

  575 global_variable_declaration_list: global_variable_declaration_list $@39 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 221

    $default  reduce using rule 501 (optional_field_annotation)

    metadata_argument_list     go to state 222
    optional_field_annotation  go to state 410


State 346

  118 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 411


State 347

  119 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 412


State 348

  556 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 556 (global_let_variable_name_with_pos_list)


State 349

  557 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  564 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  565                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  566                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 413
    ':'  shift, and go to state 414
    '&'  shift, and go to state 415

    $default  reduce using rule 549 (optional_ref)

    optional_ref  go to state 416


State 350

  578 global_let: kwd_let optional_shared optional_public_or_private_variable $@40 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 578 (global_let)


State 351

  104 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 104 (annotation_argument_value_list)


State 352

  694 type_declaration_no_options_no_dim: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 692 ($@50)

    $@50  go to state 417


State 353

  717 type_declaration_no_options_no_dim: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 715 ($@55)

    $@55  go to state 418


State 354

  720 type_declaration_no_options_no_dim: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 718 ($@57)

    $@57  go to state 419


State 355

  695 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 485
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 356

  723 type_declaration_no_options_no_dim: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 721 ($@59)

    $@59  go to state 495


State 357

  713 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 711 ($@53)

    $@53  go to state 496


State 358

  668 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 497


State 359

  677 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 675 ($@48)

    $@48  go to state 498


State 360

  727 type_declaration_no_options_no_dim: "block" '<' . $@61 type_declaration '>' $@62
  730                                   | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 728 ($@63)
    '>'       reduce using rule 728 ($@63)
    '('       reduce using rule 728 ($@63)
    $default  reduce using rule 725 ($@61)

    $@61  go to state 499
    $@63  go to state 500


State 361

  734 type_declaration_no_options_no_dim: "function" '<' . $@65 type_declaration '>' $@66
  737                                   | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 735 ($@67)
    '>'       reduce using rule 735 ($@67)
    '('       reduce using rule 735 ($@67)
    $default  reduce using rule 732 ($@65)

    $@65  go to state 501
    $@67  go to state 502


State 362

  741 type_declaration_no_options_no_dim: "lambda" '<' . $@69 type_declaration '>' $@70
  744                                   | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 742 ($@71)
    '>'       reduce using rule 742 ($@71)
    '('       reduce using rule 742 ($@71)
    $default  reduce using rule 739 ($@69)

    $@69  go to state 503
    $@71  go to state 504


State 363

  747 type_declaration_no_options_no_dim: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 745 ($@73)

    $@73  go to state 505


State 364

  750 type_declaration_no_options_no_dim: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 748 ($@75)

    $@75  go to state 506


State 365

  669 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 507
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 366

  696 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  698                                   | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 508
    '('  shift, and go to state 509


State 367

  701 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 368

  706 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 369

  700 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 370

  708 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  709                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 510
    '&'      shift, and go to state 511


State 371

  714 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 372

  710 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 373

  703 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 703 (type_declaration_no_options_no_dim)


State 374

  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  702                                   | type_declaration_no_options_no_dim '-' . "const"
  704                                   | type_declaration_no_options_no_dim '-' . '&'
  707                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 512
    '&'      shift, and go to state 513
    '['      shift, and go to state 514
    '#'      shift, and go to state 515


State 375

  682 dim_list: '[' . expr ']'
  683         | '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 516
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 517
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 376

  705 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 377

  684 dim_list: dim_list . '[' expr ']'
  685         | dim_list . '[' ']'
  687 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 518

    $default  reduce using rule 687 (type_declaration_no_options)


State 378

  752 type_declaration: type_declaration '|' . type_declaration_no_options
  753                 | type_declaration '|' . '#'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269
    '#'          shift, and go to state 519

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 520
    type_declaration_no_options_no_dim  go to state 276


State 379

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' . $@87 bitfield_alias_bits optional_commas $@88 '}'

    $default  reduce using rule 766 ($@87)

    $@87  go to state 521


State 380

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' . $@79 tuple_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 756 ($@79)

    $@79  go to state 522


State 381

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 variant_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 761 ($@83)

    $@83  go to state 523


State 382

  658 enum_basic_type_declaration: "int" .

    $default  reduce using rule 658 (enum_basic_type_declaration)


State 383

  661 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 661 (enum_basic_type_declaration)


State 384

  664 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 385

  665 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 386

  659 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 387

  662 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 662 (enum_basic_type_declaration)


State 388

  660 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 660 (enum_basic_type_declaration)


State 389

  663 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 663 (enum_basic_type_declaration)


State 390

  597 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 597 (optional_enum_basic_type_declaration)


State 391

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@43 enum_list optional_commas $@44 '}'

    '{'  shift, and go to state 524


State 392

  200 function_name: "operator" "is" "name" .

    $default  reduce using rule 200 (function_name)


State 393

  201 function_name: "operator" "as" "name" .

    $default  reduce using rule 201 (function_name)


State 394

  194 function_name: "operator" "?." "name" .

    $default  reduce using rule 194 (function_name)


State 395

  189 function_name: "operator" "?[" ']' .

    $default  reduce using rule 189 (function_name)


State 396

  202 function_name: "operator" '?' "as" .
  203              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 525

    $default  reduce using rule 202 (function_name)


State 397

  192 function_name: "operator" '.' "name" .
  193              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 526

    $default  reduce using rule 192 (function_name)


State 398

  188 function_name: "operator" '[' ']' .

    $default  reduce using rule 188 (function_name)


State 399

  523 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 527


State 400

  140 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 140 (optional_function_argument_list)


State 401

  522 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 528
    "var"  shift, and go to state 529

    $default  reduce using rule 297 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 530


State 402

  524 function_argument_list: function_argument_declaration .

    $default  reduce using rule 524 (function_argument_list)


State 403

  141 optional_function_argument_list: '(' function_argument_list . ')'
  525 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 531
    ';'  shift, and go to state 532


State 404

  143 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 533


State 405

  233 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 233 (function_declaration_header)


State 406

  235 function_declaration: optional_public_or_private_function $@9 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 235 (function_declaration)


State 407

  242 expression_block: $@12 . '{' expressions $@13 '}' expression_block_finally

    '{'  shift, and go to state 534


State 408

  612 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 535

    $default  reduce using rule 608 (optional_structure_parent)

    optional_structure_parent  go to state 536


State 409

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 624 ($@47)

    $@47  go to state 537


State 410

  575 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 538
    "name"  shift, and go to state 539

    let_variable_name_with_pos_list  go to state 540
    let_variable_declaration         go to state 541


State 411

  118 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 118 (metadata_argument_list)


State 412

  119 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 542


State 413

  557 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 543


State 414

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  565                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 544
    type_declaration_no_options_no_dim  go to state 276


State 415

  550 optional_ref: '&' .

    $default  reduce using rule 550 (optional_ref)


State 416

  566 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 545
    ":="  shift, and go to state 546
    '='   shift, and go to state 547

    copy_or_move_or_clone  go to state 548


State 417

  694 type_declaration_no_options_no_dim: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 549


State 418

  717 type_declaration_no_options_no_dim: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 550


State 419

  720 type_declaration_no_options_no_dim: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    table_type_pair                     go to state 551
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 552


State 420

  794 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 553


State 421

  797 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 554


State 422

  406 expr: "true" .

    $default  reduce using rule 406 (expr)


State 423

  407 expr: "false" .

    $default  reduce using rule 407 (expr)


State 424

  281 expr_new: "new" . new_type_declaration
  282         | "new" . new_type_declaration '(' use_initializer ')'
  283         | "new" . new_type_declaration '(' expr_list ')'
  284         | "new" . new_type_declaration '(' make_struct_single ')'
  285         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  286         | "new" . make_decl

    "struct"       shift, and go to state 420
    "class"        shift, and go to state 421
    "array"        shift, and go to state 427
    "table"        shift, and go to state 429
    "fixed_array"  shift, and go to state 436
    "default"      shift, and go to state 437
    "tuple"        shift, and go to state 439
    "variant"      shift, and go to state 440
    "::"           shift, and go to state 58
    "name"         shift, and go to state 59
    '<'            shift, and go to state 555
    '['            shift, and go to state 464
    '{'            shift, and go to state 468

    name_in_namespace           go to state 270
    new_type_declaration        go to state 556
    structure_type_declaration  go to state 557
    make_decl                   go to state 558
    make_struct_decl            go to state 490
    make_tuple_call             go to state 491
    make_dim_decl               go to state 492
    make_table_decl             go to state 493
    array_comprehension         go to state 494


State 425

  321 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  322               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  323               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 559


State 426

  320 expr_type_decl: "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 560


State 427

  813 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  816              | "array" . "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  819              | "array" . "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'
  820              | "array" . '(' expr_list optional_comma ')'
  823              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 561
    "tuple"    shift, and go to state 562
    "variant"  shift, and go to state 563
    '<'        shift, and go to state 564
    '('        shift, and go to state 565


State 428

  400 expr: "null" .

    $default  reduce using rule 400 (expr)


State 429

  831 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  832                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  833                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 566
    '('  shift, and go to state 567


State 430

  450 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 568


State 431

  311 expr_cast: "cast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 569


State 432

  314 expr_cast: "upcast" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 570


State 433

  451 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 571


State 434

  317 expr_cast: "reinterpret" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 572


State 435

  481 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 573


State 436

  824 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  827              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 574
    '('  shift, and go to state 575


State 437

  803 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 576


State 438

  657 basic_type_declaration: "bitfield" .

    $default  reduce using rule 657 (basic_type_declaration)


State 439

  806 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  809                | "tuple" . '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 577
    '('  shift, and go to state 578


State 440

  800 make_struct_decl: "variant" . '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    '<'  shift, and go to state 579


State 441

  482 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  483               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  484               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 580


State 442

  436 expr: "++" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 581
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 443

  437 expr: "--" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 582
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 444

  485 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 583


State 445

  486 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 584


State 446

  487 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 585


State 447

  488 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 586


State 448

  489 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 587


State 449

  491 expr_mtag: "$c" . '(' expr ')' '(' ')'
  492          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 588


State 450

  490 expr_mtag: "..." .

    $default  reduce using rule 490 (expr_mtag)


State 451

  344 expr_numeric_const: "integer constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 452

  346 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 453

  345 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 454

  347 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 455

  348 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 456

  349 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 457

  350 expr_numeric_const: "double constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 458

   36 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 33 (string_builder_body)

    string_builder_body  go to state 589


State 459

  413 expr: '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 590
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 460

  412 expr: '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 591
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 461

  449 expr: '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 592
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 462

  411 expr: '~' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 593
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 463

  410 expr: '!' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 594
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 464

  810 make_dim_decl: '[' . expr_list optional_comma ']'
  838 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  839                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 597
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 465

  440 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 599
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 466

  329 block_or_lambda: '$' .

    $default  reduce using rule 329 (block_or_lambda)


State 467

  330 block_or_lambda: '@' .
  331                | '@' . '@'
  376 func_addr_expr: '@' . '@' func_addr_name
  379               | '@' . '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  382               | '@' . '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  500 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 600

    $default  reduce using rule 330 (block_or_lambda)


State 468

  830 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  840 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 601
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 602
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 603
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    expr_map_tuple_list     go to state 604
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 469

  404 expr: string_builder .

    $default  reduce using rule 404 (expr)


State 470

  403 expr: expr_reader .

    $default  reduce using rule 403 (expr)


State 471

  480 expr: expr_call_pipe .

    $default  reduce using rule 480 (expr)


State 472

  370 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  371                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  393 expr_call: name_in_namespace . '(' ')'
  394          | name_in_namespace . '(' "uninitialized" ')'
  395          | name_in_namespace . '(' make_struct_single ')'
  396          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  397          | name_in_namespace . '(' expr_list ')'
  401 expr: name_in_namespace .

    '('  shift, and go to state 605

    $default  reduce using rule 401 (expr)


State 473

  473 expr: expr_new .

    $default  reduce using rule 473 (expr)


State 474

  472 expr: expr_cast .

    $default  reduce using rule 472 (expr)


State 475

  471 expr: expr_type_decl .

    $default  reduce using rule 471 (expr)


State 476

  470 expr: expr_type_info .

    $default  reduce using rule 470 (expr)


State 477

  341 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 606

    $default  reduce using rule 135 (optional_annotation_list)

    optional_annotation_list  go to state 607


State 478

  476 expr: expr_full_block .

    $default  reduce using rule 476 (expr)


State 479

  402 expr: expr_numeric_const .

    $default  reduce using rule 402 (expr)


State 480

  475 expr: expr_named_call .

    $default  reduce using rule 475 (expr)


State 481

  474 expr: expr_method_call .

    $default  reduce using rule 474 (expr)


State 482

  447 expr: func_addr_expr .

    $default  reduce using rule 447 (expr)


State 483

  408 expr: expr_field .

    $default  reduce using rule 408 (expr)


State 484

  243 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  448 expr: expr_call .

    '$'  shift, and go to state 466
    '@'  shift, and go to state 608
    '{'  shift, and go to state 609

    $default  reduce using rule 448 (expr)

    block_or_lambda                go to state 610
    expr_full_block_assumed_piped  go to state 611


State 485

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  695 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 647


State 486

  452 expr: expr_generator .

    $default  reduce using rule 452 (expr)


State 487

  409 expr: expr_mtag .

    $default  reduce using rule 409 (expr)


State 488

  398 expr_call: basic_type_declaration . '(' ')'
  399          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 648


State 489

  405 expr: make_decl .

    $default  reduce using rule 405 (expr)


State 490

  769 make_decl: make_struct_decl .

    $default  reduce using rule 769 (make_decl)


State 491

  773 make_decl: make_tuple_call .

    $default  reduce using rule 773 (make_decl)


State 492

  770 make_decl: make_dim_decl .

    $default  reduce using rule 770 (make_decl)


State 493

  771 make_decl: make_table_decl .

    $default  reduce using rule 771 (make_decl)


State 494

  772 make_decl: array_comprehension .

    $default  reduce using rule 772 (make_decl)


State 495

  723 type_declaration_no_options_no_dim: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 649


State 496

  713 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 650


State 497

  668 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 651


State 498

  677 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 652

    bitfield_bits  go to state 653


State 499

  727 type_declaration_no_options_no_dim: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 654


State 500

  730 type_declaration_no_options_no_dim: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 337

    $default  reduce using rule 139 (optional_function_argument_list)

    optional_function_argument_list  go to state 655


State 501

  734 type_declaration_no_options_no_dim: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 656


State 502

  737 type_declaration_no_options_no_dim: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 337

    $default  reduce using rule 139 (optional_function_argument_list)

    optional_function_argument_list  go to state 657


State 503

  741 type_declaration_no_options_no_dim: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 658


State 504

  744 type_declaration_no_options_no_dim: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 337

    $default  reduce using rule 139 (optional_function_argument_list)

    optional_function_argument_list  go to state 659


State 505

  747 type_declaration_no_options_no_dim: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 660
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    tuple_type                          go to state 661
    tuple_type_list                     go to state 662
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 663


State 506

  750 type_declaration_no_options_no_dim: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 664

    variant_type       go to state 665
    variant_type_list  go to state 666


State 507

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  669 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 667


State 508

  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 697 ($@52)

    $@52  go to state 668


State 509

  696 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 266 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 669
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 670
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 510

  708 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 511

  709 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 709 (type_declaration_no_options_no_dim)


State 512

  702 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 513

  704 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 514

  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 671


State 515

  707 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 516

  683 dim_list: '[' ']' .

    $default  reduce using rule 683 (dim_list)


State 517

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  682 dim_list: '[' expr . ']'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ']'    shift, and go to state 672


State 518

  684 dim_list: dim_list '[' . expr ']'
  685         | dim_list '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 673
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 674
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 519

  753 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 753 (type_declaration)


State 520

  752 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 752 (type_declaration)


State 521

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 . bitfield_alias_bits optional_commas $@88 '}'

    "name"  shift, and go to state 675

    $default  reduce using rule 672 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 676


State 522

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 . tuple_alias_type_list optional_semis $@80 '}'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 660
    '$'          shift, and go to state 269

    $default  reduce using rule 530 (tuple_alias_type_list)

    name_in_namespace                   go to state 270
    tuple_type                          go to state 677
    tuple_alias_type_list               go to state 678
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 663


State 523

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . variant_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 664

    $default  reduce using rule 536 (variant_alias_type_list)

    variant_type             go to state 679
    variant_alias_type_list  go to state 680


State 524

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@43 enum_list optional_commas $@44 '}'

    $default  reduce using rule 605 ($@43)

    $@43  go to state 681


State 525

  203 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 203 (function_name)


State 526

  193 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 193 (function_name)


State 527

  523 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 682
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 528

  295 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 295 (kwd_let_var_or_nothing)


State 529

  296 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 296 (kwd_let_var_or_nothing)


State 530

  522 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_declaration         go to state 685
    variable_name_with_pos_list  go to state 686


State 531

  141 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 141 (optional_function_argument_list)


State 532

  525 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 399
    '@'   shift, and go to state 221

    $default  reduce using rule 501 (optional_field_annotation)

    metadata_argument_list         go to state 222
    optional_field_annotation      go to state 401
    function_argument_declaration  go to state 687


State 533

  143 optional_function_type: ':' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 143 (optional_function_type)


State 534

  242 expression_block: $@12 '{' . expressions $@13 '}' expression_block_finally

    $default  reduce using rule 263 (expressions)

    expressions  go to state 688


State 535

  609 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 689


State 536

  612 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 612 (structure_name)


State 537

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 690
    '{'  shift, and go to state 691

    optional_struct_variable_declaration_list  go to state 692


State 538

  552 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 693


State 539

  551 let_variable_name_with_pos_list: "name" .
  553                                | "name" . "aka" "name"

    "aka"  shift, and go to state 694

    $default  reduce using rule 551 (let_variable_name_with_pos_list)


State 540

  554 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  555                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  561 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  562                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  563                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 695
    ':'  shift, and go to state 696
    '&'  shift, and go to state 415

    $default  reduce using rule 549 (optional_ref)

    optional_ref  go to state 697


State 541

  575 global_variable_declaration_list: global_variable_declaration_list $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 575 (global_variable_declaration_list)


State 542

  119 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 119 (metadata_argument_list)


State 543

  557 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 557 (global_let_variable_name_with_pos_list)


State 544

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  565                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"                   shift, and go to state 545
    ":="                   shift, and go to state 546
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 547
    ';'                    shift, and go to state 16

    SEMICOLON              go to state 698
    copy_or_move_or_clone  go to state 699


State 545

  547 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 547 (copy_or_move_or_clone)


State 546

  548 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 548 (copy_or_move_or_clone)


State 547

  546 copy_or_move_or_clone: '=' .

    $default  reduce using rule 546 (copy_or_move_or_clone)


State 548

  566 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 700
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 549

  694 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration . '>' $@51
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 701


State 550

  717 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration . '>' $@56
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 702


State 551

  720 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 703


State 552

  680 table_type_pair: type_declaration .
  681                | type_declaration . c_or_s type_declaration
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 704
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 705
    '|'                    shift, and go to state 378
    ';'                    shift, and go to state 16

    $default  reduce using rule 680 (table_type_pair)

    COMMA      go to state 706
    SEMICOLON  go to state 707
    c_or_s     go to state 708


State 553

  794 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 792 ($@89)

    $@89  go to state 709


State 554

  797 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 795 ($@91)

    $@91  go to state 710


State 555

  279 new_type_declaration: '<' . $@14 type_declaration '>' $@15

    $default  reduce using rule 277 ($@14)

    $@14  go to state 711


State 556

  281 expr_new: "new" new_type_declaration .
  282         | "new" new_type_declaration . '(' use_initializer ')'
  283         | "new" new_type_declaration . '(' expr_list ')'
  284         | "new" new_type_declaration . '(' make_struct_single ')'
  285         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 712

    $default  reduce using rule 281 (expr_new)


State 557

  280 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 280 (new_type_declaration)


State 558

  286 expr_new: "new" make_decl .

    $default  reduce using rule 286 (expr_new)


State 559

  321 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  322               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  323               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 713
    '('  shift, and go to state 714


State 560

  320 expr_type_decl: "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 318 ($@22)

    $@22  go to state 715


State 561

  813 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 716


State 562

  816 make_dim_decl: "array" "tuple" . '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 717


State 563

  819 make_dim_decl: "array" "variant" . '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 718


State 564

  823 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 821 ($@105)

    $@105  go to state 719


State 565

  820 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 720
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 566

  832 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  833                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 721
    type_declaration_no_options_no_dim  go to state 276


State 567

  831 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 602
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 603
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    expr_map_tuple_list     go to state 722
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 568

  450 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 723
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 569

  311 expr_cast: "cast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 309 ($@16)

    $@16  go to state 724


State 570

  314 expr_cast: "upcast" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 312 ($@18)

    $@18  go to state 725


State 571

  451 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 726
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 572

  317 expr_cast: "reinterpret" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 315 ($@20)

    $@20  go to state 727


State 573

  481 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 728
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 574

  827 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 825 ($@107)

    $@107  go to state 729


State 575

  824 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 730
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 576

  803 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 801 ($@95)

    $@95  go to state 731


State 577

  809 make_tuple_call: "tuple" '<' . $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 807 ($@97)

    $@97  go to state 732


State 578

  806 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 733
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 579

  800 make_struct_decl: "variant" '<' . $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    $default  reduce using rule 798 ($@93)

    $@93  go to state 734


State 580

  482 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  483               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  484               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 735
    type_declaration_no_options_no_dim  go to state 276


State 581

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  436     | "++" expr .
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 436 (expr)


State 582

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  437     | "--" expr .
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 437 (expr)


State 583

  485 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 736
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 584

  486 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 737
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 585

  487 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 738
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 586

  488 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 739
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 587

  489 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 740
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 588

  491 expr_mtag: "$c" '(' . expr ')' '(' ')'
  492          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 741
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 589

   34 string_builder_body: string_builder_body . character_sequence
   35                    | string_builder_body . "{" expr "}"
   36 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 164
    STRING_CHARACTER_ESC  shift, and go to state 165
    "end of the string"   shift, and go to state 742
    "{"                   shift, and go to state 743

    character_sequence  go to state 744


State 590

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  413 expr: '-' expr .
  414     | expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 413 (expr)


State 591

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  412 expr: '+' expr .
  414     | expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 412 (expr)


State 592

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  449     | '*' expr .
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 449 (expr)


State 593

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  411 expr: '~' expr .
  414     | expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 411 (expr)


State 594

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  410 expr: '!' expr .
  414     | expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 410 (expr)


State 595

  838 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 745


State 596

  839 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 746


State 597

  325 expr_list: expr_list . ',' expr
  810 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 747

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 748


State 598

  324 expr_list: expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 324 (expr_list)


State 599

  325 expr_list: expr_list . ',' expr
  440 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 747

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 749


State 600

  331 block_or_lambda: '@' '@' .
  376 func_addr_expr: '@' '@' . func_addr_name
  379               | '@' '@' . '<' $@24 type_declaration_no_options '>' $@25 func_addr_name
  382               | '@' '@' . '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name
  500 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 750
    "$c"    shift, and go to state 751
    "name"  shift, and go to state 59
    '<'     shift, and go to state 752

    $default  reduce using rule 331 (block_or_lambda)

    name_in_namespace  go to state 753
    func_addr_name     go to state 754


State 601

  840 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 755


State 602

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  804 make_map_tuple: expr . "=>" expr
  805               | expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "=>"   shift, and go to state 756
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 805 (make_map_tuple)


State 603

  828 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 828 (expr_map_tuple_list)


State 604

  829 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  830 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 757

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 758


State 605

  370 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  371                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  393 expr_call: name_in_namespace '(' . ')'
  394          | name_in_namespace '(' . "uninitialized" ')'
  395          | name_in_namespace '(' . make_struct_single ')'
  396          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  397          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 759
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 760
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 761
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 762
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 763
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 764
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 765
    make_struct_single      go to state 766
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 606

  136 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 767
    name_in_namespace             go to state 71


State 607

  341 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 768

    $default  reduce using rule 339 (optional_capture_list)

    optional_capture_list  go to state 769


State 608

  330 block_or_lambda: '@' .
  331                | '@' . '@'

    '@'  shift, and go to state 770

    $default  reduce using rule 330 (block_or_lambda)


State 609

  343 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 263 (expressions)

    expressions  go to state 771


State 610

  342 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 606

    $default  reduce using rule 135 (optional_annotation_list)

    optional_annotation_list  go to state 772


State 611

  243 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 243 (expr_call_pipe)


State 612

  457 expr: expr "is" . "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr "is" . basic_type_declaration
  459     | expr "is" . "name"
  499 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 773
    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "$f"        shift, and go to state 774
    "name"      shift, and go to state 775

    basic_type_declaration  go to state 776


State 613

  460 expr: expr "as" . "name"
  463     | expr "as" . "type" '<' $@32 type_declaration '>' $@33
  464     | expr "as" . basic_type_declaration
  497 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 777
    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "$f"        shift, and go to state 778
    "name"      shift, and go to state 779

    basic_type_declaration  go to state 780


State 614

  414 expr: expr "<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 781
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 615

  415 expr: expr ">>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 782
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 616

  438 expr: expr "++" .

    $default  reduce using rule 438 (expr)


State 617

  439 expr: expr "--" .

    $default  reduce using rule 439 (expr)


State 618

  427 expr: expr "<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 783
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 619

  428 expr: expr ">=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 784
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 620

  425 expr: expr "==" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 785
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 621

  426 expr: expr "!=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 786
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 622

  372 expr_method_call: expr "->" . "name" '(' ')'
  373                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 787


State 623

  453 expr: expr "??" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 788
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 624

  445 expr: expr "?." . "name"
  494 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 789
    "name"  shift, and go to state 790


State 625

  443 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 791
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 626

  477 expr: expr "<|" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 792
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 627

  478 expr: expr "|>" . expr
  479     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 793
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 794
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 628

  416 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 795
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 629

  417 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 796
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 630

  432 expr: expr "&&" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 797
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 631

  433 expr: expr "||" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 798
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 632

  434 expr: expr "^^" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 799
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 633

  435 expr: expr ".." . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 800
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 634

  454 expr: expr '?' . expr ':' expr
  465     | expr '?' . "as" "name"
  468     | expr '?' . "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr '?' . "as" basic_type_declaration
  498 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "as"                              shift, and go to state 801
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 802
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 635

  430 expr: expr '|' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 803
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 636

  431 expr: expr '^' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 804
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 637

  429 expr: expr '&' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 805
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 638

  423 expr: expr '<' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 806
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 639

  424 expr: expr '>' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 807
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 640

  419 expr: expr '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 808
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 641

  418 expr: expr '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 809
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 642

  420 expr: expr '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 810
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 643

  421 expr: expr '/' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 811
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 644

  422 expr: expr '%' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 812
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 645

  383 expr_field: expr '.' . "name"
  384           | expr '.' . '.' "name"
  385           | expr '.' . "name" '(' ')'
  386           | expr '.' . "name" '(' expr_list ')'
  387           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  388           | expr '.' . basic_type_declaration '(' ')'
  389           | expr '.' . basic_type_declaration '(' expr_list ')'
  392           | expr '.' . $@28 error $@29
  442 expr: expr '.' . '[' expr ']'
  444     | expr '.' . "?[" expr ']'
  446     | expr '.' . "?." "name"
  493 expr_mtag: expr '.' . "$f" '(' expr ')'
  495          | expr '.' . '.' "$f" '(' expr ')'
  496          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "?."        shift, and go to state 813
    "?["        shift, and go to state 814
    "$f"        shift, and go to state 815
    "name"      shift, and go to state 816
    '.'         shift, and go to state 817
    '['         shift, and go to state 818

    $default  reduce using rule 390 ($@28)

    $@28                    go to state 819
    basic_type_declaration  go to state 820


State 646

  441 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 821
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 647

  695 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 648

  398 expr_call: basic_type_declaration '(' . ')'
  399          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 822
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 823
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 649

  723 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration . '>' $@60
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 824


State 650

  713 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 825


State 651

  668 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 668 (auto_type_declaration)


State 652

  670 bitfield_bits: "name" .

    $default  reduce using rule 670 (bitfield_bits)


State 653

  671 bitfield_bits: bitfield_bits . ';' "name"
  677 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    '>'  shift, and go to state 826
    ';'  shift, and go to state 827


State 654

  727 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration . '>' $@62
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 828


State 655

  730 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 404

    $default  reduce using rule 142 (optional_function_type)

    optional_function_type  go to state 829


State 656

  734 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration . '>' $@66
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 830


State 657

  737 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 404

    $default  reduce using rule 142 (optional_function_type)

    optional_function_type  go to state 831


State 658

  741 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration . '>' $@70
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 832


State 659

  744 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 404

    $default  reduce using rule 142 (optional_function_type)

    optional_function_type  go to state 833


State 660

  272 name_in_namespace: "name" .
  273                  | "name" . "::" "name"
  527 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 97
    ':'   shift, and go to state 834

    $default  reduce using rule 272 (name_in_namespace)


State 661

  528 tuple_type_list: tuple_type .

    $default  reduce using rule 528 (tuple_type_list)


State 662

  529 tuple_type_list: tuple_type_list . c_or_s tuple_type
  747 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "new line, comma"      shift, and go to state 704
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 705
    '>'                    shift, and go to state 835
    ';'                    shift, and go to state 16

    COMMA      go to state 706
    SEMICOLON  go to state 707
    c_or_s     go to state 836


State 663

  526 tuple_type: type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 526 (tuple_type)


State 664

  533 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 837


State 665

  534 variant_type_list: variant_type .

    $default  reduce using rule 534 (variant_type_list)


State 666

  535 variant_type_list: variant_type_list . c_or_s variant_type
  750 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list . '>' $@76

    "new line, comma"      shift, and go to state 704
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 705
    '>'                    shift, and go to state 838
    ';'                    shift, and go to state 16

    COMMA      go to state 706
    SEMICOLON  go to state 707
    c_or_s     go to state 839


State 667

  669 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 669 (auto_type_declaration)


State 668

  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    type_declaration_no_options_list    go to state 840
    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 841


State 669

  696 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 842


State 670

  267 optional_expr_list: expr_list . optional_comma
  325 expr_list: expr_list . ',' expr

    ','  shift, and go to state 747

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 843


State 671

  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 699 (type_declaration_no_options_no_dim)


State 672

  682 dim_list: '[' expr ']' .

    $default  reduce using rule 682 (dim_list)


State 673

  685 dim_list: dim_list '[' ']' .

    $default  reduce using rule 685 (dim_list)


State 674

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  684 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ']'    shift, and go to state 844


State 675

  673 bitfield_alias_bits: "name" .

    $default  reduce using rule 673 (bitfield_alias_bits)


State 676

  674 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits . optional_commas $@88 '}'

    "new line, comma"  shift, and go to state 704
    ','                shift, and go to state 705

    $default  reduce using rule 598 (optional_commas)

    COMMA            go to state 845
    commas           go to state 846
    optional_commas  go to state 847


State 677

  531 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 531 (tuple_alias_type_list)


State 678

  532 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list . optional_semis $@80 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 848
    semis           go to state 849
    optional_semis  go to state 850


State 679

  537 variant_alias_type_list: variant_type .

    $default  reduce using rule 537 (variant_alias_type_list)


State 680

  538 variant_alias_type_list: variant_alias_type_list . semis variant_type
  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 848
    semis           go to state 851
    optional_semis  go to state 852


State 681

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 . enum_list optional_commas $@44 '}'

    "name"  shift, and go to state 853

    $default  reduce using rule 583 (enum_list)

    enum_expression  go to state 854
    enum_list        go to state 855


State 682

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  523 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 856


State 683

  627 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 857


State 684

  626 variable_name_with_pos_list: "name" .
  628                            | "name" . "aka" "name"

    "aka"  shift, and go to state 858

    $default  reduce using rule 626 (variable_name_with_pos_list)


State 685

  522 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 522 (function_argument_declaration)


State 686

  541 variable_declaration: variable_name_with_pos_list .
  542                     | variable_name_with_pos_list . '&'
  543                     | variable_name_with_pos_list . ':' type_declaration
  544                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  545                     | variable_name_with_pos_list . copy_or_move expr
  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 859
    ','   shift, and go to state 860
    '='   shift, and go to state 861
    ':'   shift, and go to state 862
    '&'   shift, and go to state 863

    $default  reduce using rule 541 (variable_declaration)

    copy_or_move  go to state 864


State 687

  525 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 525 (function_argument_list)


State 688

  242 expression_block: $@12 '{' expressions . $@13 '}' expression_block_finally
  264 expressions: expressions . expression_any
  265            | expressions . error

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 241 ($@13)

    SEMICOLON                         go to state 877
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    expression_if_then_else           go to state 881
    $@5                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@6                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@7                               go to state 888
    expression_with                   go to state 889
    $@8                               go to state 890
    expression_with_alias             go to state 891
    $@13                              go to state 892
    expr_call_pipe                    go to state 471
    expression_any                    go to state 893
    name_in_namespace                 go to state 472
    expression_delete                 go to state 894
    expr_new                          go to state 473
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 902
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 903
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 689

  609 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 609 (optional_structure_parent)


State 690

  620 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 620 (optional_struct_variable_declaration_list)


State 691

  621 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 514 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 904


State 692

  625 structure_declaration: optional_annotation_list_with_emit_semis $@45 class_or_struct optional_public_or_private_structure $@46 structure_name optional_emit_semis $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 625 (structure_declaration)


State 693

  552 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 905
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 694

  553 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 906


State 695

  554 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  555                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 907


State 696

  561 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  562                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 908
    type_declaration_no_options_no_dim  go to state 276


State 697

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 545
    ":="  shift, and go to state 546
    '='   shift, and go to state 547

    copy_or_move_or_clone  go to state 909


State 698

  564 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 564 (global_let_variable_declaration)


State 699

  565 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 910
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 700

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  566 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 612
    "as"                   shift, and go to state 613
    "<<"                   shift, and go to state 614
    ">>"                   shift, and go to state 615
    "++"                   shift, and go to state 616
    "--"                   shift, and go to state 617
    "<="                   shift, and go to state 618
    ">="                   shift, and go to state 619
    "=="                   shift, and go to state 620
    "!="                   shift, and go to state 621
    "->"                   shift, and go to state 622
    "??"                   shift, and go to state 623
    "?."                   shift, and go to state 624
    "?["                   shift, and go to state 625
    "<|"                   shift, and go to state 626
    "|>"                   shift, and go to state 627
    "<<<"                  shift, and go to state 628
    ">>>"                  shift, and go to state 629
    "&&"                   shift, and go to state 630
    "||"                   shift, and go to state 631
    "^^"                   shift, and go to state 632
    ".."                   shift, and go to state 633
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 634
    '|'                    shift, and go to state 635
    '^'                    shift, and go to state 636
    '&'                    shift, and go to state 637
    '<'                    shift, and go to state 638
    '>'                    shift, and go to state 639
    '-'                    shift, and go to state 640
    '+'                    shift, and go to state 641
    '*'                    shift, and go to state 642
    '/'                    shift, and go to state 643
    '%'                    shift, and go to state 644
    '.'                    shift, and go to state 645
    '['                    shift, and go to state 646
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 911


State 701

  694 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 693 ($@51)

    $@51  go to state 912


State 702

  717 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 716 ($@56)

    $@56  go to state 913


State 703

  720 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 719 ($@58)

    $@58  go to state 914


State 704

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 705

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 706

  678 c_or_s: COMMA .

    $default  reduce using rule 678 (c_or_s)


State 707

  679 c_or_s: SEMICOLON .

    $default  reduce using rule 679 (c_or_s)


State 708

  681 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 915


State 709

  794 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 916
    type_declaration_no_options_no_dim  go to state 276


State 710

  797 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 917
    type_declaration_no_options_no_dim  go to state 276


State 711

  279 new_type_declaration: '<' $@14 . type_declaration '>' $@15

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 918


State 712

  282 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  283         | "new" new_type_declaration '(' . expr_list ')'
  284         | "new" new_type_declaration '(' . make_struct_single ')'
  285         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 919
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 760
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 761
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 790 (use_initializer)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 920
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 765
    make_struct_single      go to state 921
    use_initializer         go to state 922
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 713

  322 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  323               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 923


State 714

  321 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 924
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 715

  320 expr_type_decl: "type" '<' $@22 . type_declaration '>' $@23

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 925


State 716

  813 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 811 ($@99)

    $@99  go to state 926


State 717

  816 make_dim_decl: "array" "tuple" '<' . $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 814 ($@101)

    $@101  go to state 927


State 718

  819 make_dim_decl: "array" "variant" '<' . $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 817 ($@103)

    $@103  go to state 928


State 719

  823 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 929
    type_declaration_no_options_no_dim  go to state 276


State 720

  325 expr_list: expr_list . ',' expr
  820 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 747

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 930


State 721

  832 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  833                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "new line, comma"      shift, and go to state 704
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 705
    '>'                    shift, and go to state 931
    ';'                    shift, and go to state 16

    COMMA      go to state 706
    SEMICOLON  go to state 707
    c_or_s     go to state 932


State 722

  829 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  831 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 933


State 723

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  450     | "deref" '(' expr . ')'
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 934


State 724

  311 expr_cast: "cast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 935
    type_declaration_no_options_no_dim  go to state 276


State 725

  314 expr_cast: "upcast" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 936
    type_declaration_no_options_no_dim  go to state 276


State 726

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  451     | "addr" '(' expr . ')'
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 937


State 727

  317 expr_cast: "reinterpret" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 938
    type_declaration_no_options_no_dim  go to state 276


State 728

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  481     | "unsafe" '(' expr . ')'
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 939


State 729

  827 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 940
    type_declaration_no_options_no_dim  go to state 276


State 730

  325 expr_list: expr_list . ',' expr
  824 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 747

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 941


State 731

  803 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 942
    type_declaration_no_options_no_dim  go to state 276


State 732

  809 make_tuple_call: "tuple" '<' $@97 . type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 943
    type_declaration_no_options_no_dim  go to state 276


State 733

  325 expr_list: expr_list . ',' expr
  806 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 747

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 944


State 734

  800 make_struct_decl: "variant" '<' $@93 . type_declaration_no_options '>' $@94 '(' make_variant_dim ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 945
    type_declaration_no_options_no_dim  go to state 276


State 735

  482 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  483               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  484               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block

    '>'  shift, and go to state 946


State 736

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  485 expr_mtag: "$$" '(' expr . ')'
  493          | expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 947


State 737

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  486 expr_mtag: "$i" '(' expr . ')'
  493          | expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 948


State 738

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  487 expr_mtag: "$v" '(' expr . ')'
  493          | expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 949


State 739

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  488 expr_mtag: "$b" '(' expr . ')'
  493          | expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 950


State 740

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  489 expr_mtag: "$a" '(' expr . ')'
  493          | expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 951


State 741

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$c" '(' expr . ')' '(' ')'
  492          | "$c" '(' expr . ')' '(' expr_list ')'
  493          | expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 952


State 742

   36 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 36 (string_builder)


State 743

   35 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 953
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 744

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   34 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 224
    STRING_CHARACTER_ESC  shift, and go to state 225

    $default  reduce using rule 34 (string_builder_body)


State 745

  838 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 954


State 746

  839 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 955


State 747

  325 expr_list: expr_list ',' . expr
  837 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 837 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 956
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 748

  810 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 957


State 749

  440 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 958


State 750

  375 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 959


State 751

  500 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 960


State 752

  379 func_addr_expr: '@' '@' '<' . $@24 type_declaration_no_options '>' $@25 func_addr_name
  382               | '@' '@' '<' . $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    ':'       reduce using rule 380 ($@26)
    '>'       reduce using rule 380 ($@26)
    '('       reduce using rule 380 ($@26)
    $default  reduce using rule 377 ($@24)

    $@24  go to state 961
    $@26  go to state 962


State 753

  374 func_addr_name: name_in_namespace .

    $default  reduce using rule 374 (func_addr_name)


State 754

  376 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 376 (func_addr_expr)


State 755

  840 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 963


State 756

  804 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 964
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 757

  829 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  837 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 837 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 602
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 965
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 758

  830 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 966


State 759

  394 expr_call: name_in_namespace '(' "uninitialized" . ')'
  396          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967
    ')'     shift, and go to state 968

    make_struct_fields  go to state 765
    make_struct_single  go to state 969


State 760

  778 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  779                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 970


State 761

  272 name_in_namespace: "name" .
  273                  | "name" . "::" "name"
  774 make_struct_fields: "name" . copy_or_move expr
  775                   | "name" . ":=" expr

    "<-"  shift, and go to state 859
    ":="  shift, and go to state 971
    "::"  shift, and go to state 97
    '='   shift, and go to state 861

    $default  reduce using rule 272 (name_in_namespace)

    copy_or_move  go to state 972


State 762

  370 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  810 make_dim_decl: '[' . expr_list optional_comma ']'
  838 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  839                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 760
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 761
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 597
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 973
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 763

  393 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 393 (expr_call)


State 764

  325 expr_list: expr_list . ',' expr
  371 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  397 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 974
    ')'  shift, and go to state 975


State 765

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  783 make_struct_single: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 783 (make_struct_single)


State 766

  395 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 977


State 767

  134 annotation_list: annotation_list . ',' annotation_declaration
  136 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 106
    ']'  shift, and go to state 978


State 768

  340 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 979


State 769

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 337

    $default  reduce using rule 139 (optional_function_argument_list)

    optional_function_argument_list  go to state 980


State 770

  331 block_or_lambda: '@' '@' .

    $default  reduce using rule 331 (block_or_lambda)


State 771

  264 expressions: expressions . expression_any
  265            | expressions . error
  343 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468
    '}'                               shift, and go to state 981

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)

    SEMICOLON                         go to state 877
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    expression_if_then_else           go to state 881
    $@5                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@6                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@7                               go to state 888
    expression_with                   go to state 889
    $@8                               go to state 890
    expression_with_alias             go to state 891
    expr_call_pipe                    go to state 471
    expression_any                    go to state 893
    name_in_namespace                 go to state 472
    expression_delete                 go to state 894
    expr_new                          go to state 473
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 902
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 903
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 772

  342 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 768

    $default  reduce using rule 339 (optional_capture_list)

    optional_capture_list  go to state 982


State 773

  457 expr: expr "is" "type" . '<' $@30 type_declaration_no_options '>' $@31

    '<'  shift, and go to state 983


State 774

  499 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 984


State 775

  459 expr: expr "is" "name" .

    $default  reduce using rule 459 (expr)


State 776

  458 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 458 (expr)


State 777

  463 expr: expr "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 985


State 778

  497 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 986


State 779

  460 expr: expr "as" "name" .

    $default  reduce using rule 460 (expr)


State 780

  464 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 464 (expr)


State 781

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  414     | expr "<<" expr .
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '-'   shift, and go to state 640
    '+'   shift, and go to state 641
    '*'   shift, and go to state 642
    '/'   shift, and go to state 643
    '%'   shift, and go to state 644
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 414 (expr)


State 782

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  415     | expr ">>" expr .
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '-'   shift, and go to state 640
    '+'   shift, and go to state 641
    '*'   shift, and go to state 642
    '/'   shift, and go to state 643
    '%'   shift, and go to state 644
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 415 (expr)


State 783

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  427     | expr "<=" expr .
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 427 (expr)


State 784

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  428     | expr ">=" expr .
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 428 (expr)


State 785

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  425     | expr "==" expr .
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 425 (expr)


State 786

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  426     | expr "!=" expr .
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 426 (expr)


State 787

  372 expr_method_call: expr "->" "name" . '(' ')'
  373                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 987


State 788

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  453     | expr "??" expr .
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 453 (expr)


State 789

  494 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 988


State 790

  445 expr: expr "?." "name" .

    $default  reduce using rule 445 (expr)


State 791

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  443     | expr "?[" expr . ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ']'    shift, and go to state 989


State 792

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  477     | expr "<|" expr .
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 477 (expr)


State 793

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  478     | expr "|>" expr .
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 622
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 478 (expr)


State 794

  398 expr_call: basic_type_declaration . '(' ')'
  399          | basic_type_declaration . '(' expr_list ')'
  479 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 648

    $default  reduce using rule 479 (expr)


State 795

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  416     | expr "<<<" expr .
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '-'   shift, and go to state 640
    '+'   shift, and go to state 641
    '*'   shift, and go to state 642
    '/'   shift, and go to state 643
    '%'   shift, and go to state 644
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 416 (expr)


State 796

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  417     | expr ">>>" expr .
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '-'   shift, and go to state 640
    '+'   shift, and go to state 641
    '*'   shift, and go to state 642
    '/'   shift, and go to state 643
    '%'   shift, and go to state 644
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 417 (expr)


State 797

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  432     | expr "&&" expr .
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 432 (expr)


State 798

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  433     | expr "||" expr .
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "^^"   shift, and go to state 632
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 433 (expr)


State 799

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  434     | expr "^^" expr .
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 434 (expr)


State 800

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  435     | expr ".." expr .
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    ".."  error (nonassociative)

    $default  reduce using rule 435 (expr)


State 801

  465 expr: expr '?' "as" . "name"
  468     | expr '?' "as" . "type" '<' $@34 type_declaration '>' $@35
  469     | expr '?' "as" . basic_type_declaration
  498 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 990
    "bool"      shift, and go to state 235
    "void"      shift, and go to state 236
    "string"    shift, and go to state 237
    "int"       shift, and go to state 239
    "int2"      shift, and go to state 240
    "int3"      shift, and go to state 241
    "int4"      shift, and go to state 242
    "uint"      shift, and go to state 243
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 245
    "uint3"     shift, and go to state 246
    "uint4"     shift, and go to state 247
    "float"     shift, and go to state 248
    "float2"    shift, and go to state 249
    "float3"    shift, and go to state 250
    "float4"    shift, and go to state 251
    "range"     shift, and go to state 252
    "urange"    shift, and go to state 253
    "range64"   shift, and go to state 254
    "urange64"  shift, and go to state 255
    "int64"     shift, and go to state 257
    "uint64"    shift, and go to state 258
    "double"    shift, and go to state 259
    "int8"      shift, and go to state 262
    "uint8"     shift, and go to state 263
    "int16"     shift, and go to state 264
    "uint16"    shift, and go to state 265
    "$f"        shift, and go to state 991
    "name"      shift, and go to state 992

    basic_type_declaration  go to state 993


State 802

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  454     | expr '?' expr . ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    ':'    shift, and go to state 994
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646


State 803

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  430     | expr '|' expr .
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 430 (expr)


State 804

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  431     | expr '^' expr .
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 431 (expr)


State 805

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  429     | expr '&' expr .
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 429 (expr)


State 806

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  423     | expr '<' expr .
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 423 (expr)


State 807

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  424     | expr '>' expr .
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 424 (expr)


State 808

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  419     | expr '-' expr .
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '*'   shift, and go to state 642
    '/'   shift, and go to state 643
    '%'   shift, and go to state 644
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 419 (expr)


State 809

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  418     | expr '+' expr .
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '*'   shift, and go to state 642
    '/'   shift, and go to state 643
    '%'   shift, and go to state 644
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 418 (expr)


State 810

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  420     | expr '*' expr .
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 420 (expr)


State 811

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  421     | expr '/' expr .
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 421 (expr)


State 812

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  422     | expr '%' expr .
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 612
    "as"  shift, and go to state 613
    "++"  shift, and go to state 616
    "--"  shift, and go to state 617
    "->"  shift, and go to state 622
    "??"  shift, and go to state 623
    "?."  shift, and go to state 624
    "?["  shift, and go to state 625
    "<|"  shift, and go to state 626
    "|>"  shift, and go to state 627
    '.'   shift, and go to state 645
    '['   shift, and go to state 646

    $default  reduce using rule 422 (expr)


State 813

  446 expr: expr '.' "?." . "name"
  496 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 995
    "name"  shift, and go to state 996


State 814

  444 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 997
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 815

  493 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 998


State 816

  383 expr_field: expr '.' "name" .
  385           | expr '.' "name" . '(' ')'
  386           | expr '.' "name" . '(' expr_list ')'
  387           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 999

    $default  reduce using rule 383 (expr_field)


State 817

  384 expr_field: expr '.' '.' . "name"
  495 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1000
    "name"  shift, and go to state 1001


State 818

  442 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1002
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 819

  392 expr_field: expr '.' $@28 . error $@29

    error  shift, and go to state 1003


State 820

  388 expr_field: expr '.' basic_type_declaration . '(' ')'
  389           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1004


State 821

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  441     | expr '[' expr . ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ']'    shift, and go to state 1005


State 822

  398 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 398 (expr_call)


State 823

  325 expr_list: expr_list . ',' expr
  399 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1007


State 824

  723 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 722 ($@60)

    $@60  go to state 1008


State 825

  713 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 712 ($@54)

    $@54  go to state 1009


State 826

  677 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 676 ($@49)

    $@49  go to state 1010


State 827

  671 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1011


State 828

  727 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 726 ($@62)

    $@62  go to state 1012


State 829

  730 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1013


State 830

  734 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 733 ($@66)

    $@66  go to state 1014


State 831

  737 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1015


State 832

  741 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 740 ($@70)

    $@70  go to state 1016


State 833

  744 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1017


State 834

  527 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1018


State 835

  747 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 746 ($@74)

    $@74  go to state 1019


State 836

  529 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 660
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    tuple_type                          go to state 1020
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 663


State 837

  533 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1021


State 838

  750 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 749 ($@76)

    $@76  go to state 1022


State 839

  535 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 664

    variant_type  go to state 1023


State 840

  271 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 704
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 705
    '>'                    shift, and go to state 1024
    ';'                    shift, and go to state 16

    COMMA      go to state 706
    SEMICOLON  go to state 707
    c_or_s     go to state 1025


State 841

  270 type_declaration_no_options_list: type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 270 (type_declaration_no_options_list)


State 842

  696 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 696 (type_declaration_no_options_no_dim)


State 843

  267 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 267 (optional_expr_list)


State 844

  684 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 684 (dim_list)


State 845

  581 commas: COMMA .

    $default  reduce using rule 581 (commas)


State 846

  582 commas: commas . COMMA
  599 optional_commas: commas .
  674 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1026
    "new line, comma"  shift, and go to state 704
    ','                shift, and go to state 705

    $default  reduce using rule 599 (optional_commas)

    COMMA  go to state 1027


State 847

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas . $@88 '}'

    $default  reduce using rule 767 ($@88)

    $@88  go to state 1028


State 848

   77 semis: SEMICOLON .

    $default  reduce using rule 77 (semis)


State 849

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  532 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 229
    "array"                shift, and go to state 230
    "table"                shift, and go to state 231
    "typedecl"             shift, and go to state 232
    "iterator"             shift, and go to state 233
    "smart_ptr"            shift, and go to state 234
    "bool"                 shift, and go to state 235
    "void"                 shift, and go to state 236
    "string"               shift, and go to state 237
    "auto"                 shift, and go to state 238
    "int"                  shift, and go to state 239
    "int2"                 shift, and go to state 240
    "int3"                 shift, and go to state 241
    "int4"                 shift, and go to state 242
    "uint"                 shift, and go to state 243
    "bitfield"             shift, and go to state 244
    "uint2"                shift, and go to state 245
    "uint3"                shift, and go to state 246
    "uint4"                shift, and go to state 247
    "float"                shift, and go to state 248
    "float2"               shift, and go to state 249
    "float3"               shift, and go to state 250
    "float4"               shift, and go to state 251
    "range"                shift, and go to state 252
    "urange"               shift, and go to state 253
    "range64"              shift, and go to state 254
    "urange64"             shift, and go to state 255
    "block"                shift, and go to state 256
    "int64"                shift, and go to state 257
    "uint64"               shift, and go to state 258
    "double"               shift, and go to state 259
    "function"             shift, and go to state 260
    "lambda"               shift, and go to state 261
    "int8"                 shift, and go to state 262
    "uint8"                shift, and go to state 263
    "int16"                shift, and go to state 264
    "uint16"               shift, and go to state 265
    "tuple"                shift, and go to state 266
    "variant"              shift, and go to state 267
    "::"                   shift, and go to state 58
    "$t"                   shift, and go to state 268
    "name"                 shift, and go to state 660
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 269
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON                           go to state 1029
    name_in_namespace                   go to state 270
    tuple_type                          go to state 1030
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 663


State 850

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis . $@80 '}'

    $default  reduce using rule 757 ($@80)

    $@80  go to state 1031


State 851

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  538 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 664
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON     go to state 1029
    variant_type  go to state 1032


State 852

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 762 ($@84)

    $@84  go to state 1033


State 853

  579 enum_expression: "name" .
  580                | "name" . '=' expr

    '='  shift, and go to state 1034

    $default  reduce using rule 579 (enum_expression)


State 854

  584 enum_list: enum_expression .

    $default  reduce using rule 584 (enum_list)


State 855

  585 enum_list: enum_list . commas enum_expression
  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list . optional_commas $@44 '}'

    "new line, comma"  shift, and go to state 704
    ','                shift, and go to state 705

    $default  reduce using rule 598 (optional_commas)

    COMMA            go to state 845
    commas           go to state 1035
    optional_commas  go to state 1036


State 856

  523 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 523 (function_argument_declaration)


State 857

  627 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1037
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 858

  628 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1038


State 859

  540 copy_or_move: "<-" .

    $default  reduce using rule 540 (copy_or_move)


State 860

  629 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  630                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1039


State 861

  539 copy_or_move: '=' .

    $default  reduce using rule 539 (copy_or_move)


State 862

  543 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  544                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1040


State 863

  542 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 542 (variable_declaration)


State 864

  545 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1041
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 865

  265 expressions: expressions error .

    $default  reduce using rule 265 (expressions)


State 866

  289 expression_return: "return" .
  290                  | "return" . expr
  291                  | "return" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1042
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 289 (expression_return)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1043
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 867

  287 expression_break: "break" .

    $default  reduce using rule 287 (expression_break)


State 868

  294 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1044
    $@12              go to state 407


State 869

  275 expression_delete: "delete" . expr
  276                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "explicit"                        shift, and go to state 1045
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1046
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 870

   96 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1047


State 871

  288 expression_continue: "continue" .

    $default  reduce using rule 288 (expression_continue)


State 872

  262 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1048


State 873

   56 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1049


State 874

   57 expression_goto: "goto" . "label" "integer constant"
   58                | "goto" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 1050
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1051
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 875

   91 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  481 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 150
    '('                    shift, and go to state 573

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1052


State 876

  292 expression_yield: "yield" . expr
  293                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1053
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1054
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 877

  244 expression_any: SEMICOLON .

    $default  reduce using rule 244 (expression_any)


State 878

  260 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1055


State 879

  261 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1056


State 880

   88 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1057


State 881

  257 expression_any: expression_if_then_else .

    $default  reduce using rule 257 (expression_any)


State 882

   87 expression_if_then_else: $@5 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1058
    "static_if"  shift, and go to state 1059

    if_or_static_if  go to state 1060


State 883

  258 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 258 (expression_any)


State 884

  252 expression_any: expression_for_loop .

    $default  reduce using rule 252 (expression_any)


State 885

   90 expression_for_loop: $@6 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1061


State 886

  249 expression_any: expression_unsafe .

    $default  reduce using rule 249 (expression_any)


State 887

  248 expression_any: expression_while_loop .

    $default  reduce using rule 248 (expression_any)


State 888

   93 expression_while_loop: $@7 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1062


State 889

  250 expression_any: expression_with .

    $default  reduce using rule 250 (expression_any)


State 890

   95 expression_with: $@8 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1063


State 891

  251 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1064


State 892

  242 expression_block: $@12 '{' expressions $@13 . '}' expression_block_finally

    '}'  shift, and go to state 1065


State 893

  264 expressions: expressions expression_any .

    $default  reduce using rule 264 (expressions)


State 894

  246 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1066


State 895

   75 expression_if_one_liner: expression_break .
  253 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 75 (expression_if_one_liner)

    SEMICOLON  go to state 1067


State 896

   76 expression_if_one_liner: expression_continue .
  254 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 76 (expression_if_one_liner)

    SEMICOLON  go to state 1068


State 897

   73 expression_if_one_liner: expression_return .
  255 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 73 (expression_if_one_liner)

    SEMICOLON  go to state 1069


State 898

   74 expression_if_one_liner: expression_yield .
  256 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 74 (expression_if_one_liner)

    SEMICOLON  go to state 1070


State 899

  259 expression_any: expression_try_catch .

    $default  reduce using rule 259 (expression_any)


State 900

  306 expression_let: kwd_let . optional_in_scope let_variable_declaration
  307               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  308               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1071

    $default  reduce using rule 301 (optional_in_scope)

    optional_in_scope  go to state 1072


State 901

  247 expression_any: expression_let .

    $default  reduce using rule 247 (expression_any)


State 902

  245 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1073


State 903

   72 expression_if_one_liner: expr .
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 612
    "as"    shift, and go to state 613
    "+="    shift, and go to state 1074
    "-="    shift, and go to state 1075
    "/="    shift, and go to state 1076
    "*="    shift, and go to state 1077
    "%="    shift, and go to state 1078
    "&="    shift, and go to state 1079
    "|="    shift, and go to state 1080
    "^="    shift, and go to state 1081
    "<<"    shift, and go to state 614
    ">>"    shift, and go to state 615
    "++"    shift, and go to state 616
    "--"    shift, and go to state 617
    "<="    shift, and go to state 618
    "<<="   shift, and go to state 1082
    ">>="   shift, and go to state 1083
    ">="    shift, and go to state 619
    "=="    shift, and go to state 620
    "!="    shift, and go to state 621
    "->"    shift, and go to state 622
    "<-"    shift, and go to state 1084
    "??"    shift, and go to state 623
    "?."    shift, and go to state 624
    "?["    shift, and go to state 625
    "<|"    shift, and go to state 626
    "|>"    shift, and go to state 627
    ":="    shift, and go to state 1085
    "<<<"   shift, and go to state 628
    ">>>"   shift, and go to state 629
    "<<<="  shift, and go to state 1086
    ">>>="  shift, and go to state 1087
    "&&"    shift, and go to state 630
    "||"    shift, and go to state 631
    "^^"    shift, and go to state 632
    "&&="   shift, and go to state 1088
    "||="   shift, and go to state 1089
    "^^="   shift, and go to state 1090
    ".."    shift, and go to state 633
    '='     shift, and go to state 1091
    '?'     shift, and go to state 634
    '|'     shift, and go to state 635
    '^'     shift, and go to state 636
    '&'     shift, and go to state 637
    '<'     shift, and go to state 638
    '>'     shift, and go to state 639
    '-'     shift, and go to state 640
    '+'     shift, and go to state 641
    '*'     shift, and go to state 642
    '/'     shift, and go to state 643
    '%'     shift, and go to state 644
    '.'     shift, and go to state 645
    '['     shift, and go to state 646

    "if"      reduce using rule 72 (expression_if_one_liner)
    $default  reduce using rule 351 (expr_assign)


State 904

  515 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  517                                 | struct_variable_declaration_list . $@36 structure_variable_declaration SEMICOLON
  519                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  521                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block
  621 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1092
    '['                    shift, and go to state 1093
    '}'                    shift, and go to state 1094

    "def"     reduce using rule 137 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 516 ($@36)

    optional_annotation_list_with_emit_semis  go to state 1095
    $@36                                      go to state 1096


State 905

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  552 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1097


State 906

  553 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 553 (let_variable_name_with_pos_list)


State 907

  554 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  555                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1098

    $default  reduce using rule 554 (let_variable_name_with_pos_list)


State 908

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"                   shift, and go to state 545
    ":="                   shift, and go to state 546
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 547
    ';'                    shift, and go to state 16

    SEMICOLON              go to state 1099
    copy_or_move_or_clone  go to state 1100


State 909

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1101
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 910

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  565 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 612
    "as"                   shift, and go to state 613
    "<<"                   shift, and go to state 614
    ">>"                   shift, and go to state 615
    "++"                   shift, and go to state 616
    "--"                   shift, and go to state 617
    "<="                   shift, and go to state 618
    ">="                   shift, and go to state 619
    "=="                   shift, and go to state 620
    "!="                   shift, and go to state 621
    "->"                   shift, and go to state 622
    "??"                   shift, and go to state 623
    "?."                   shift, and go to state 624
    "?["                   shift, and go to state 625
    "<|"                   shift, and go to state 626
    "|>"                   shift, and go to state 627
    "<<<"                  shift, and go to state 628
    ">>>"                  shift, and go to state 629
    "&&"                   shift, and go to state 630
    "||"                   shift, and go to state 631
    "^^"                   shift, and go to state 632
    ".."                   shift, and go to state 633
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 634
    '|'                    shift, and go to state 635
    '^'                    shift, and go to state 636
    '&'                    shift, and go to state 637
    '<'                    shift, and go to state 638
    '>'                    shift, and go to state 639
    '-'                    shift, and go to state 640
    '+'                    shift, and go to state 641
    '*'                    shift, and go to state 642
    '/'                    shift, and go to state 643
    '%'                    shift, and go to state 644
    '.'                    shift, and go to state 645
    '['                    shift, and go to state 646
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1102


State 911

  566 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 566 (global_let_variable_declaration)


State 912

  694 type_declaration_no_options_no_dim: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 913

  717 type_declaration_no_options_no_dim: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 914

  720 type_declaration_no_options_no_dim: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 915

  681 table_type_pair: type_declaration c_or_s type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 681 (table_type_pair)


State 916

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1103


State 917

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1104


State 918

  279 new_type_declaration: '<' $@14 type_declaration . '>' $@15
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 1105


State 919

  285 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  791 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967

    $default  reduce using rule 791 (use_initializer)

    make_struct_fields  go to state 765
    make_struct_single  go to state 1106


State 920

  283 expr_new: "new" new_type_declaration '(' expr_list . ')'
  325 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1107


State 921

  284 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1108


State 922

  282 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1109


State 923

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  323               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 704
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 705
    '>'                    shift, and go to state 1110
    ';'                    shift, and go to state 16

    COMMA      go to state 706
    SEMICOLON  go to state 707
    c_or_s     go to state 1111


State 924

  321 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1112


State 925

  320 expr_type_decl: "type" '<' $@22 type_declaration . '>' $@23
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 1113


State 926

  813 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1114
    type_declaration_no_options_no_dim  go to state 276


State 927

  816 make_dim_decl: "array" "tuple" '<' $@101 . type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1115
    type_declaration_no_options_no_dim  go to state 276


State 928

  819 make_dim_decl: "array" "variant" '<' $@103 . type_declaration_no_options '>' $@104 '(' make_variant_dim ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1116
    type_declaration_no_options_no_dim  go to state 276


State 929

  823 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    '>'  shift, and go to state 1117


State 930

  820 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1118


State 931

  832 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1119


State 932

  833 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1120
    type_declaration_no_options_no_dim  go to state 276


State 933

  831 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1121


State 934

  450 expr: "deref" '(' expr ')' .

    $default  reduce using rule 450 (expr)


State 935

  311 expr_cast: "cast" '<' $@16 type_declaration_no_options . '>' $@17 expr

    '>'  shift, and go to state 1122


State 936

  314 expr_cast: "upcast" '<' $@18 type_declaration_no_options . '>' $@19 expr

    '>'  shift, and go to state 1123


State 937

  451 expr: "addr" '(' expr ')' .

    $default  reduce using rule 451 (expr)


State 938

  317 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options . '>' $@21 expr

    '>'  shift, and go to state 1124


State 939

  481 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 481 (expr)


State 940

  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1125


State 941

  824 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1126


State 942

  803 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    '>'  shift, and go to state 1127


State 943

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1128


State 944

  806 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1129


State 945

  800 make_struct_decl: "variant" '<' $@93 type_declaration_no_options . '>' $@94 '(' make_variant_dim ')'

    '>'  shift, and go to state 1130


State 946

  482 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  483               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  484               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 768

    $default  reduce using rule 339 (optional_capture_list)

    optional_capture_list  go to state 1131


State 947

  485 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 485 (expr_mtag)


State 948

  486 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 486 (expr_mtag)


State 949

  487 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 487 (expr_mtag)


State 950

  488 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 488 (expr_mtag)


State 951

  489 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 489 (expr_mtag)


State 952

  491 expr_mtag: "$c" '(' expr ')' . '(' ')'
  492          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1132


State 953

   35 string_builder_body: string_builder_body "{" expr . "}"
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    "}"    shift, and go to state 1133
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646


State 954

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1134
    ','   shift, and go to state 860


State 955

  839 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 1135


State 956

  325 expr_list: expr_list ',' expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 325 (expr_list)


State 957

  810 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 810 (make_dim_decl)


State 958

  440 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 440 (expr)


State 959

  375 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1136
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 960

  500 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1137
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 961

  379 func_addr_expr: '@' '@' '<' $@24 . type_declaration_no_options '>' $@25 func_addr_name

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1138
    type_declaration_no_options_no_dim  go to state 276


State 962

  382 func_addr_expr: '@' '@' '<' $@26 . optional_function_argument_list optional_function_type '>' $@27 func_addr_name

    '('  shift, and go to state 337

    $default  reduce using rule 139 (optional_function_argument_list)

    optional_function_argument_list  go to state 1139


State 963

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1140
    ','   shift, and go to state 860


State 964

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  804 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 804 (make_map_tuple)


State 965

  829 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 829 (expr_map_tuple_list)


State 966

  830 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 830 (make_table_decl)


State 967

  774 make_struct_fields: "name" . copy_or_move expr
  775                   | "name" . ":=" expr

    "<-"  shift, and go to state 859
    ":="  shift, and go to state 971
    '='   shift, and go to state 861

    copy_or_move  go to state 972


State 968

  394 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 394 (expr_call)


State 969

  396 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1141


State 970

  778 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  779                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1142
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 971

  775 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1143
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 972

  774 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1144
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 973

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1145


State 974

  325 expr_list: expr_list ',' . expr
  371 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1146
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 956
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 975

  397 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 397 (expr_call)


State 976

  776 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  777                   | make_struct_fields ',' . "name" ":=" expr
  780                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1147
    "name"  shift, and go to state 1148


State 977

  395 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 395 (expr_call)


State 978

  136 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 136 (optional_annotation_list)


State 979

  340 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1149
    ":="    shift, and go to state 1150
    "name"  shift, and go to state 1151
    '='     shift, and go to state 1152
    '&'     shift, and go to state 1153

    capture_entry  go to state 1154
    capture_list   go to state 1155


State 980

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 404

    $default  reduce using rule 142 (optional_function_type)

    optional_function_type  go to state 1156


State 981

  343 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 343 (expr_full_block_assumed_piped)


State 982

  342 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 337

    $default  reduce using rule 139 (optional_function_argument_list)

    optional_function_argument_list  go to state 1157


State 983

  457 expr: expr "is" "type" '<' . $@30 type_declaration_no_options '>' $@31

    $default  reduce using rule 455 ($@30)

    $@30  go to state 1158


State 984

  499 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1159
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 985

  463 expr: expr "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 461 ($@32)

    $@32  go to state 1160


State 986

  497 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1161
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 987

  372 expr_method_call: expr "->" "name" '(' . ')'
  373                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1162
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1163
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 988

  494 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1164
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 989

  443 expr: expr "?[" expr ']' .

    $default  reduce using rule 443 (expr)


State 990

  468 expr: expr '?' "as" "type" . '<' $@34 type_declaration '>' $@35

    '<'  shift, and go to state 1165


State 991

  498 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1166


State 992

  465 expr: expr '?' "as" "name" .

    $default  reduce using rule 465 (expr)


State 993

  469 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 469 (expr)


State 994

  454 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1167
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 995

  496 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1168


State 996

  446 expr: expr '.' "?." "name" .

    $default  reduce using rule 446 (expr)


State 997

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  444     | expr '.' "?[" expr . ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ']'    shift, and go to state 1169


State 998

  493 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1170
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 999

  385 expr_field: expr '.' "name" '(' . ')'
  386           | expr '.' "name" '(' . expr_list ')'
  387           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1171
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1172
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1173
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1000

  495 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1174


State 1001

  384 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 384 (expr_field)


State 1002

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  442     | expr '.' '[' expr . ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ']'    shift, and go to state 1175


State 1003

  392 expr_field: expr '.' $@28 error . $@29

    $default  reduce using rule 391 ($@29)

    $@29  go to state 1176


State 1004

  388 expr_field: expr '.' basic_type_declaration '(' . ')'
  389           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1177
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1178
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1005

  441 expr: expr '[' expr ']' .

    $default  reduce using rule 441 (expr)


State 1006

  325 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 956
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1007

  399 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 399 (expr_call)


State 1008

  723 type_declaration_no_options_no_dim: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 1009

  713 type_declaration_no_options_no_dim: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 1010

  677 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 677 (bitfield_type_declaration)


State 1011

  671 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 671 (bitfield_bits)


State 1012

  727 type_declaration_no_options_no_dim: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 1013

  730 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 729 ($@64)

    $@64  go to state 1179


State 1014

  734 type_declaration_no_options_no_dim: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 1015

  737 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 736 ($@68)

    $@68  go to state 1180


State 1016

  741 type_declaration_no_options_no_dim: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 1017

  744 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 743 ($@72)

    $@72  go to state 1181


State 1018

  527 tuple_type: "name" ':' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 527 (tuple_type)


State 1019

  747 type_declaration_no_options_no_dim: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 747 (type_declaration_no_options_no_dim)


State 1020

  529 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 529 (tuple_type_list)


State 1021

  533 variant_type: "name" ':' type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 533 (variant_type)


State 1022

  750 type_declaration_no_options_no_dim: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 750 (type_declaration_no_options_no_dim)


State 1023

  535 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 535 (variant_type_list)


State 1024

  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1182


State 1025

  271 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1183


State 1026

  674 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 674 (bitfield_alias_bits)


State 1027

  582 commas: commas COMMA .

    $default  reduce using rule 582 (commas)


State 1028

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 . '}'

    '}'  shift, and go to state 1184


State 1029

   78 semis: semis SEMICOLON .

    $default  reduce using rule 78 (semis)


State 1030

  532 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 532 (tuple_alias_type_list)


State 1031

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 . '}'

    '}'  shift, and go to state 1185


State 1032

  538 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 538 (variant_alias_type_list)


State 1033

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1186


State 1034

  580 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1187
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1035

  582 commas: commas . COMMA
  585 enum_list: enum_list commas . enum_expression
  599 optional_commas: commas .

    "name"             shift, and go to state 853
    "new line, comma"  shift, and go to state 704
    ','                shift, and go to state 705

    $default  reduce using rule 599 (optional_commas)

    COMMA            go to state 1027
    enum_expression  go to state 1188


State 1036

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas . $@44 '}'

    $default  reduce using rule 606 ($@44)

    $@44  go to state 1189


State 1037

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  627 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1190


State 1038

  628 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 628 (variable_name_with_pos_list)


State 1039

  629 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  630                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1191

    $default  reduce using rule 629 (variable_name_with_pos_list)


State 1040

  543 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  544                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 859
    '='   shift, and go to state 861
    '|'   shift, and go to state 378

    $default  reduce using rule 543 (variable_declaration)

    copy_or_move  go to state 1192


State 1041

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  545 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 545 (variable_declaration)


State 1042

  291 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1193
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1043

  290 expression_return: "return" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 290 (expression_return)


State 1044

  294 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1194


State 1045

  276 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1195
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1046

  275 expression_delete: "delete" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 275 (expression_delete)


State 1047

   96 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1196


State 1048

  262 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 262 (expression_any)


State 1049

   56 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1197


State 1050

   57 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1198


State 1051

   58 expression_goto: "goto" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 58 (expression_goto)


State 1052

   91 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1199
    $@12              go to state 407


State 1053

  293 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1200
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1054

  292 expression_yield: "yield" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 292 (expression_yield)


State 1055

  260 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 260 (expression_any)


State 1056

  261 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 1057

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1201


State 1058

   68 if_or_static_if: "if" .

    $default  reduce using rule 68 (if_or_static_if)


State 1059

   69 if_or_static_if: "static_if" .

    $default  reduce using rule 69 (if_or_static_if)


State 1060

   87 expression_if_then_else: $@5 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1202


State 1061

   90 expression_for_loop: $@6 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1203


State 1062

   93 expression_while_loop: $@7 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1204


State 1063

   95 expression_with: $@8 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1205


State 1064

  251 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 251 (expression_any)


State 1065

  242 expression_block: $@12 '{' expressions $@13 '}' . expression_block_finally

    "finally"  shift, and go to state 1206

    $default  reduce using rule 236 (expression_block_finally)

    expression_block_finally  go to state 1207


State 1066

  246 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 246 (expression_any)


State 1067

  253 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 253 (expression_any)


State 1068

  254 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 254 (expression_any)


State 1069

  255 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 255 (expression_any)


State 1070

  256 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 256 (expression_any)


State 1071

  300 optional_in_scope: "inscope" .

    $default  reduce using rule 300 (optional_in_scope)


State 1072

  306 expression_let: kwd_let optional_in_scope . let_variable_declaration
  307               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  308               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 538
    "name"  shift, and go to state 539
    '('     shift, and go to state 1208
    '{'     shift, and go to state 1209

    tuple_expansion_variable_declaration  go to state 1210
    let_variable_name_with_pos_list       go to state 540
    let_variable_declaration              go to state 1211


State 1073

  245 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 245 (expression_any)


State 1074

  361 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1212
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1075

  362 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1213
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1076

  364 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1214
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1077

  363 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1215
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1078

  365 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1216
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1079

  355 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1217
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1080

  356 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1218
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1081

  357 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1219
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1082

  366 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1220
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1083

  367 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1221
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1084

  353 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1222
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1085

  354 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1223
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1086

  368 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1224
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1087

  369 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1225
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1088

  358 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1226
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1089

  359 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1227
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1090

  360 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1228
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1091

  352 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1229
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1092

  515 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 515 (struct_variable_declaration_list)


State 1093

  138 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 1230
    name_in_namespace             go to state 71


State 1094

  621 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 621 (optional_struct_variable_declaration_list)


State 1095

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  521                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1231


State 1096

  517 struct_variable_declaration_list: struct_variable_declaration_list $@36 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 221

    $default  reduce using rule 501 (optional_field_annotation)

    metadata_argument_list          go to state 222
    optional_field_annotation       go to state 1232
    structure_variable_declaration  go to state 1233


State 1097

  552 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 552 (let_variable_name_with_pos_list)


State 1098

  555 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1234


State 1099

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 561 (let_variable_declaration)


State 1100

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1235
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1101

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 612
    "as"                   shift, and go to state 613
    "<<"                   shift, and go to state 614
    ">>"                   shift, and go to state 615
    "++"                   shift, and go to state 616
    "--"                   shift, and go to state 617
    "<="                   shift, and go to state 618
    ">="                   shift, and go to state 619
    "=="                   shift, and go to state 620
    "!="                   shift, and go to state 621
    "->"                   shift, and go to state 622
    "??"                   shift, and go to state 623
    "?."                   shift, and go to state 624
    "?["                   shift, and go to state 625
    "<|"                   shift, and go to state 626
    "|>"                   shift, and go to state 627
    "<<<"                  shift, and go to state 628
    ">>>"                  shift, and go to state 629
    "&&"                   shift, and go to state 630
    "||"                   shift, and go to state 631
    "^^"                   shift, and go to state 632
    ".."                   shift, and go to state 633
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 634
    '|'                    shift, and go to state 635
    '^'                    shift, and go to state 636
    '&'                    shift, and go to state 637
    '<'                    shift, and go to state 638
    '>'                    shift, and go to state 639
    '-'                    shift, and go to state 640
    '+'                    shift, and go to state 641
    '*'                    shift, and go to state 642
    '/'                    shift, and go to state 643
    '%'                    shift, and go to state 644
    '.'                    shift, and go to state 645
    '['                    shift, and go to state 646
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1236


State 1102

  565 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 565 (global_let_variable_declaration)


State 1103

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 793 ($@90)

    $@90  go to state 1237


State 1104

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 796 ($@92)

    $@92  go to state 1238


State 1105

  279 new_type_declaration: '<' $@14 type_declaration '>' . $@15

    $default  reduce using rule 278 ($@15)

    $@15  go to state 1239


State 1106

  285 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1240


State 1107

  283 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 283 (expr_new)


State 1108

  284 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 284 (expr_new)


State 1109

  282 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 282 (expr_new)


State 1110

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1241


State 1111

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1242


State 1112

  321 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 321 (expr_type_info)


State 1113

  320 expr_type_decl: "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 319 ($@23)

    $@23  go to state 1243


State 1114

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1244


State 1115

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1245


State 1116

  819 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options . '>' $@104 '(' make_variant_dim ')'

    '>'  shift, and go to state 1246


State 1117

  823 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 822 ($@106)

    $@106  go to state 1247


State 1118

  820 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 820 (make_dim_decl)


State 1119

  832 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 268 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1248
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 602
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 603
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 1249
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1120

  833 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1250


State 1121

  831 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 831 (make_table_decl)


State 1122

  311 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 310 ($@17)

    $@17  go to state 1251


State 1123

  314 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 313 ($@19)

    $@19  go to state 1252


State 1124

  317 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 316 ($@21)

    $@21  go to state 1253


State 1125

  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 826 ($@108)

    $@108  go to state 1254


State 1126

  824 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 824 (make_dim_decl)


State 1127

  803 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 802 ($@96)

    $@96  go to state 1255


State 1128

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 808 ($@98)

    $@98  go to state 1256


State 1129

  806 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 806 (make_tuple_call)


State 1130

  800 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' . $@94 '(' make_variant_dim ')'

    $default  reduce using rule 799 ($@94)

    $@94  go to state 1257


State 1131

  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  483               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  484               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150
    '('                    shift, and go to state 1258

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1259


State 1132

  491 expr_mtag: "$c" '(' expr ')' '(' . ')'
  492          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1260
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1261
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1133

   35 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 35 (string_builder_body)


State 1134

  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1262
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1135

  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1263
    ','   shift, and go to state 860


State 1136

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  375 func_addr_name: "$i" '(' expr . ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1264


State 1137

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  500          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1265


State 1138

  379 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options . '>' $@25 func_addr_name

    '>'  shift, and go to state 1266


State 1139

  382 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list . optional_function_type '>' $@27 func_addr_name

    ':'  shift, and go to state 404

    $default  reduce using rule 142 (optional_function_type)

    optional_function_type  go to state 1267


State 1140

  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1268
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1141

  396 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 396 (expr_call)


State 1142

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  779                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1269


State 1143

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 775 (make_struct_fields)


State 1144

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 774 (make_struct_fields)


State 1145

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1270


State 1146

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  810 make_dim_decl: '[' . expr_list optional_comma ']'
  838 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  839                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 760
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 761
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 597
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1271
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1147

  780 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1272


State 1148

  776 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  777                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 859
    ":="  shift, and go to state 1273
    '='   shift, and go to state 861

    copy_or_move  go to state 1274


State 1149

  334 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1275


State 1150

  335 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1276


State 1151

  336 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1277


State 1152

  333 capture_entry: '=' . "name"

    "name"  shift, and go to state 1278


State 1153

  332 capture_entry: '&' . "name"

    "name"  shift, and go to state 1279


State 1154

  337 capture_list: capture_entry .

    $default  reduce using rule 337 (capture_list)


State 1155

  338 capture_list: capture_list . ',' capture_entry
  340 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1280
    ')'  shift, and go to state 1281


State 1156

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1282


State 1157

  342 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 404

    $default  reduce using rule 142 (optional_function_type)

    optional_function_type  go to state 1283


State 1158

  457 expr: expr "is" "type" '<' $@30 . type_declaration_no_options '>' $@31

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1284
    type_declaration_no_options_no_dim  go to state 276


State 1159

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  499          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1285


State 1160

  463 expr: expr "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1286


State 1161

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  497          | expr "as" "$f" '(' expr . ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1287


State 1162

  372 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 372 (expr_method_call)


State 1163

  325 expr_list: expr_list . ',' expr
  373 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1288


State 1164

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  494          | expr "?." "$f" '(' expr . ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1289


State 1165

  468 expr: expr '?' "as" "type" '<' . $@34 type_declaration '>' $@35

    $default  reduce using rule 466 ($@34)

    $@34  go to state 1290


State 1166

  498 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1291
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1167

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  454     | expr '?' expr ':' expr .
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 454 (expr)


State 1168

  496 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1292
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1169

  444 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 444 (expr)


State 1170

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  493          | expr '.' "$f" '(' expr . ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1293


State 1171

  387 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  810 make_dim_decl: '[' . expr_list optional_comma ']'
  838 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  839                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 760
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 761
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 597
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1294
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1172

  385 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 385 (expr_field)


State 1173

  325 expr_list: expr_list . ',' expr
  386 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1295


State 1174

  495 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1296
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1175

  442 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 442 (expr)


State 1176

  392 expr_field: expr '.' $@28 error $@29 .

    $default  reduce using rule 392 (expr_field)


State 1177

  388 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 388 (expr_field)


State 1178

  325 expr_list: expr_list . ',' expr
  389 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1297


State 1179

  730 type_declaration_no_options_no_dim: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 1180

  737 type_declaration_no_options_no_dim: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 1181

  744 type_declaration_no_options_no_dim: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 1182

  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 266 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1298
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 670
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1183

  271 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378

    $default  reduce using rule 271 (type_declaration_no_options_list)


State 1184

  768 bitfield_alias_declaration: "bitfield" $@85 optional_public_or_private_alias "name" optional_emit_commas $@86 '{' $@87 bitfield_alias_bits optional_commas $@88 '}' .

    $default  reduce using rule 768 (bitfield_alias_declaration)


State 1185

  758 tuple_alias_declaration: "tuple" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 tuple_alias_type_list optional_semis $@80 '}' .

    $default  reduce using rule 758 (tuple_alias_declaration)


State 1186

  763 variant_alias_declaration: "variant" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 variant_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 763 (variant_alias_declaration)


State 1187

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  580 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 580 (enum_expression)


State 1188

  585 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 585 (enum_list)


State 1189

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 . '}'

    '}'  shift, and go to state 1299


State 1190

  627 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 627 (variable_name_with_pos_list)


State 1191

  630 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1300


State 1192

  544 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1301
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1193

  291 expression_return: "return" "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 291 (expression_return)


State 1194

  294 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1302
    $@12              go to state 407


State 1195

  276 expression_delete: "delete" "explicit" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 276 (expression_delete)


State 1196

   96 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1303
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1197

   56 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 56 (expression_label)


State 1198

   57 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 57 (expression_goto)


State 1199

   91 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 91 (expression_unsafe)


State 1200

  293 expression_yield: "yield" "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 293 (expression_yield)


State 1201

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1304
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1202

   87 expression_if_then_else: $@5 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1305
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1203

   90 expression_for_loop: $@6 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_name_with_pos_list  go to state 1306


State 1204

   93 expression_while_loop: $@7 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1307
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1205

   95 expression_with: $@8 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1308
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1206

  239 expression_block_finally: "finally" . $@10 '{' expressions $@11 '}'

    $default  reduce using rule 237 ($@10)

    $@10  go to state 1309


State 1207

  242 expression_block: $@12 '{' expressions $@13 '}' expression_block_finally .

    $default  reduce using rule 242 (expression_block)


State 1208

  304 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  305                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1310

    tuple_expansion  go to state 1311


State 1209

  308 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 558 (variable_declaration_list)

    variable_declaration_list  go to state 1312


State 1210

  307 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 307 (expression_let)


State 1211

  306 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 306 (expression_let)


State 1212

  361 expr_assign: expr "+=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 361 (expr_assign)


State 1213

  362 expr_assign: expr "-=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 362 (expr_assign)


State 1214

  364 expr_assign: expr "/=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 364 (expr_assign)


State 1215

  363 expr_assign: expr "*=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 363 (expr_assign)


State 1216

  365 expr_assign: expr "%=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 365 (expr_assign)


State 1217

  355 expr_assign: expr "&=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 355 (expr_assign)


State 1218

  356 expr_assign: expr "|=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 356 (expr_assign)


State 1219

  357 expr_assign: expr "^=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 357 (expr_assign)


State 1220

  366 expr_assign: expr "<<=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 366 (expr_assign)


State 1221

  367 expr_assign: expr ">>=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 367 (expr_assign)


State 1222

  353 expr_assign: expr "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 353 (expr_assign)


State 1223

  354 expr_assign: expr ":=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 354 (expr_assign)


State 1224

  368 expr_assign: expr "<<<=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 368 (expr_assign)


State 1225

  369 expr_assign: expr ">>>=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 369 (expr_assign)


State 1226

  358 expr_assign: expr "&&=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 358 (expr_assign)


State 1227

  359 expr_assign: expr "||=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 359 (expr_assign)


State 1228

  360 expr_assign: expr "^^=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 360 (expr_assign)


State 1229

  352 expr_assign: expr '=' expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 352 (expr_assign)


State 1230

  134 annotation_list: annotation_list . ',' annotation_declaration
  138 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 106
    ']'  shift, and go to state 1313


State 1231

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  521                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1314
    "private"  shift, and go to state 1315

    $default  reduce using rule 508 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1316


State 1232

  513 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1317

    $default  reduce using rule 511 (optional_static_member_variable)

    optional_static_member_variable  go to state 1318


State 1233

  517 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1319


State 1234

  555 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 555 (let_variable_name_with_pos_list)


State 1235

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 612
    "as"                   shift, and go to state 613
    "<<"                   shift, and go to state 614
    ">>"                   shift, and go to state 615
    "++"                   shift, and go to state 616
    "--"                   shift, and go to state 617
    "<="                   shift, and go to state 618
    ">="                   shift, and go to state 619
    "=="                   shift, and go to state 620
    "!="                   shift, and go to state 621
    "->"                   shift, and go to state 622
    "??"                   shift, and go to state 623
    "?."                   shift, and go to state 624
    "?["                   shift, and go to state 625
    "<|"                   shift, and go to state 626
    "|>"                   shift, and go to state 627
    "<<<"                  shift, and go to state 628
    ">>>"                  shift, and go to state 629
    "&&"                   shift, and go to state 630
    "||"                   shift, and go to state 631
    "^^"                   shift, and go to state 632
    ".."                   shift, and go to state 633
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 634
    '|'                    shift, and go to state 635
    '^'                    shift, and go to state 636
    '&'                    shift, and go to state 637
    '<'                    shift, and go to state 638
    '>'                    shift, and go to state 639
    '-'                    shift, and go to state 640
    '+'                    shift, and go to state 641
    '*'                    shift, and go to state 642
    '/'                    shift, and go to state 643
    '%'                    shift, and go to state 644
    '.'                    shift, and go to state 645
    '['                    shift, and go to state 646
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1320


State 1236

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 563 (let_variable_declaration)


State 1237

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1321


State 1238

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1322


State 1239

  279 new_type_declaration: '<' $@14 type_declaration '>' $@15 .

    $default  reduce using rule 279 (new_type_declaration)


State 1240

  285 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 285 (expr_new)


State 1241

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1323
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1242

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1324


State 1243

  320 expr_type_decl: "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 320 (expr_type_decl)


State 1244

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 812 ($@100)

    $@100  go to state 1325


State 1245

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 815 ($@102)

    $@102  go to state 1326


State 1246

  819 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 818 ($@104)

    $@104  go to state 1327


State 1247

  823 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1328


State 1248

  832 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1329


State 1249

  269 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  829 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 757

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 1330


State 1250

  833 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1331


State 1251

  311 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1332
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1252

  314 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1333
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1253

  317 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1334
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1254

  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1335


State 1255

  803 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1336

    $default  reduce using rule 790 (use_initializer)

    use_initializer  go to state 1337


State 1256

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1338


State 1257

  800 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 . '(' make_variant_dim ')'

    '('  shift, and go to state 1339


State 1258

  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  483               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1340
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1341
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1259

  484 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1342
    $@12              go to state 407


State 1260

  491 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1261

  325 expr_list: expr_list . ',' expr
  492 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1343


State 1262

  325 expr_list: expr_list . ',' expr
  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1344


State 1263

  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1345
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1264

  375 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 375 (func_addr_name)


State 1265

  500 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1266

  379 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' . $@25 func_addr_name

    $default  reduce using rule 378 ($@25)

    $@25  go to state 1346


State 1267

  382 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type . '>' $@27 func_addr_name

    '>'  shift, and go to state 1347


State 1268

  325 expr_list: expr_list . ',' expr
  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1348


State 1269

  778 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  779                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 859
    ":="  shift, and go to state 1349
    '='   shift, and go to state 861

    copy_or_move  go to state 1350


State 1270

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 370 (expr_named_call)


State 1271

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1351


State 1272

  780 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1352
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1273

  777 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1353
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1274

  776 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1354
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1275

  334 capture_entry: "<-" "name" .

    $default  reduce using rule 334 (capture_entry)


State 1276

  335 capture_entry: ":=" "name" .

    $default  reduce using rule 335 (capture_entry)


State 1277

  336 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1355


State 1278

  333 capture_entry: '=' "name" .

    $default  reduce using rule 333 (capture_entry)


State 1279

  332 capture_entry: '&' "name" .

    $default  reduce using rule 332 (capture_entry)


State 1280

  338 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1149
    ":="    shift, and go to state 1150
    "name"  shift, and go to state 1151
    '='     shift, and go to state 1152
    '&'     shift, and go to state 1153

    capture_entry  go to state 1356


State 1281

  340 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 340 (optional_capture_list)


State 1282

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1357

    $default  reduce using rule 240 ($@12)

    expression_block       go to state 1358
    $@12                   go to state 407
    block_or_simple_block  go to state 1359


State 1283

  342 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1360


State 1284

  457 expr: expr "is" "type" '<' $@30 type_declaration_no_options . '>' $@31

    '>'  shift, and go to state 1361


State 1285

  499 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1286

  463 expr: expr "as" "type" '<' $@32 type_declaration . '>' $@33
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 1362


State 1287

  497 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1288

  373 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 373 (expr_method_call)


State 1289

  494 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1290

  468 expr: expr '?' "as" "type" '<' $@34 . type_declaration '>' $@35

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 275
    type_declaration_no_options_no_dim  go to state 276
    type_declaration                    go to state 1363


State 1291

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  498          | expr '?' "as" "$f" '(' expr . ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1364


State 1292

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  496          | expr '.' "?." "$f" '(' expr . ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1365


State 1293

  493 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1294

  387 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1366


State 1295

  386 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 386 (expr_field)


State 1296

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  495          | expr '.' '.' "$f" '(' expr . ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1367


State 1297

  389 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 389 (expr_field)


State 1298

  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1368


State 1299

  607 enum_declaration: optional_annotation_list "enum" $@42 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@43 enum_list optional_commas $@44 '}' .

    $default  reduce using rule 607 (enum_declaration)


State 1300

  630 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 630 (variable_name_with_pos_list)


State 1301

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  544 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 544 (variable_declaration)


State 1302

  294 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 294 (expression_try_catch)


State 1303

   96 expression_with_alias: "assume" "name" '=' expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 96 (expression_with_alias)


State 1304

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1369


State 1305

   87 expression_if_then_else: $@5 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1370


State 1306

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  629 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  630                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1371
    ','   shift, and go to state 860


State 1307

   93 expression_while_loop: $@7 "while" '(' expr . ')' optional_emit_semis expression_block
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1372


State 1308

   95 expression_with: $@8 "with" '(' expr . ')' optional_emit_semis expression_block
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1373


State 1309

  239 expression_block_finally: "finally" $@10 . '{' expressions $@11 '}'

    '{'  shift, and go to state 1374


State 1310

  302 tuple_expansion: "name" .

    $default  reduce using rule 302 (tuple_expansion)


State 1311

  303 tuple_expansion: tuple_expansion . ',' "name"
  304 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  305                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1375
    ')'  shift, and go to state 1376


State 1312

  308 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  559 variable_declaration_list: variable_declaration_list . SEMICOLON
  560                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 538
    "name"                 shift, and go to state 539
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1377

    SEMICOLON                        go to state 1378
    let_variable_name_with_pos_list  go to state 540
    let_variable_declaration         go to state 1379


State 1313

  138 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 152


State 1314

  509 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 509 (optional_public_or_private_member_variable)


State 1315

  510 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 510 (optional_public_or_private_member_variable)


State 1316

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@37 function_declaration_header SEMICOLON
  521                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1380
    "static"    shift, and go to state 1317

    $default  reduce using rule 511 (optional_static_member_variable)

    optional_static_member_variable  go to state 1381


State 1317

  512 optional_static_member_variable: "static" .

    $default  reduce using rule 512 (optional_static_member_variable)


State 1318

  513 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1382
    "sealed"    shift, and go to state 1383

    $default  reduce using rule 503 (optional_override)

    optional_override  go to state 1384


State 1319

  517 struct_variable_declaration_list: struct_variable_declaration_list $@36 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 517 (struct_variable_declaration_list)


State 1320

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 562 (let_variable_declaration)


State 1321

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1336

    $default  reduce using rule 790 (use_initializer)

    use_initializer  go to state 1385


State 1322

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1336

    $default  reduce using rule 790 (use_initializer)

    use_initializer  go to state 1386


State 1323

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1387


State 1324

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1388


State 1325

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1389


State 1326

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1390


State 1327

  819 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1391


State 1328

  823 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 266 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1392
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 670
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1329

  832 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 832 (make_table_decl)


State 1330

  269 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 269 (optional_expr_map_tuple_list)


State 1331

  833 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 268 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1393
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 602
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 603
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 1249
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1332

  311 expr_cast: "cast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 311 (expr_cast)


State 1333

  314 expr_cast: "upcast" '<' $@18 type_declaration_no_options '>' $@19 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 314 (expr_cast)


State 1334

  317 expr_cast: "reinterpret" '<' $@20 type_declaration_no_options '>' $@21 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 317 (expr_cast)


State 1335

  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1394
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1336

  791 use_initializer: "uninitialized" .

    $default  reduce using rule 791 (use_initializer)


State 1337

  803 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 803 (make_struct_decl)


State 1338

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1336

    $default  reduce using rule 790 (use_initializer)

    use_initializer  go to state 1395


State 1339

  800 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967

    make_struct_fields  go to state 1396
    make_variant_dim    go to state 1397


State 1340

  482 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 482 (expr_generator)


State 1341

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  483 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1398


State 1342

  484 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 484 (expr_generator)


State 1343

  492 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1344

  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1399


State 1345

  325 expr_list: expr_list . ',' expr
  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1400


State 1346

  379 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 750
    "name"  shift, and go to state 59

    name_in_namespace  go to state 753
    func_addr_name     go to state 1401


State 1347

  382 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' . $@27 func_addr_name

    $default  reduce using rule 381 ($@27)

    $@27  go to state 1402


State 1348

  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1403


State 1349

  779 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1404
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1350

  778 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1405
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1351

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1406


State 1352

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1407


State 1353

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 777 (make_struct_fields)


State 1354

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 776 (make_struct_fields)


State 1355

  336 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1408


State 1356

  338 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 338 (capture_list)


State 1357

  327 block_or_simple_block: "=>" . expr
  328                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1409
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1410
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1358

  326 block_or_simple_block: expression_block .

    $default  reduce using rule 326 (block_or_simple_block)


State 1359

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 341 (expr_full_block)


State 1360

  342 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1411
    $@12              go to state 407


State 1361

  457 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' . $@31

    $default  reduce using rule 456 ($@31)

    $@31  go to state 1412


State 1362

  463 expr: expr "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 462 ($@33)

    $@33  go to state 1413


State 1363

  468 expr: expr '?' "as" "type" '<' $@34 type_declaration . '>' $@35
  752 type_declaration: type_declaration . '|' type_declaration_no_options
  753                 | type_declaration . '|' '#'

    '|'  shift, and go to state 378
    '>'  shift, and go to state 1414


State 1364

  498 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1365

  496 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1366

  387 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1415


State 1367

  495 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1368

  698 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 698 (type_declaration_no_options_no_dim)


State 1369

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1416

    $default  reduce using rule 70 (expression_else_one_liner)

    expression_else_one_liner  go to state 1417


State 1370

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1418


State 1371

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1419
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 598
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1372

   93 expression_while_loop: $@7 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1420


State 1373

   95 expression_with: $@8 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1421


State 1374

  239 expression_block_finally: "finally" $@10 '{' . expressions $@11 '}'

    $default  reduce using rule 263 (expressions)

    expressions  go to state 1422


State 1375

  303 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1423


State 1376

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  305                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1424
    '&'  shift, and go to state 415

    $default  reduce using rule 549 (optional_ref)

    optional_ref  go to state 1425


State 1377

  308 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 308 (expression_let)


State 1378

  559 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 559 (variable_declaration_list)


State 1379

  560 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 560 (variable_declaration_list)


State 1380

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@37 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1426

    $default  reduce using rule 506 (optional_constant)

    optional_constant  go to state 1427


State 1381

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1382
    "sealed"    shift, and go to state 1383

    $default  reduce using rule 503 (optional_override)

    optional_override  go to state 1428


State 1382

  504 optional_override: "override" .

    $default  reduce using rule 504 (optional_override)


State 1383

  505 optional_override: "sealed" .

    $default  reduce using rule 505 (optional_override)


State 1384

  513 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1314
    "private"  shift, and go to state 1315

    $default  reduce using rule 508 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1429


State 1385

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967
    '('     shift, and go to state 1430

    $default  reduce using rule 789 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1434


State 1386

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967
    '('     shift, and go to state 1430

    $default  reduce using rule 789 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1435


State 1387

  322 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 322 (expr_type_info)


State 1388

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1436
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1389

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1336

    $default  reduce using rule 790 (use_initializer)

    use_initializer  go to state 1437


State 1390

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1336

    $default  reduce using rule 790 (use_initializer)

    use_initializer  go to state 1438


State 1391

  819 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967

    make_struct_fields  go to state 1396
    make_variant_dim    go to state 1439


State 1392

  823 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1440


State 1393

  833 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1441


State 1394

  325 expr_list: expr_list . ',' expr
  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 747

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 1442


State 1395

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967
    '('     shift, and go to state 1430

    $default  reduce using rule 789 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1443


State 1396

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  782 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 782 (make_variant_dim)


State 1397

  800 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1444


State 1398

  483 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 483 (expr_generator)


State 1399

  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1445
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1400

  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1446


State 1401

  379 func_addr_expr: '@' '@' '<' $@24 type_declaration_no_options '>' $@25 func_addr_name .

    $default  reduce using rule 379 (func_addr_expr)


State 1402

  382 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 750
    "name"  shift, and go to state 59

    name_in_namespace  go to state 753
    func_addr_name     go to state 1447


State 1403

  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 602
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1448
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1404

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  779 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 779 (make_struct_fields)


State 1405

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 778 (make_struct_fields)


State 1406

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 371 (expr_named_call)


State 1407

  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  781                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 859
    ":="  shift, and go to state 1449
    '='   shift, and go to state 861

    copy_or_move  go to state 1450


State 1408

  336 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 336 (capture_entry)


State 1409

  328 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1451
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1410

  327 block_or_simple_block: "=>" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    ".."  error (nonassociative)

    $default  reduce using rule 327 (block_or_simple_block)


State 1411

  342 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 342 (expr_full_block_assumed_piped)


State 1412

  457 expr: expr "is" "type" '<' $@30 type_declaration_no_options '>' $@31 .

    $default  reduce using rule 457 (expr)


State 1413

  463 expr: expr "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 463 (expr)


State 1414

  468 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' . $@35

    $default  reduce using rule 467 ($@35)

    $@35  go to state 1452


State 1415

  387 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 387 (expr_field)


State 1416

   71 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 867
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 871
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1453
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1454
    expression_continue      go to state 1455
    expression_return        go to state 1456
    expression_yield         go to state 1457
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1458
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1417

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1459


State 1418

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 81 ($@2)
    '{'       [reduce using rule 84 ($@4)]
    $default  reduce using rule 84 ($@4)

    expression_if_block  go to state 1460
    $@2                  go to state 1461
    $@4                  go to state 1462


State 1419

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  325 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1006
    ')'  shift, and go to state 1463


State 1420

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1464
    $@12              go to state 407


State 1421

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1465
    $@12              go to state 407


State 1422

  239 expression_block_finally: "finally" $@10 '{' expressions . $@11 '}'
  264 expressions: expressions . expression_any
  265            | expressions . error

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 238 ($@11)

    SEMICOLON                         go to state 877
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    expression_if_then_else           go to state 881
    $@5                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@6                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@7                               go to state 888
    expression_with                   go to state 889
    $@8                               go to state 890
    expression_with_alias             go to state 891
    $@11                              go to state 1466
    expr_call_pipe                    go to state 471
    expression_any                    go to state 893
    name_in_namespace                 go to state 472
    expression_delete                 go to state 894
    expr_new                          go to state 473
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 902
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 903
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1423

  303 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 303 (tuple_expansion)


State 1424

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 229
    "array"      shift, and go to state 230
    "table"      shift, and go to state 231
    "typedecl"   shift, and go to state 232
    "iterator"   shift, and go to state 233
    "smart_ptr"  shift, and go to state 234
    "bool"       shift, and go to state 235
    "void"       shift, and go to state 236
    "string"     shift, and go to state 237
    "auto"       shift, and go to state 238
    "int"        shift, and go to state 239
    "int2"       shift, and go to state 240
    "int3"       shift, and go to state 241
    "int4"       shift, and go to state 242
    "uint"       shift, and go to state 243
    "bitfield"   shift, and go to state 244
    "uint2"      shift, and go to state 245
    "uint3"      shift, and go to state 246
    "uint4"      shift, and go to state 247
    "float"      shift, and go to state 248
    "float2"     shift, and go to state 249
    "float3"     shift, and go to state 250
    "float4"     shift, and go to state 251
    "range"      shift, and go to state 252
    "urange"     shift, and go to state 253
    "range64"    shift, and go to state 254
    "urange64"   shift, and go to state 255
    "block"      shift, and go to state 256
    "int64"      shift, and go to state 257
    "uint64"     shift, and go to state 258
    "double"     shift, and go to state 259
    "function"   shift, and go to state 260
    "lambda"     shift, and go to state 261
    "int8"       shift, and go to state 262
    "uint8"      shift, and go to state 263
    "int16"      shift, and go to state 264
    "uint16"     shift, and go to state 265
    "tuple"      shift, and go to state 266
    "variant"    shift, and go to state 267
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 268
    "name"       shift, and go to state 59
    '$'          shift, and go to state 269

    name_in_namespace                   go to state 270
    basic_type_declaration              go to state 271
    structure_type_declaration          go to state 272
    auto_type_declaration               go to state 273
    bitfield_type_declaration           go to state 274
    type_declaration_no_options         go to state 1467
    type_declaration_no_options_no_dim  go to state 276


State 1425

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 545
    ":="  shift, and go to state 546
    '='   shift, and go to state 547

    copy_or_move_or_clone  go to state 1468


State 1426

  507 optional_constant: "const" .

    $default  reduce using rule 507 (optional_constant)


State 1427

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@37 function_declaration_header SEMICOLON

    $default  reduce using rule 518 ($@37)

    $@37  go to state 1469


State 1428

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@38 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1426

    $default  reduce using rule 506 (optional_constant)

    optional_constant  go to state 1470


State 1429

  513 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 683
    "name"  shift, and go to state 684

    variable_declaration         go to state 1471
    variable_name_with_pos_list  go to state 686


State 1430

  784 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967

    make_struct_fields  go to state 1472


State 1431

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  786 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 786 (make_struct_dim_decl)


State 1432

  785 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  787 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1473

    $default  reduce using rule 836 (optional_comma)

    optional_comma  go to state 1474


State 1433

  788 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 788 (optional_make_struct_dim_decl)


State 1434

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1475


State 1435

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1476


State 1436

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1477


State 1437

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967
    '('     shift, and go to state 1430

    $default  reduce using rule 789 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1478


State 1438

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967
    '('     shift, and go to state 1430

    $default  reduce using rule 789 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1479


State 1439

  819 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1480


State 1440

  823 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 823 (make_dim_decl)


State 1441

  833 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 833 (make_table_decl)


State 1442

  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1481


State 1443

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1482


State 1444

  800 make_struct_decl: "variant" '<' $@93 type_declaration_no_options '>' $@94 '(' make_variant_dim ')' .

    $default  reduce using rule 800 (make_struct_decl)


State 1445

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ';'    shift, and go to state 1483

    $default  reduce using rule 834 (array_comprehension_where)

    array_comprehension_where  go to state 1484


State 1446

  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1485
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1447

  382 func_addr_expr: '@' '@' '<' $@26 optional_function_argument_list optional_function_type '>' $@27 func_addr_name .

    $default  reduce using rule 382 (func_addr_expr)


State 1448

  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1483

    $default  reduce using rule 834 (array_comprehension_where)

    array_comprehension_where  go to state 1486


State 1449

  781 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1487
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1450

  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1488
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1451

  328 block_or_simple_block: "=>" "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 328 (block_or_simple_block)


State 1452

  468 expr: expr '?' "as" "type" '<' $@34 type_declaration '>' $@35 .

    $default  reduce using rule 468 (expr)


State 1453

   71 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 71 (expression_else_one_liner)


State 1454

   75 expression_if_one_liner: expression_break .

    $default  reduce using rule 75 (expression_if_one_liner)


State 1455

   76 expression_if_one_liner: expression_continue .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1456

   73 expression_if_one_liner: expression_return .

    $default  reduce using rule 73 (expression_if_one_liner)


State 1457

   74 expression_if_one_liner: expression_yield .

    $default  reduce using rule 74 (expression_if_one_liner)


State 1458

   72 expression_if_one_liner: expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 72 (expression_if_one_liner)


State 1459

   88 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 88 (expression_if_then_else_oneliner)


State 1460

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1489
    "elif"         shift, and go to state 1490
    "static_elif"  shift, and go to state 1491

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1492
    expression_else      go to state 1493


State 1461

   83 expression_if_block: $@2 . '{' expressions $@3 '}' expression_block_finally

    '{'  shift, and go to state 1494


State 1462

   85 expression_if_block: $@4 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 867
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 871
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1495
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1454
    expression_continue      go to state 1455
    expression_return        go to state 1456
    expression_yield         go to state 1457
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1458
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1463

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1496


State 1464

   93 expression_while_loop: $@7 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 93 (expression_while_loop)


State 1465

   95 expression_with: $@8 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 95 (expression_with)


State 1466

  239 expression_block_finally: "finally" $@10 '{' expressions $@11 . '}'

    '}'  shift, and go to state 1497


State 1467

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 545
    ":="  shift, and go to state 546
    '='   shift, and go to state 547

    copy_or_move_or_clone  go to state 1498


State 1468

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1499
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1469

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "range64"   shift, and go to state 205
    "urange64"  shift, and go to state 206
    "int64"     shift, and go to state 207
    "uint64"    shift, and go to state 208
    "double"    shift, and go to state 209
    "int8"      shift, and go to state 210
    "uint8"     shift, and go to state 211
    "int16"     shift, and go to state 212
    "uint16"    shift, and go to state 213
    "++"        shift, and go to state 214
    "--"        shift, and go to state 215
    "name"      shift, and go to state 216

    function_name                go to state 217
    function_declaration_header  go to state 1500


State 1470

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@38 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 520 ($@38)

    $@38  go to state 1501


State 1471

  513 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 513 (structure_variable_declaration)


State 1472

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  784 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 976
    ')'  shift, and go to state 1502


State 1473

  785 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  837 optional_comma: ',' .

    '('  shift, and go to state 1503

    $default  reduce using rule 837 (optional_comma)


State 1474

  787 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 787 (make_struct_dim_decl)


State 1475

  794 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 794 (make_struct_decl)


State 1476

  797 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 797 (make_struct_decl)


State 1477

  323 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 323 (expr_type_info)


State 1478

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1504


State 1479

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1505


State 1480

  819 make_dim_decl: "array" "variant" '<' $@103 type_declaration_no_options '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 819 (make_dim_decl)


State 1481

  827 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 827 (make_dim_decl)


State 1482

  809 make_tuple_call: "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 809 (make_tuple_call)


State 1483

  835 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1506


State 1484

  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1507


State 1485

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ';'    shift, and go to state 1483

    $default  reduce using rule 834 (array_comprehension_where)

    array_comprehension_where  go to state 1508


State 1486

  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1509


State 1487

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  781 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 781 (make_struct_fields)


State 1488

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 780 (make_struct_fields)


State 1489

   66 expression_else: "else" . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1510


State 1490

   59 elif_or_static_elif: "elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1491

   60 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 60 (elif_or_static_elif)


State 1492

   67 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1511


State 1493

   87 expression_if_then_else: $@5 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 87 (expression_if_then_else)


State 1494

   83 expression_if_block: $@2 '{' . expressions $@3 '}' expression_block_finally

    $default  reduce using rule 263 (expressions)

    expressions  go to state 1512


State 1495

   85 expression_if_block: $@4 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1513


State 1496

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1514
    $@12              go to state 407


State 1497

  239 expression_block_finally: "finally" $@10 '{' expressions $@11 '}' .

    $default  reduce using rule 239 (expression_block_finally)


State 1498

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1515
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1499

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 612
    "as"                   shift, and go to state 613
    "<<"                   shift, and go to state 614
    ">>"                   shift, and go to state 615
    "++"                   shift, and go to state 616
    "--"                   shift, and go to state 617
    "<="                   shift, and go to state 618
    ">="                   shift, and go to state 619
    "=="                   shift, and go to state 620
    "!="                   shift, and go to state 621
    "->"                   shift, and go to state 622
    "??"                   shift, and go to state 623
    "?."                   shift, and go to state 624
    "?["                   shift, and go to state 625
    "<|"                   shift, and go to state 626
    "|>"                   shift, and go to state 627
    "<<<"                  shift, and go to state 628
    ">>>"                  shift, and go to state 629
    "&&"                   shift, and go to state 630
    "||"                   shift, and go to state 631
    "^^"                   shift, and go to state 632
    ".."                   shift, and go to state 633
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 634
    '|'                    shift, and go to state 635
    '^'                    shift, and go to state 636
    '&'                    shift, and go to state 637
    '<'                    shift, and go to state 638
    '>'                    shift, and go to state 639
    '-'                    shift, and go to state 640
    '+'                    shift, and go to state 641
    '*'                    shift, and go to state 642
    '/'                    shift, and go to state 643
    '%'                    shift, and go to state 644
    '.'                    shift, and go to state 645
    '['                    shift, and go to state 646
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1516


State 1500

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1517


State 1501

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "range64"   shift, and go to state 205
    "urange64"  shift, and go to state 206
    "int64"     shift, and go to state 207
    "uint64"    shift, and go to state 208
    "double"    shift, and go to state 209
    "int8"      shift, and go to state 210
    "uint8"     shift, and go to state 211
    "int16"     shift, and go to state 212
    "uint16"    shift, and go to state 213
    "++"        shift, and go to state 214
    "--"        shift, and go to state 215
    "name"      shift, and go to state 216

    function_name                go to state 217
    function_declaration_header  go to state 1518


State 1502

  784 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 784 (make_struct_dim_list)


State 1503

  785 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 760
    "name"  shift, and go to state 967

    make_struct_fields  go to state 1519


State 1504

  813 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 813 (make_dim_decl)


State 1505

  816 make_dim_decl: "array" "tuple" '<' $@101 type_declaration_no_options '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 816 (make_dim_decl)


State 1506

  835 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1520
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1507

  838 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 838 (array_comprehension)


State 1508

  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1521


State 1509

  840 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 840 (array_comprehension)


State 1510

   66 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1522
    $@12              go to state 407


State 1511

   67 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1523
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1512

   83 expression_if_block: $@2 '{' expressions . $@3 '}' expression_block_finally
  264 expressions: expressions . expression_any
  265            | expressions . error

    error                             shift, and go to state 865
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 866
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 867
    "try"                             shift, and go to state 868
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 869
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 870
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 871
    "pass"                            shift, and go to state 872
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 873
    "goto"                            shift, and go to state 874
    "unsafe"                          shift, and go to state 875
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 235
    "void"                            shift, and go to state 236
    "string"                          shift, and go to state 237
    "int"                             shift, and go to state 239
    "int2"                            shift, and go to state 240
    "int3"                            shift, and go to state 241
    "int4"                            shift, and go to state 242
    "uint"                            shift, and go to state 243
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 245
    "uint3"                           shift, and go to state 246
    "uint4"                           shift, and go to state 247
    "float"                           shift, and go to state 248
    "float2"                          shift, and go to state 249
    "float3"                          shift, and go to state 250
    "float4"                          shift, and go to state 251
    "range"                           shift, and go to state 252
    "urange"                          shift, and go to state 253
    "range64"                         shift, and go to state 254
    "urange64"                        shift, and go to state 255
    "int64"                           shift, and go to state 257
    "uint64"                          shift, and go to state 258
    "double"                          shift, and go to state 259
    "int8"                            shift, and go to state 262
    "uint8"                           shift, and go to state 263
    "int16"                           shift, and go to state 264
    "uint16"                          shift, and go to state 265
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 876
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 92 ($@7)
    "if"         reduce using rule 86 ($@5)
    "static_if"  reduce using rule 86 ($@5)
    "for"        reduce using rule 89 ($@6)
    "with"       reduce using rule 94 ($@8)
    '}'          reduce using rule 82 ($@3)

    SEMICOLON                         go to state 877
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 878
    expression_goto                   go to state 879
    expression_if_one_liner           go to state 880
    $@3                               go to state 1524
    expression_if_then_else           go to state 881
    $@5                               go to state 882
    expression_if_then_else_oneliner  go to state 883
    expression_for_loop               go to state 884
    $@6                               go to state 885
    expression_unsafe                 go to state 886
    expression_while_loop             go to state 887
    $@7                               go to state 888
    expression_with                   go to state 889
    $@8                               go to state 890
    expression_with_alias             go to state 891
    expr_call_pipe                    go to state 471
    expression_any                    go to state 893
    name_in_namespace                 go to state 472
    expression_delete                 go to state 894
    expr_new                          go to state 473
    expression_break                  go to state 895
    expression_continue               go to state 896
    expression_return                 go to state 897
    expression_yield                  go to state 898
    expression_try_catch              go to state 899
    kwd_let                           go to state 900
    expression_let                    go to state 901
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 902
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 903
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1513

   85 expression_if_block: $@4 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 85 (expression_if_block)


State 1514

   90 expression_for_loop: $@6 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 90 (expression_for_loop)


State 1515

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 612
    "as"                   shift, and go to state 613
    "<<"                   shift, and go to state 614
    ">>"                   shift, and go to state 615
    "++"                   shift, and go to state 616
    "--"                   shift, and go to state 617
    "<="                   shift, and go to state 618
    ">="                   shift, and go to state 619
    "=="                   shift, and go to state 620
    "!="                   shift, and go to state 621
    "->"                   shift, and go to state 622
    "??"                   shift, and go to state 623
    "?."                   shift, and go to state 624
    "?["                   shift, and go to state 625
    "<|"                   shift, and go to state 626
    "|>"                   shift, and go to state 627
    "<<<"                  shift, and go to state 628
    ">>>"                  shift, and go to state 629
    "&&"                   shift, and go to state 630
    "||"                   shift, and go to state 631
    "^^"                   shift, and go to state 632
    ".."                   shift, and go to state 633
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 634
    '|'                    shift, and go to state 635
    '^'                    shift, and go to state 636
    '&'                    shift, and go to state 637
    '<'                    shift, and go to state 638
    '>'                    shift, and go to state 639
    '-'                    shift, and go to state 640
    '+'                    shift, and go to state 641
    '*'                    shift, and go to state 642
    '/'                    shift, and go to state 643
    '%'                    shift, and go to state 644
    '.'                    shift, and go to state 645
    '['                    shift, and go to state 646
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1525


State 1516

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 305 (tuple_expansion_variable_declaration)


State 1517

  519 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@37 function_declaration_header SEMICOLON .

    $default  reduce using rule 519 (struct_variable_declaration_list)


State 1518

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1526


State 1519

  776 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  777                   | make_struct_fields . ',' "name" ":=" expr
  780                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  781                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  785 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 976
    ')'  shift, and go to state 1527


State 1520

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'
  835 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646

    $default  reduce using rule 835 (array_comprehension_where)


State 1521

  839 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 839 (array_comprehension)


State 1522

   66 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 66 (expression_else)


State 1523

   67 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  387           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  388           | expr . '.' basic_type_declaration '(' ')'
  389           | expr . '.' basic_type_declaration '(' expr_list ')'
  392           | expr . '.' $@28 error $@29
  414 expr: expr . "<<" expr
  415     | expr . ">>" expr
  416     | expr . "<<<" expr
  417     | expr . ">>>" expr
  418     | expr . '+' expr
  419     | expr . '-' expr
  420     | expr . '*' expr
  421     | expr . '/' expr
  422     | expr . '%' expr
  423     | expr . '<' expr
  424     | expr . '>' expr
  425     | expr . "==" expr
  426     | expr . "!=" expr
  427     | expr . "<=" expr
  428     | expr . ">=" expr
  429     | expr . '&' expr
  430     | expr . '|' expr
  431     | expr . '^' expr
  432     | expr . "&&" expr
  433     | expr . "||" expr
  434     | expr . "^^" expr
  435     | expr . ".." expr
  438     | expr . "++"
  439     | expr . "--"
  441     | expr . '[' expr ']'
  442     | expr . '.' '[' expr ']'
  443     | expr . "?[" expr ']'
  444     | expr . '.' "?[" expr ']'
  445     | expr . "?." "name"
  446     | expr . '.' "?." "name"
  453     | expr . "??" expr
  454     | expr . '?' expr ':' expr
  457     | expr . "is" "type" '<' $@30 type_declaration_no_options '>' $@31
  458     | expr . "is" basic_type_declaration
  459     | expr . "is" "name"
  460     | expr . "as" "name"
  463     | expr . "as" "type" '<' $@32 type_declaration '>' $@33
  464     | expr . "as" basic_type_declaration
  465     | expr . '?' "as" "name"
  468     | expr . '?' "as" "type" '<' $@34 type_declaration '>' $@35
  469     | expr . '?' "as" basic_type_declaration
  477     | expr . "<|" expr
  478     | expr . "|>" expr
  479     | expr . "|>" basic_type_declaration
  493 expr_mtag: expr . '.' "$f" '(' expr ')'
  494          | expr . "?." "$f" '(' expr ')'
  495          | expr . '.' '.' "$f" '(' expr ')'
  496          | expr . '.' "?." "$f" '(' expr ')'
  497          | expr . "as" "$f" '(' expr ')'
  498          | expr . '?' "as" "$f" '(' expr ')'
  499          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 612
    "as"   shift, and go to state 613
    "<<"   shift, and go to state 614
    ">>"   shift, and go to state 615
    "++"   shift, and go to state 616
    "--"   shift, and go to state 617
    "<="   shift, and go to state 618
    ">="   shift, and go to state 619
    "=="   shift, and go to state 620
    "!="   shift, and go to state 621
    "->"   shift, and go to state 622
    "??"   shift, and go to state 623
    "?."   shift, and go to state 624
    "?["   shift, and go to state 625
    "<|"   shift, and go to state 626
    "|>"   shift, and go to state 627
    "<<<"  shift, and go to state 628
    ">>>"  shift, and go to state 629
    "&&"   shift, and go to state 630
    "||"   shift, and go to state 631
    "^^"   shift, and go to state 632
    ".."   shift, and go to state 633
    '?'    shift, and go to state 634
    '|'    shift, and go to state 635
    '^'    shift, and go to state 636
    '&'    shift, and go to state 637
    '<'    shift, and go to state 638
    '>'    shift, and go to state 639
    '-'    shift, and go to state 640
    '+'    shift, and go to state 641
    '*'    shift, and go to state 642
    '/'    shift, and go to state 643
    '%'    shift, and go to state 644
    '.'    shift, and go to state 645
    '['    shift, and go to state 646
    ')'    shift, and go to state 1528


State 1524

   83 expression_if_block: $@2 '{' expressions $@3 . '}' expression_block_finally

    '}'  shift, and go to state 1529


State 1525

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 304 (tuple_expansion_variable_declaration)


State 1526

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1530
    $@12              go to state 407


State 1527

  785 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 785 (make_struct_dim_list)


State 1528

   67 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "new line, semicolon"  shift, and go to state 150

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 151
    optional_emit_semis  go to state 1531


State 1529

   83 expression_if_block: $@2 '{' expressions $@3 '}' . expression_block_finally

    "finally"  shift, and go to state 1206

    $default  reduce using rule 236 (expression_block_finally)

    expression_block_finally  go to state 1532


State 1530

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@38 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 521 (struct_variable_declaration_list)


State 1531

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 240 ($@12)

    expression_block  go to state 1533
    $@12              go to state 407


State 1532

   83 expression_if_block: $@2 '{' expressions $@3 '}' expression_block_finally .

    $default  reduce using rule 83 (expression_if_block)


State 1533

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1489
    "elif"         shift, and go to state 1490
    "static_elif"  shift, and go to state 1491

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1492
    expression_else      go to state 1534


State 1534

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 67 (expression_else)
