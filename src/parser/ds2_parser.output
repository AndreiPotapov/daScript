Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 require_module_name: "name"
   39                    | '%' require_module_name
   40                    | require_module_name '.' "name"
   41                    | require_module_name '/' "name"

   42 require_module: require_module_name is_public_module
   43               | require_module_name "as" "name" is_public_module

   44 is_public_module: %empty
   45                 | "public"

   46 expect_declaration: "expect" expect_list "end of expression"

   47 expect_list: expect_error
   48            | expect_list ',' expect_error

   49 expect_error: "integer constant"
   50             | "integer constant" ':' "integer constant"

   51 expression_label: "label" "integer constant" ':'

   52 expression_goto: "goto" "label" "integer constant"
   53                | "goto" expr

   54 elif_or_static_elif: "elif"
   55                    | "static_elif"

   56 expression_else: %empty
   57                | "else" expression_block
   58                | elif_or_static_elif '(' expr ')' expression_block expression_else

   59 if_or_static_if: "if"
   60                | "static_if"

   61 expression_else_one_liner: %empty
   62                          | "else" expression_if_one_liner

   63 expression_if_one_liner: expr
   64                        | expression_return
   65                        | expression_yield
   66                        | expression_break
   67                        | expression_continue

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   69                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   71 expression_unsafe: "unsafe" expression_block

   72 expression_while_loop: "while" '(' expr ')' expression_block

   73 expression_with: "with" '(' expr ')' expression_block

   74 expression_with_alias: "assume" "name" '=' expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 metadata_argument_list: '@' annotation_argument
   97                       | metadata_argument_list '@' annotation_argument

   98 annotation_declaration_name: name_in_namespace
   99                            | "require"
  100                            | "private"

  101 annotation_declaration_basic: annotation_declaration_name
  102                             | annotation_declaration_name '(' annotation_argument_list ')'

  103 annotation_declaration: annotation_declaration_basic
  104                       | '!' annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration
  108                       | '(' annotation_declaration ')'
  109                       | "|>" annotation_declaration

  110 annotation_list: annotation_declaration
  111                | annotation_list ',' annotation_declaration

  112 optional_annotation_list: %empty
  113                         | '[' annotation_list ']'

  114 optional_function_argument_list: %empty
  115                                | '(' ')'
  116                                | '(' function_argument_list ')'

  117 optional_function_type: %empty
  118                       | ':' type_declaration

  119 function_name: "name"
  120              | "operator" '!'
  121              | "operator" '~'
  122              | "operator" "+="
  123              | "operator" "-="
  124              | "operator" "*="
  125              | "operator" "/="
  126              | "operator" "%="
  127              | "operator" "&="
  128              | "operator" "|="
  129              | "operator" "^="
  130              | "operator" "&&="
  131              | "operator" "||="
  132              | "operator" "^^="
  133              | "operator" "&&"
  134              | "operator" "||"
  135              | "operator" "^^"
  136              | "operator" '+'
  137              | "operator" '-'
  138              | "operator" '*'
  139              | "operator" '/'
  140              | "operator" '%'
  141              | "operator" '<'
  142              | "operator" '>'
  143              | "operator" ".."
  144              | "operator" "=="
  145              | "operator" "!="
  146              | "operator" "<="
  147              | "operator" ">="
  148              | "operator" '&'
  149              | "operator" '|'
  150              | "operator" '^'
  151              | "++" "operator"
  152              | "--" "operator"
  153              | "operator" "++"
  154              | "operator" "--"
  155              | "operator" "<<"
  156              | "operator" ">>"
  157              | "operator" "<<="
  158              | "operator" ">>="
  159              | "operator" "<<<"
  160              | "operator" ">>>"
  161              | "operator" "<<<="
  162              | "operator" ">>>="
  163              | "operator" '[' ']'
  164              | "operator" "?[" ']'
  165              | "operator" '.'
  166              | "operator" "?."
  167              | "operator" '.' "name"
  168              | "operator" '.' "name" ":="
  169              | "operator" "?." "name"
  170              | "operator" ":="
  171              | "operator" "delete"
  172              | "operator" "??"
  173              | "operator" "is"
  174              | "operator" "as"
  175              | "operator" "is" "name"
  176              | "operator" "as" "name"
  177              | "operator" '?' "as"
  178              | "operator" '?' "as" "name"
  179              | "bool"
  180              | "string"
  181              | "int"
  182              | "int2"
  183              | "int3"
  184              | "int4"
  185              | "uint"
  186              | "uint2"
  187              | "uint3"
  188              | "uint4"
  189              | "float"
  190              | "float2"
  191              | "float3"
  192              | "float4"
  193              | "range"
  194              | "urange"
  195              | "range64"
  196              | "urange64"
  197              | "int64"
  198              | "uint64"
  199              | "double"
  200              | "int8"
  201              | "uint8"
  202              | "int16"
  203              | "uint16"

  204 global_function_declaration: optional_annotation_list "def" function_declaration

  205 optional_public_or_private_function: %empty
  206                                    | "private"
  207                                    | "public"

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type

  209 $@2: %empty

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  211 expression_block: "begin of code block" expressions "end of code block"
  212                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped

  214 expression_any: "end of expression"
  215               | expr_assign "end of expression"
  216               | expression_delete "end of expression"
  217               | expression_let
  218               | expression_while_loop
  219               | expression_unsafe
  220               | expression_with
  221               | expression_with_alias "end of expression"
  222               | expression_for_loop
  223               | expression_break "end of expression"
  224               | expression_continue "end of expression"
  225               | expression_return "end of expression"
  226               | expression_yield "end of expression"
  227               | expression_if_then_else
  228               | expression_try_catch
  229               | expression_label "end of expression"
  230               | expression_goto "end of expression"
  231               | "pass" "end of expression"

  232 expressions: %empty
  233            | expressions expression_any
  234            | expressions error

  235 optional_expr_list: %empty
  236                   | expr_list

  237 type_declaration_no_options_list: type_declaration
  238                                 | type_declaration_no_options_list "end of expression" type_declaration

  239 name_in_namespace: "name"
  240                  | "name" "::" "name"
  241                  | "::" "name"

  242 expression_delete: "delete" expr
  243                  | "delete" "explicit" expr

  244 $@3: %empty

  245 $@4: %empty

  246 new_type_declaration: '<' $@3 type_declaration '>' $@4

  247 expr_new: "new" structure_type_declaration
  248         | "new" structure_type_declaration '(' optional_expr_list ')'
  249         | "new" new_type_declaration '(' use_initializer ')'
  250         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  251         | "new" make_decl

  252 expression_break: "break"

  253 expression_continue: "continue"

  254 expression_return: "return"
  255                  | "return" expr
  256                  | "return" "<-" expr

  257 expression_yield: "yield" expr
  258                 | "yield" "<-" expr

  259 expression_try_catch: "try" expression_block "recover" expression_block

  260 kwd_let_var_or_nothing: "let"
  261                       | "var"
  262                       | %empty

  263 kwd_let: "let"
  264        | "var"

  265 optional_in_scope: "inscope"
  266                  | %empty

  267 tuple_expansion: "name"
  268                | tuple_expansion ',' "name"

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  271 expression_let: kwd_let optional_in_scope let_variable_declaration
  272               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  273 $@5: %empty

  274 $@6: %empty

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  276 $@7: %empty

  277 $@8: %empty

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  279 $@9: %empty

  280 $@10: %empty

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  282 $@11: %empty

  283 $@12: %empty

  284 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  285 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  286               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  288 expr_list: expr
  289          | expr_list ',' expr

  290 block_or_simple_block: expression_block
  291                      | "=>" expr
  292                      | "=>" "<-" expr

  293 block_or_lambda: '$'
  294                | '@'
  295                | '@' '@'

  296 capture_entry: '&' "name"
  297              | '=' "name"
  298              | "<-" "name"
  299              | ":=" "name"

  300 capture_list: capture_entry
  301             | capture_list ',' capture_entry

  302 optional_capture_list: %empty
  303                      | "capture" '(' capture_list ')'

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  306                              | "begin of code block" expressions "end of code block"

  307 expr_numeric_const: "integer constant"
  308                   | "unsigned integer constant"
  309                   | "long integer constant"
  310                   | "unsigned long integer constant"
  311                   | "unsigned int8 constant"
  312                   | "floating point constant"
  313                   | "double constant"

  314 expr_assign: expr
  315            | expr '=' expr
  316            | expr "<-" expr
  317            | expr ":=" expr
  318            | expr "&=" expr
  319            | expr "|=" expr
  320            | expr "^=" expr
  321            | expr "&&=" expr
  322            | expr "||=" expr
  323            | expr "^^=" expr
  324            | expr "+=" expr
  325            | expr "-=" expr
  326            | expr "*=" expr
  327            | expr "/=" expr
  328            | expr "%=" expr
  329            | expr "<<=" expr
  330            | expr ">>=" expr
  331            | expr "<<<=" expr
  332            | expr ">>>=" expr

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  334                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  335 expr_method_call: expr "->" "name" '(' ')'
  336                 | expr "->" "name" '(' expr_list ')'

  337 func_addr_name: name_in_namespace
  338               | "$i" '(' expr ')'

  339 func_addr_expr: '@' '@' func_addr_name

  340 $@13: %empty

  341 $@14: %empty

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  343 $@15: %empty

  344 $@16: %empty

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  346 expr_field: expr '.' "name"
  347           | expr '.' '.' "name"
  348           | expr '.' "name" '(' ')'
  349           | expr '.' "name" '(' expr_list ')'

  350 $@17: %empty

  351 $@18: %empty

  352 expr_field: expr '.' $@17 error $@18

  353 expr_call: name_in_namespace '(' ')'
  354          | name_in_namespace '(' make_struct_single ')'
  355          | name_in_namespace '(' expr_list ')'
  356          | basic_type_declaration '(' ')'
  357          | basic_type_declaration '(' expr_list ')'

  358 expr: "null"
  359     | name_in_namespace
  360     | expr_numeric_const
  361     | expr_reader
  362     | string_builder
  363     | make_decl
  364     | "true"
  365     | "false"
  366     | expr_field
  367     | expr_mtag
  368     | '!' expr
  369     | '~' expr
  370     | '+' expr
  371     | '-' expr
  372     | expr "<<" expr
  373     | expr ">>" expr
  374     | expr "<<<" expr
  375     | expr ">>>" expr
  376     | expr '+' expr
  377     | expr '-' expr
  378     | expr '*' expr
  379     | expr '/' expr
  380     | expr '%' expr
  381     | expr '<' expr
  382     | expr '>' expr
  383     | expr "==" expr
  384     | expr "!=" expr
  385     | expr "<=" expr
  386     | expr ">=" expr
  387     | expr '&' expr
  388     | expr '|' expr
  389     | expr '^' expr
  390     | expr "&&" expr
  391     | expr "||" expr
  392     | expr "^^" expr
  393     | expr ".." expr
  394     | "++" expr
  395     | "--" expr
  396     | expr "++"
  397     | expr "--"
  398     | '(' expr_list optional_comma ')'
  399     | expr '[' expr ']'
  400     | expr '.' '[' expr ']'
  401     | expr "?[" expr ']'
  402     | expr '.' "?[" expr ']'
  403     | expr "?." "name"
  404     | expr '.' "?." "name"
  405     | func_addr_expr
  406     | expr_call
  407     | '*' expr
  408     | "deref" '(' expr ')'
  409     | "addr" '(' expr ')'
  410     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block
  413     | expr "??" expr
  414     | expr '?' expr ':' expr

  415 $@19: %empty

  416 $@20: %empty

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr "is" basic_type_declaration
  419     | expr "is" "name"
  420     | expr "as" "name"

  421 $@21: %empty

  422 $@22: %empty

  423 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr "as" basic_type_declaration
  425     | expr '?' "as" "name"

  426 $@23: %empty

  427 $@24: %empty

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr '?' "as" basic_type_declaration
  430     | expr_type_info
  431     | expr_type_decl
  432     | expr_cast
  433     | expr_new
  434     | expr_method_call
  435     | expr_named_call
  436     | expr_full_block
  437     | expr "<|" expr
  438     | expr "|>" expr
  439     | expr "|>" basic_type_declaration
  440     | expr_call_pipe

  441 expr_mtag: "$$" '(' expr ')'
  442          | "$i" '(' expr ')'
  443          | "$v" '(' expr ')'
  444          | "$b" '(' expr ')'
  445          | "$a" '(' expr ')'
  446          | "..."
  447          | "$c" '(' expr ')' '(' ')'
  448          | "$c" '(' expr ')' '(' expr_list ')'
  449          | expr '.' "$f" '(' expr ')'
  450          | expr "?." "$f" '(' expr ')'
  451          | expr '.' '.' "$f" '(' expr ')'
  452          | expr '.' "?." "$f" '(' expr ')'
  453          | expr "as" "$f" '(' expr ')'
  454          | expr '?' "as" "$f" '(' expr ')'
  455          | expr "is" "$f" '(' expr ')'
  456          | '@' '@' "$c" '(' expr ')'

  457 optional_field_annotation: %empty
  458                          | metadata_argument_list

  459 optional_override: %empty
  460                  | "override"
  461                  | "sealed"

  462 optional_constant: %empty
  463                  | "const"

  464 optional_public_or_private_member_variable: %empty
  465                                           | "public"
  466                                           | "private"

  467 optional_static_member_variable: %empty
  468                                | "static"

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  470 struct_variable_declaration_list: %empty

  471 $@25: %empty

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  473 $@26: %empty

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  475 $@27: %empty

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  477 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  478                              | "$a" '(' expr ')'

  479 function_argument_list: function_argument_declaration
  480                       | function_argument_list "end of expression" function_argument_declaration

  481 tuple_type: type_declaration
  482           | "name" ':' type_declaration

  483 tuple_type_list: tuple_type
  484                | tuple_type_list "end of expression" tuple_type

  485 tuple_alias_type_list: %empty
  486                      | tuple_alias_type_list "end of expression"
  487                      | tuple_alias_type_list tuple_type "end of expression"

  488 variant_type: "name" ':' type_declaration

  489 variant_type_list: variant_type
  490                  | variant_type_list "end of expression" variant_type

  491 variant_alias_type_list: %empty
  492                        | variant_alias_type_list "end of expression"
  493                        | variant_alias_type_list variant_type "end of expression"

  494 copy_or_move: '='
  495             | "<-"

  496 variable_declaration: variable_name_with_pos_list
  497                     | variable_name_with_pos_list '&'
  498                     | variable_name_with_pos_list ':' type_declaration
  499                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  500                     | variable_name_with_pos_list copy_or_move expr

  501 copy_or_move_or_clone: '='
  502                      | "<-"
  503                      | ":="

  504 optional_ref: %empty
  505             | '&'

  506 let_variable_name_with_pos_list: "name"
  507                                | "$i" '(' expr ')'
  508                                | "name" "aka" "name"
  509                                | let_variable_name_with_pos_list ',' "name"
  510                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  511 global_let_variable_name_with_pos_list: "name"
  512                                       | global_let_variable_name_with_pos_list ',' "name"

  513 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  514                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  515                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  516 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  517                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  518                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  519 optional_shared: %empty
  520                | "shared"

  521 optional_public_or_private_variable: %empty
  522                                    | "private"
  523                                    | "public"

  524 $@28: %empty

  525 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

  526 enum_expression: "name"
  527                | "name" '=' expr

  528 enum_list: %empty
  529          | enum_expression
  530          | enum_list ',' enum_expression

  531 optional_public_or_private_alias: %empty
  532                                 | "private"
  533                                 | "public"

  534 $@29: %empty

  535 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration

  536 alias_declaration: "typedef" single_alias "end of expression"

  537 optional_public_or_private_enum: %empty
  538                                | "private"
  539                                | "public"

  540 enum_name: "name"

  541 optional_enum_basic_type_declaration: %empty
  542                                     | ':' enum_basic_type_declaration

  543 $@30: %empty

  544 $@31: %empty

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

  546 optional_structure_parent: %empty
  547                          | ':' name_in_namespace

  548 optional_sealed: %empty
  549                | "sealed"

  550 structure_name: optional_sealed "name" optional_structure_parent

  551 class_or_struct: "class"
  552                | "struct"

  553 optional_public_or_private_structure: %empty
  554                                     | "private"
  555                                     | "public"

  556 optional_struct_variable_declaration_list: %empty
  557                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  558 $@32: %empty

  559 $@33: %empty

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

  561 variable_name_with_pos_list: "name"
  562                            | "$i" '(' expr ')'
  563                            | "name" "aka" "name"
  564                            | variable_name_with_pos_list ',' "name"
  565                            | variable_name_with_pos_list ',' "name" "aka" "name"

  566 basic_type_declaration: "bool"
  567                       | "string"
  568                       | "int"
  569                       | "int8"
  570                       | "int16"
  571                       | "int64"
  572                       | "int2"
  573                       | "int3"
  574                       | "int4"
  575                       | "uint"
  576                       | "uint8"
  577                       | "uint16"
  578                       | "uint64"
  579                       | "uint2"
  580                       | "uint3"
  581                       | "uint4"
  582                       | "float"
  583                       | "float2"
  584                       | "float3"
  585                       | "float4"
  586                       | "void"
  587                       | "range"
  588                       | "urange"
  589                       | "range64"
  590                       | "urange64"
  591                       | "double"
  592                       | "bitfield"

  593 enum_basic_type_declaration: "int"
  594                            | "int8"
  595                            | "int16"
  596                            | "uint"
  597                            | "uint8"
  598                            | "uint16"
  599                            | "int64"
  600                            | "uint64"

  601 structure_type_declaration: name_in_namespace

  602 auto_type_declaration: "auto"
  603                      | "auto" '(' "name" ')'
  604                      | "$t" '(' expr ')'

  605 bitfield_bits: "name"
  606              | bitfield_bits "end of expression" "name"

  607 bitfield_alias_bits: %empty
  608                    | "name"
  609                    | bitfield_alias_bits ',' "name"

  610 $@34: %empty

  611 $@35: %empty

  612 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  613 table_type_pair: type_declaration
  614                | type_declaration "end of expression" type_declaration

  615 dim_list: '[' expr ']'
  616         | '[' ']'
  617         | dim_list '[' expr ']'
  618         | dim_list '[' ']'

  619 type_declaration_no_options: type_declaration_no_options_no_dim
  620                            | type_declaration_no_options_no_dim dim_list

  621 type_declaration_no_options_no_dim: basic_type_declaration
  622                                   | auto_type_declaration
  623                                   | bitfield_type_declaration
  624                                   | structure_type_declaration

  625 $@36: %empty

  626 $@37: %empty

  627 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37
  628                                   | "typedecl" '(' expr ')'
  629                                   | '$' name_in_namespace '(' optional_expr_list ')'

  630 $@38: %empty

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  632                                   | type_declaration_no_options_no_dim '-' '[' ']'
  633                                   | type_declaration_no_options_no_dim "explicit"
  634                                   | type_declaration_no_options_no_dim "const"
  635                                   | type_declaration_no_options_no_dim '-' "const"
  636                                   | type_declaration_no_options_no_dim '&'
  637                                   | type_declaration_no_options_no_dim '-' '&'
  638                                   | type_declaration_no_options_no_dim '#'
  639                                   | type_declaration_no_options_no_dim "implicit"
  640                                   | type_declaration_no_options_no_dim '-' '#'
  641                                   | type_declaration_no_options_no_dim "==" "const"
  642                                   | type_declaration_no_options_no_dim "==" '&'
  643                                   | type_declaration_no_options_no_dim '*'

  644 $@39: %empty

  645 $@40: %empty

  646 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40
  647                                   | type_declaration_no_options_no_dim "??"

  648 $@41: %empty

  649 $@42: %empty

  650 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42

  651 $@43: %empty

  652 $@44: %empty

  653 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44

  654 $@45: %empty

  655 $@46: %empty

  656 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46
  657                                   | "block"

  658 $@47: %empty

  659 $@48: %empty

  660 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48

  661 $@49: %empty

  662 $@50: %empty

  663 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50
  664                                   | "function"

  665 $@51: %empty

  666 $@52: %empty

  667 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52

  668 $@53: %empty

  669 $@54: %empty

  670 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54
  671                                   | "lambda"

  672 $@55: %empty

  673 $@56: %empty

  674 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56

  675 $@57: %empty

  676 $@58: %empty

  677 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58

  678 $@59: %empty

  679 $@60: %empty

  680 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60

  681 $@61: %empty

  682 $@62: %empty

  683 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62

  684 type_declaration: type_declaration_no_options
  685                 | type_declaration '|' type_declaration_no_options
  686                 | type_declaration '|' '#'

  687 $@63: %empty

  688 $@64: %empty

  689 $@65: %empty

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

  691 $@66: %empty

  692 $@67: %empty

  693 $@68: %empty

  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

  695 $@69: %empty

  696 $@70: %empty

  697 $@71: %empty

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

  699 make_decl: make_struct_decl
  700          | make_dim_decl
  701          | make_table_decl
  702          | array_comprehension
  703          | make_tuple_call

  704 make_struct_fields: "name" copy_or_move expr
  705                   | "name" ":=" expr
  706                   | make_struct_fields ',' "name" copy_or_move expr
  707                   | make_struct_fields ',' "name" ":=" expr
  708                   | "$f" '(' expr ')' copy_or_move expr
  709                   | "$f" '(' expr ')' ":=" expr
  710                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  712 make_variant_dim: make_struct_fields

  713 make_struct_single: make_struct_fields

  714 make_struct_dim_list: '(' make_struct_fields ')'
  715                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  716 make_struct_dim_decl: make_struct_fields
  717                     | make_struct_dim_list optional_comma

  718 use_initializer: %empty
  719                | "uninitialized"

  720 $@72: %empty

  721 $@73: %empty

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

  723 $@74: %empty

  724 $@75: %empty

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

  726 $@76: %empty

  727 $@77: %empty

  728 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

  729 $@78: %empty

  730 $@79: %empty

  731 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer

  732 make_map_tuple: expr "=>" expr
  733               | expr

  734 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  735 $@80: %empty

  736 $@81: %empty

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

  738 make_dim_decl: '[' expr_list optional_comma ']'

  739 $@82: %empty

  740 $@83: %empty

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

  742 $@84: %empty

  743 $@85: %empty

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

  745 $@86: %empty

  746 $@87: %empty

  747 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  748              | "array" '(' expr_list optional_comma ')'

  749 $@88: %empty

  750 $@89: %empty

  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list optional_comma ')'
  752              | "fixed_array" '(' expr_list optional_comma ')'

  753 $@90: %empty

  754 $@91: %empty

  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

  756 expr_map_tuple_list: make_map_tuple
  757                    | expr_map_tuple_list ',' make_map_tuple

  758 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  759                | "table" '(' expr_map_tuple_list optional_comma ')'
  760                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  761                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  762 array_comprehension_where: %empty
  763                          | "end of expression" "where" expr

  764 optional_comma: %empty
  765               | ','

  766 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  767                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  768                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104 120 368
    '#' (35) 638 640 686
    '$' (36) 20 293 629 631
    '%' (37) 35 39 140 380
    '&' (38) 148 296 387 497 505 636 637 642
    '(' (40) 58 68 69 70 72 73 93 102 108 115 116 248 249 250 269 270 285 286 287 303 333 334 335 336 338 348 349 353 354 355 356 357 398 408 409 410 411 441 442 443 444 445 447 448 449 450 451 452 453 454 455 456 478 507 562 603 604 628 629 631 708 709 710 711 714 715 722 725 728 734 737 741 744 747 748 751 752 755 759 760 761
    ')' (41) 58 68 69 70 72 73 93 102 108 115 116 248 249 250 269 270 285 286 287 303 333 334 335 336 338 348 349 353 354 355 356 357 398 408 409 410 411 441 442 443 444 445 447 448 449 450 451 452 453 454 455 456 478 507 562 603 604 628 629 631 708 709 710 711 714 715 722 725 728 734 737 741 744 747 748 751 752 755 759 760 761
    '*' (42) 138 378 407 643
    '+' (43) 136 370 376
    ',' (44) 48 82 95 111 268 289 301 334 509 510 512 530 564 565 609 706 707 710 711 715 757 765
    '-' (45) 137 371 377 632 635 637 640
    '.' (46) 40 165 167 168 346 347 348 349 352 400 402 404 449 451 452
    '/' (47) 41 139 379
    ':' (58) 50 51 118 269 414 482 488 498 499 513 514 516 517 542 547
    "end of expression" (59) 15 16 46 69 214 215 216 221 223 224 225 226 229 230 231 238 269 270 287 472 474 480 484 486 487 490 492 493 513 514 515 516 517 518 536 606 614 761 763 766 767 768
    '<' (60) 141 246 275 278 281 284 286 287 342 345 381 410 411 412 417 423 428 612 627 631 646 650 653 656 660 663 667 670 674 677 680 683 722 725 728 731 737 741 744 747 751 755 760 761
    '=' (61) 74 86 87 88 89 90 91 93 297 315 494 501 527 535
    '>' (62) 142 246 275 278 281 284 286 287 342 345 382 410 411 412 417 423 428 612 627 631 646 650 653 656 660 663 667 670 674 677 680 683 722 725 728 731 737 741 744 747 751 755 760 761
    '?' (63) 177 178 414 425 428 429 454
    '@' (64) 96 97 294 295 339 342 345 456
    '[' (91) 113 163 333 334 399 400 615 616 617 618 632 738 766 767
    ']' (93) 113 163 164 333 334 399 400 401 402 615 616 617 618 632 738 766 767
    '^' (94) 150 389
    "begin of code block" (123) 211 212 306 545 557 690 694 698 758 768
    '|' (124) 149 388 685 686
    "end of code block" (125) 211 212 306 545 557 690 694 698 758 768
    '~' (126) 121 369
    error (256) 234 352
    "lexer error" (258)
    "capture" (259) 303
    "struct" (260) 552 722 741
    "class" (261) 551 725
    "let" (262) 260 263
    "def" (263) 204 474 476
    "while" (264) 72
    "if" (265) 59 69
    "static_if" (266) 60
    "else" (267) 57 62
    "for" (268) 70 766 767 768
    "recover" (269) 259
    "true" (270) 79 90 364
    "false" (271) 80 91 365
    "new" (272) 247 248 249 250 251
    "typeinfo" (273) 285 286 287
    "type" (274) 84 284 417 423 428 627
    "in" (275) 70 85 766 767 768
    "is" (276) 173 175 417 418 419 455
    "as" (277) 43 174 176 177 178 420 423 424 425 428 429 453 454
    "elif" (278) 54
    "static_elif" (279) 55
    "array" (280) 650 741 744 747 748 751
    "return" (281) 254 255 256
    "null" (282) 358
    "break" (283) 252
    "try" (284) 259
    "options" (285) 36
    "table" (286) 653 759 760 761
    "expect" (287) 46
    "const" (288) 463 634 635 641
    "require" (289) 37 99
    "operator" (290) 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
    "enum" (291) 545
    "finally" (292) 212
    "delete" (293) 171 242 243
    "deref" (294) 408
    "typedef" (295) 536
    "typedecl" (296) 628
    "with" (297) 73
    "aka" (298) 508 510 563 565
    "assume" (299) 74
    "cast" (300) 275
    "override" (301) 460
    "abstract" (302) 474
    "upcast" (303) 278
    "iterator" (304) 656 767
    "var" (305) 261 264
    "addr" (306) 409
    "continue" (307) 253
    "where" (308) 763
    "pass" (309) 231
    "reinterpret" (310) 281
    "module" (311) 22
    "public" (312) 18 45 207 465 523 533 539 555
    "label" (313) 51 52
    "goto" (314) 52 53
    "implicit" (315) 639
    "explicit" (316) 243 633
    "shared" (317) 520
    "private" (318) 19 100 206 466 522 532 538 554
    "smart_ptr" (319) 646
    "unsafe" (320) 71
    "inscope" (321) 265
    "static" (322) 468
    "fixed_array" (323) 752 755
    "default" (324) 731
    "uninitialized" (325) 719
    "bool" (326) 179 566
    "void" (327) 586
    "string" (328) 180 567
    "auto" (329) 602 603
    "int" (330) 181 568 593
    "int2" (331) 182 572
    "int3" (332) 183 573
    "int4" (333) 184 574
    "uint" (334) 185 575 596
    "bitfield" (335) 592 612 698
    "uint2" (336) 186 579
    "uint3" (337) 187 580
    "uint4" (338) 188 581
    "float" (339) 189 582
    "float2" (340) 190 583
    "float3" (341) 191 584
    "float4" (342) 192 585
    "range" (343) 193 587
    "urange" (344) 194 588
    "range64" (345) 195 589
    "urange64" (346) 196 590
    "block" (347) 657 660 663
    "int64" (348) 197 571 599
    "uint64" (349) 198 578 600
    "double" (350) 199 591
    "function" (351) 664 667 670
    "lambda" (352) 671 674 677
    "int8" (353) 200 569 594
    "uint8" (354) 201 576 597
    "int16" (355) 202 570 595
    "uint16" (356) 203 577 598
    "tuple" (357) 680 690 734 737 744
    "variant" (358) 683 694 728 747
    "generator" (359) 410 411 412
    "yield" (360) 257 258
    "sealed" (361) 461 549
    "+=" (362) 122 324
    "-=" (363) 123 325
    "/=" (364) 125 327
    "*=" (365) 124 326
    "%=" (366) 126 328
    "&=" (367) 127 318
    "|=" (368) 128 319
    "^=" (369) 129 320
    "<<" (370) 155 372
    ">>" (371) 156 373
    "++" (372) 151 153 394 396
    "--" (373) 152 154 395 397
    "<=" (374) 146 385
    "<<=" (375) 157 329
    ">>=" (376) 158 330
    ">=" (377) 147 386
    "==" (378) 144 383 641 642
    "!=" (379) 145 384
    "->" (380) 335 336
    "<-" (381) 256 258 292 298 316 495 502
    "??" (382) 172 413 647
    "?." (383) 166 169 403 404 450 452
    "?[" (384) 164 401 402
    "<|" (385) 437
    "|>" (386) 109 438 439
    ":=" (387) 168 170 299 317 503 705 707 709 711
    "<<<" (388) 159 374
    ">>>" (389) 160 375
    "<<<=" (390) 161 331
    ">>>=" (391) 162 332
    "=>" (392) 291 292 732
    "::" (393) 240 241
    "&&" (394) 105 133 390
    "||" (395) 106 134 391
    "^^" (396) 107 135 392
    "&&=" (397) 130 321
    "||=" (398) 131 322
    "^^=" (399) 132 323
    ".." (400) 143 393
    "$$" (401) 441
    "$i" (402) 338 442 507 562
    "$v" (403) 443
    "$b" (404) 444
    "$a" (405) 445 478
    "$t" (406) 604
    "$c" (407) 447 448 456
    "$f" (408) 449 450 451 452 453 454 455 708 709 710 711
    "..." (409) 446
    "integer constant" <i> (410) 49 50 51 52 77 88 307
    "long integer constant" <i64> (411) 309
    "unsigned integer constant" <ui> (412) 308
    "unsigned long integer constant" <ui64> (413) 310
    "unsigned int8 constant" <ui> (414) 311
    "floating point constant" <fd> (415) 78 89 312
    "double constant" <d> (416) 313
    "name" <s> (417) 21 38 40 41 43 74 76 83 87 119 167 168 169 175 176 178 239 240 241 267 268 286 287 296 297 298 299 335 336 346 347 348 349 403 404 419 420 425 482 488 506 508 509 510 511 512 526 527 535 540 550 561 563 564 565 603 605 606 608 609 690 694 698 704 705 706 707
    "start of the string" (418) 27 31
    STRING_CHARACTER <ch> (419) 23 25 32 33
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 31
    "{" (422) 30
    "}" (423) 30
    "end of failed eader macro" (424)
    ";}}" (425)
    ";}]" (426)
    ";]]" (427)
    ",]]" (428)
    ",}]" (429)
    UNARY_MINUS (430)
    UNARY_PLUS (431)
    PRE_INC (432)
    PRE_DEC (433)
    LLPIPE (434)
    POST_INC (435)
    POST_DEC (436)
    DEREF (437)


Nonterminals, with rules where they appear

    $accept (210)
        on left: 0
    program (211)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (212)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 17 18 19
        on right: 22
    module_name <s> (214)
        on left: 20 21
        on right: 22
    module_declaration (215)
        on left: 22
        on right: 2
    character_sequence <s> (216)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (217)
        on left: 27
        on right: 75 86
    string_builder_body <pExpression> (218)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (219)
        on left: 31
        on right: 362
    reader_character_sequence (220)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (221)
        on left: 35
        on right: 16 361
    $@1 (222)
        on left: 34
        on right: 35
    options_declaration (223)
        on left: 36
        on right: 9
    require_declaration (224)
        on left: 37
        on right: 8
    require_module_name <s> (225)
        on left: 38 39 40 41
        on right: 39 40 41 42 43
    require_module (226)
        on left: 42 43
        on right: 37
    is_public_module <b> (227)
        on left: 44 45
        on right: 42 43
    expect_declaration (228)
        on left: 46
        on right: 7
    expect_list (229)
        on left: 47 48
        on right: 46 48
    expect_error (230)
        on left: 49 50
        on right: 47 48
    expression_label <pExpression> (231)
        on left: 51
        on right: 229
    expression_goto <pExpression> (232)
        on left: 52 53
        on right: 230
    elif_or_static_elif <b> (233)
        on left: 54 55
        on right: 58
    expression_else <pExpression> (234)
        on left: 56 57 58
        on right: 58 68
    if_or_static_if <b> (235)
        on left: 59 60
        on right: 68
    expression_else_one_liner <pExpression> (236)
        on left: 61 62
        on right: 69
    expression_if_one_liner <pExpression> (237)
        on left: 63 64 65 66 67
        on right: 62 69
    expression_if_then_else <pExpression> (238)
        on left: 68 69
        on right: 227
    expression_for_loop <pExpression> (239)
        on left: 70
        on right: 222
    expression_unsafe <pExpression> (240)
        on left: 71
        on right: 219
    expression_while_loop <pExpression> (241)
        on left: 72
        on right: 218
    expression_with <pExpression> (242)
        on left: 73
        on right: 220
    expression_with_alias <pExpression> (243)
        on left: 74
        on right: 221
    annotation_argument_value <aa> (244)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (245)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (246)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (247)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95 96 97
    annotation_argument_list <aaList> (248)
        on left: 94 95
        on right: 36 95 102
    metadata_argument_list <aaList> (249)
        on left: 96 97
        on right: 97 458
    annotation_declaration_name <s> (250)
        on left: 98 99 100
        on right: 101 102
    annotation_declaration_basic <fa> (251)
        on left: 101 102
        on right: 103
    annotation_declaration <fa> (252)
        on left: 103 104 105 106 107 108 109
        on right: 104 105 106 107 108 109 110 111
    annotation_list <faList> (253)
        on left: 110 111
        on right: 111 113
    optional_annotation_list <faList> (254)
        on left: 112 113
        on right: 204 304 305 474 476 545 560
    optional_function_argument_list <pVarDeclList> (255)
        on left: 114 115 116
        on right: 208 304 305 345 663 670 677
    optional_function_type <pTypeDecl> (256)
        on left: 117 118
        on right: 208 304 305 345 663 670 677
    function_name <s> (257)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 208
    global_function_declaration (258)
        on left: 204
        on right: 6
    optional_public_or_private_function <b> (259)
        on left: 205 206 207
        on right: 210
    function_declaration_header <pFuncDecl> (260)
        on left: 208
        on right: 210 474 476
    function_declaration <pFuncDecl> (261)
        on left: 210
        on right: 204
    $@2 (262)
        on left: 209
        on right: 210
    expression_block <pExpression> (263)
        on left: 211 212
        on right: 57 58 68 70 71 72 73 210 259 290 305 412 476
    expr_call_pipe <pExpression> (264)
        on left: 213
        on right: 440
    expression_any <pExpression> (265)
        on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
        on right: 233
    expressions <pExpression> (266)
        on left: 232 233 234
        on right: 211 212 233 234 306
    optional_expr_list <pExpression> (267)
        on left: 235 236
        on right: 248 629 631
    type_declaration_no_options_list <pTypeDeclList> (268)
        on left: 237 238
        on right: 238 631
    name_in_namespace <s> (269)
        on left: 239 240 241
        on right: 35 98 285 286 287 333 334 337 353 354 355 359 547 601 629 631
    expression_delete <pExpression> (270)
        on left: 242 243
        on right: 216
    new_type_declaration <pTypeDecl> (271)
        on left: 246
        on right: 249 250
    $@3 (272)
        on left: 244
        on right: 246
    $@4 (273)
        on left: 245
        on right: 246
    expr_new <pExpression> (274)
        on left: 247 248 249 250 251
        on right: 433
    expression_break <pExpression> (275)
        on left: 252
        on right: 66 223
    expression_continue <pExpression> (276)
        on left: 253
        on right: 67 224
    expression_return <pExpression> (277)
        on left: 254 255 256
        on right: 64 225
    expression_yield <pExpression> (278)
        on left: 257 258
        on right: 65 226
    expression_try_catch <pExpression> (279)
        on left: 259
        on right: 228
    kwd_let_var_or_nothing <b> (280)
        on left: 260 261 262
        on right: 477
    kwd_let <b> (281)
        on left: 263 264
        on right: 271 272 525
    optional_in_scope <b> (282)
        on left: 265 266
        on right: 271 272
    tuple_expansion <pNameList> (283)
        on left: 267 268
        on right: 268 269 270
    tuple_expansion_variable_declaration <pVarDecl> (284)
        on left: 269 270
        on right: 272
    expression_let <pExpression> (285)
        on left: 271 272
        on right: 217
    expr_cast <pExpression> (286)
        on left: 275 278 281
        on right: 432
    $@5 (287)
        on left: 273
        on right: 275
    $@6 (288)
        on left: 274
        on right: 275
    $@7 (289)
        on left: 276
        on right: 278
    $@8 (290)
        on left: 277
        on right: 278
    $@9 (291)
        on left: 279
        on right: 281
    $@10 (292)
        on left: 280
        on right: 281
    expr_type_decl <pExpression> (293)
        on left: 284
        on right: 431
    $@11 (294)
        on left: 282
        on right: 284
    $@12 (295)
        on left: 283
        on right: 284
    expr_type_info <pExpression> (296)
        on left: 285 286 287
        on right: 430
    expr_list <pExpression> (297)
        on left: 288 289
        on right: 70 236 289 334 336 349 355 357 398 448 734 738 748 751 752 755 766 767 768
    block_or_simple_block <pExpression> (298)
        on left: 290 291 292
        on right: 304
    block_or_lambda <i> (299)
        on left: 293 294 295
        on right: 304 305
    capture_entry <pCapt> (300)
        on left: 296 297 298 299
        on right: 300 301
    capture_list <pCaptList> (301)
        on left: 300 301
        on right: 301 303
    optional_capture_list <pCaptList> (302)
        on left: 302 303
        on right: 304 305 410 411 412
    expr_full_block <pExpression> (303)
        on left: 304
        on right: 436
    expr_full_block_assumed_piped <pExpression> (304)
        on left: 305 306
        on right: 213
    expr_numeric_const <pExpression> (305)
        on left: 307 308 309 310 311 312 313
        on right: 360
    expr_assign <pExpression> (306)
        on left: 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332
        on right: 215
    expr_named_call <pExpression> (307)
        on left: 333 334
        on right: 435
    expr_method_call <pExpression> (308)
        on left: 335 336
        on right: 434
    func_addr_name <pExpression> (309)
        on left: 337 338
        on right: 339 342 345
    func_addr_expr <pExpression> (310)
        on left: 339 342 345
        on right: 405
    $@13 (311)
        on left: 340
        on right: 342
    $@14 (312)
        on left: 341
        on right: 342
    $@15 (313)
        on left: 343
        on right: 345
    $@16 (314)
        on left: 344
        on right: 345
    expr_field <pExpression> (315)
        on left: 346 347 348 349 352
        on right: 366
    $@17 (316)
        on left: 350
        on right: 352
    $@18 (317)
        on left: 351
        on right: 352
    expr_call <pExpression> (318)
        on left: 353 354 355 356 357
        on right: 213 406
    expr <pExpression> (319)
        on left: 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 417 418 419 420 423 424 425 428 429 430 431 432 433 434 435 436 437 438 439 440
        on right: 30 53 58 63 68 69 72 73 74 242 243 255 256 257 258 269 270 275 278 281 285 286 287 288 289 291 292 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 335 336 338 346 347 348 349 352 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 399 400 401 402 403 404 407 408 409 411 413 414 417 418 419 420 423 424 425 428 429 437 438 439 441 442 443 444 445 447 448 449 450 451 452 453 454 455 456 478 499 500 507 514 515 517 518 527 562 604 615 617 628 704 705 706 707 708 709 710 711 732 733 763 766 767
    $@19 (320)
        on left: 415
        on right: 417
    $@20 (321)
        on left: 416
        on right: 417
    $@21 (322)
        on left: 421
        on right: 423
    $@22 (323)
        on left: 422
        on right: 423
    $@23 (324)
        on left: 426
        on right: 428
    $@24 (325)
        on left: 427
        on right: 428
    expr_mtag <pExpression> (326)
        on left: 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456
        on right: 367
    optional_field_annotation <aaList> (327)
        on left: 457 458
        on right: 469 477 525
    optional_override <i> (328)
        on left: 459 460 461
        on right: 469 476
    optional_constant <b> (329)
        on left: 462 463
        on right: 474 476
    optional_public_or_private_member_variable <b> (330)
        on left: 464 465 466
        on right: 469 474 476
    optional_static_member_variable <b> (331)
        on left: 467 468
        on right: 469 476
    structure_variable_declaration <pVarDecl> (332)
        on left: 469
        on right: 472
    struct_variable_declaration_list <pVarDeclList> (333)
        on left: 470 472 474 476
        on right: 472 474 476 557
    $@25 (334)
        on left: 471
        on right: 472
    $@26 (335)
        on left: 473
        on right: 474
    $@27 (336)
        on left: 475
        on right: 476
    function_argument_declaration <pVarDecl> (337)
        on left: 477 478
        on right: 479 480
    function_argument_list <pVarDeclList> (338)
        on left: 479 480
        on right: 116 480
    tuple_type <pVarDecl> (339)
        on left: 481 482
        on right: 483 484 487
    tuple_type_list <pVarDeclList> (340)
        on left: 483 484
        on right: 484 680
    tuple_alias_type_list <pVarDeclList> (341)
        on left: 485 486 487
        on right: 486 487 690
    variant_type <pVarDecl> (342)
        on left: 488
        on right: 489 490 493
    variant_type_list <pVarDeclList> (343)
        on left: 489 490
        on right: 490 683
    variant_alias_type_list <pVarDeclList> (344)
        on left: 491 492 493
        on right: 492 493 694
    copy_or_move <b> (345)
        on left: 494 495
        on right: 499 500 704 706 708 710
    variable_declaration <pVarDecl> (346)
        on left: 496 497 498 499 500
        on right: 469 477
    copy_or_move_or_clone <i> (347)
        on left: 501 502 503
        on right: 269 270 514 515 517 518
    optional_ref <b> (348)
        on left: 504 505
        on right: 270 515 518
    let_variable_name_with_pos_list <pNameWithPosList> (349)
        on left: 506 507 508 509 510
        on right: 509 510 513 514 515
    global_let_variable_name_with_pos_list <pNameWithPosList> (350)
        on left: 511 512
        on right: 512 516 517 518
    let_variable_declaration <pVarDecl> (351)
        on left: 513 514 515
        on right: 271
    global_let_variable_declaration <pVarDecl> (352)
        on left: 516 517 518
        on right: 525
    optional_shared <b> (353)
        on left: 519 520
        on right: 22 525
    optional_public_or_private_variable <b> (354)
        on left: 521 522 523
        on right: 525
    global_let (355)
        on left: 525
        on right: 5
    $@28 (356)
        on left: 524
        on right: 525
    enum_expression <pEnumPair> (357)
        on left: 526 527
        on right: 529 530
    enum_list <pEnum> (358)
        on left: 528 529 530
        on right: 530 545
    optional_public_or_private_alias <b> (359)
        on left: 531 532 533
        on right: 535 690 694 698
    single_alias (360)
        on left: 535
        on right: 536
    $@29 (361)
        on left: 534
        on right: 535
    alias_declaration (362)
        on left: 536
        on right: 10
    optional_public_or_private_enum <b> (363)
        on left: 537 538 539
        on right: 545
    enum_name <pEnum> (364)
        on left: 540
        on right: 545
    optional_enum_basic_type_declaration <type> (365)
        on left: 541 542
        on right: 545
    enum_declaration (366)
        on left: 545
        on right: 4
    $@30 (367)
        on left: 543
        on right: 545
    $@31 (368)
        on left: 544
        on right: 545
    optional_structure_parent <s> (369)
        on left: 546 547
        on right: 550
    optional_sealed <b> (370)
        on left: 548 549
        on right: 550
    structure_name <pStructure> (371)
        on left: 550
        on right: 560
    class_or_struct <b> (372)
        on left: 551 552
        on right: 560
    optional_public_or_private_structure <b> (373)
        on left: 553 554 555
        on right: 560
    optional_struct_variable_declaration_list <pVarDeclList> (374)
        on left: 556 557
        on right: 560
    structure_declaration (375)
        on left: 560
        on right: 3
    $@32 (376)
        on left: 558
        on right: 560
    $@33 (377)
        on left: 559
        on right: 560
    variable_name_with_pos_list <pNameWithPosList> (378)
        on left: 561 562 563 564 565
        on right: 70 496 497 498 499 500 564 565 766 767 768
    basic_type_declaration <type> (379)
        on left: 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592
        on right: 356 357 418 424 429 439 621
    enum_basic_type_declaration <type> (380)
        on left: 593 594 595 596 597 598 599 600
        on right: 542
    structure_type_declaration <pTypeDecl> (381)
        on left: 601
        on right: 247 248 624
    auto_type_declaration <pTypeDecl> (382)
        on left: 602 603 604
        on right: 622
    bitfield_bits <pNameList> (383)
        on left: 605 606
        on right: 606 612
    bitfield_alias_bits <pNameList> (384)
        on left: 607 608 609
        on right: 609 698
    bitfield_type_declaration <pTypeDecl> (385)
        on left: 612
        on right: 623
    $@34 (386)
        on left: 610
        on right: 612
    $@35 (387)
        on left: 611
        on right: 612
    table_type_pair <aTypePair> (388)
        on left: 613 614
        on right: 653
    dim_list <pTypeDecl> (389)
        on left: 615 616 617 618
        on right: 617 618 620
    type_declaration_no_options <pTypeDecl> (390)
        on left: 619 620
        on right: 269 275 278 281 342 410 411 412 417 513 514 516 517 684 685 722 725 728 731 737 741 744 747 751 755 760 761
    type_declaration_no_options_no_dim <pTypeDecl> (391)
        on left: 621 622 623 624 627 628 629 631 632 633 634 635 636 637 638 639 640 641 642 643 646 647 650 653 656 657 660 663 664 667 670 671 674 677 680 683
        on right: 619 620 632 633 634 635 636 637 638 639 640 641 642 643 647
    $@36 (392)
        on left: 625
        on right: 627
    $@37 (393)
        on left: 626
        on right: 627
    $@38 (394)
        on left: 630
        on right: 631
    $@39 (395)
        on left: 644
        on right: 646
    $@40 (396)
        on left: 645
        on right: 646
    $@41 (397)
        on left: 648
        on right: 650
    $@42 (398)
        on left: 649
        on right: 650
    $@43 (399)
        on left: 651
        on right: 653
    $@44 (400)
        on left: 652
        on right: 653
    $@45 (401)
        on left: 654
        on right: 656
    $@46 (402)
        on left: 655
        on right: 656
    $@47 (403)
        on left: 658
        on right: 660
    $@48 (404)
        on left: 659
        on right: 660
    $@49 (405)
        on left: 661
        on right: 663
    $@50 (406)
        on left: 662
        on right: 663
    $@51 (407)
        on left: 665
        on right: 667
    $@52 (408)
        on left: 666
        on right: 667
    $@53 (409)
        on left: 668
        on right: 670
    $@54 (410)
        on left: 669
        on right: 670
    $@55 (411)
        on left: 672
        on right: 674
    $@56 (412)
        on left: 673
        on right: 674
    $@57 (413)
        on left: 675
        on right: 677
    $@58 (414)
        on left: 676
        on right: 677
    $@59 (415)
        on left: 678
        on right: 680
    $@60 (416)
        on left: 679
        on right: 680
    $@61 (417)
        on left: 681
        on right: 683
    $@62 (418)
        on left: 682
        on right: 683
    type_declaration <pTypeDecl> (419)
        on left: 684 685 686
        on right: 118 237 238 246 284 423 428 481 482 488 498 499 535 613 614 627 646 650 656 660 667 674 685 686
    tuple_alias_declaration (420)
        on left: 690
        on right: 12
    $@63 (421)
        on left: 687
        on right: 690
    $@64 (422)
        on left: 688
        on right: 690
    $@65 (423)
        on left: 689
        on right: 690
    variant_alias_declaration (424)
        on left: 694
        on right: 11
    $@66 (425)
        on left: 691
        on right: 694
    $@67 (426)
        on left: 692
        on right: 694
    $@68 (427)
        on left: 693
        on right: 694
    bitfield_alias_declaration (428)
        on left: 698
        on right: 13
    $@69 (429)
        on left: 695
        on right: 698
    $@70 (430)
        on left: 696
        on right: 698
    $@71 (431)
        on left: 697
        on right: 698
    make_decl <pExpression> (432)
        on left: 699 700 701 702 703
        on right: 251 363
    make_struct_fields <pMakeStruct> (433)
        on left: 704 705 706 707 708 709 710 711
        on right: 333 334 706 707 710 711 712 713 714 715 716
    make_variant_dim <pExpression> (434)
        on left: 712
        on right: 728 747
    make_struct_single <pExpression> (435)
        on left: 713
        on right: 250 354
    make_struct_dim_list <pExpression> (436)
        on left: 714 715
        on right: 715 717
    make_struct_dim_decl <pExpression> (437)
        on left: 716 717
        on right: 722 725 737 741 744
    use_initializer <b> (438)
        on left: 718 719
        on right: 249 250 722 725 731 737 741 744
    make_struct_decl <pExpression> (439)
        on left: 722 725 728 731
        on right: 699
    $@72 (440)
        on left: 720
        on right: 722
    $@73 (441)
        on left: 721
        on right: 722
    $@74 (442)
        on left: 723
        on right: 725
    $@75 (443)
        on left: 724
        on right: 725
    $@76 (444)
        on left: 726
        on right: 728
    $@77 (445)
        on left: 727
        on right: 728
    $@78 (446)
        on left: 729
        on right: 731
    $@79 (447)
        on left: 730
        on right: 731
    make_map_tuple <pExpression> (448)
        on left: 732 733
        on right: 756 757 768
    make_tuple_call <pExpression> (449)
        on left: 734 737
        on right: 703
    $@80 (450)
        on left: 735
        on right: 737
    $@81 (451)
        on left: 736
        on right: 737
    make_dim_decl <pExpression> (452)
        on left: 738 741 744 747 748 751 752 755
        on right: 700
    $@82 (453)
        on left: 739
        on right: 741
    $@83 (454)
        on left: 740
        on right: 741
    $@84 (455)
        on left: 742
        on right: 744
    $@85 (456)
        on left: 743
        on right: 744
    $@86 (457)
        on left: 745
        on right: 747
    $@87 (458)
        on left: 746
        on right: 747
    $@88 (459)
        on left: 749
        on right: 751
    $@89 (460)
        on left: 750
        on right: 751
    $@90 (461)
        on left: 753
        on right: 755
    $@91 (462)
        on left: 754
        on right: 755
    expr_map_tuple_list <pExpression> (463)
        on left: 756 757
        on right: 757 758 759 760 761
    make_table_decl <pExpression> (464)
        on left: 758 759 760 761
        on right: 701
    array_comprehension_where <pExpression> (465)
        on left: 762 763
        on right: 766 767 768
    optional_comma <b> (466)
        on left: 764 765
        on right: 398 545 698 717 734 738 748 751 752 755 758 759 760 761
    array_comprehension <pExpression> (467)
        on left: 766 767 768
        on right: 702


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  263 kwd_let: "let" .

    $default  reduce using rule 263 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   46 expect_declaration: "expect" . expect_list "end of expression"

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  536 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 531 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  264 kwd_let: "var" .

    $default  reduce using rule 264 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  698 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 531 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  690 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 531 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  694 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 531 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  113 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  204 global_function_declaration: optional_annotation_list . "def" function_declaration
  545 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"
  560 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 69
    "class"   shift, and go to state 70
    "def"     shift, and go to state 71
    "enum"    shift, and go to state 72

    class_or_struct  go to state 73


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  525 global_let: kwd_let . optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 74

    $default  reduce using rule 519 (optional_shared)

    optional_shared  go to state 75


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 33

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 34

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 35

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 76

    $default  reduce using rule 92 (annotation_argument)


State 36

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 77

    $default  reduce using rule 36 (options_declaration)


State 38

   49 expect_error: "integer constant" .
   50             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 78

    $default  reduce using rule 49 (expect_error)


State 39

   46 expect_declaration: "expect" expect_list . "end of expression"
   48 expect_list: expect_list . ',' expect_error

    "end of expression"  shift, and go to state 79
    ','                  shift, and go to state 80


State 40

   47 expect_list: expect_error .

    $default  reduce using rule 47 (expect_list)


State 41

   38 require_module_name: "name" .

    $default  reduce using rule 38 (require_module_name)


State 42

   39 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 81


State 43

   40 require_module_name: require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"
   42 require_module: require_module_name . is_public_module
   43               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 82
    "public"  shift, and go to state 83
    '/'       shift, and go to state 84
    '.'       shift, and go to state 85

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 86


State 44

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 45

  533 optional_public_or_private_alias: "public" .

    $default  reduce using rule 533 (optional_public_or_private_alias)


State 46

  532 optional_public_or_private_alias: "private" .

    $default  reduce using rule 532 (optional_public_or_private_alias)


State 47

  535 single_alias: optional_public_or_private_alias . "name" $@29 '=' type_declaration

    "name"  shift, and go to state 87


State 48

  536 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 88


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 74

    $default  reduce using rule 519 (optional_shared)

    optional_shared  go to state 89


State 52

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 90


State 53

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "name"  shift, and go to state 91


State 54

  694 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "name"  shift, and go to state 92


State 55

  241 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 93


State 56

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"

    "::"  shift, and go to state 94

    $default  reduce using rule 239 (name_in_namespace)


State 57

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 95


State 58

   99 annotation_declaration_name: "require" .

    $default  reduce using rule 99 (annotation_declaration_name)


State 59

  100 annotation_declaration_name: "private" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 60

  109 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 61

  104 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 62

  108 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 63

  101 annotation_declaration_basic: annotation_declaration_name .
  102                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 99

    $default  reduce using rule 101 (annotation_declaration_basic)


State 64

  103 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 103 (annotation_declaration)


State 65

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  110 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 110 (annotation_list)


State 66

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 103
    ']'  shift, and go to state 104


State 67

   98 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 98 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

  552 class_or_struct: "struct" .

    $default  reduce using rule 552 (class_or_struct)


State 70

  551 class_or_struct: "class" .

    $default  reduce using rule 551 (class_or_struct)


State 71

  204 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 105
    "private"  shift, and go to state 106

    $default  reduce using rule 205 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 107
    function_declaration                 go to state 108


State 72

  545 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 537 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 111


State 73

  560 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 553 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 114


State 74

  520 optional_shared: "shared" .

    $default  reduce using rule 520 (optional_shared)


State 75

  525 global_let: kwd_let optional_shared . optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 521 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 117


State 76

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 118
    "false"                    shift, and go to state 119
    "integer constant"         shift, and go to state 120
    "floating point constant"  shift, and go to state 121
    "name"                     shift, and go to state 122
    "start of the string"      shift, and go to state 123
    '('                        shift, and go to state 124

    string_constant  go to state 125


State 77

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 126


State 78

   50 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 127


State 79

   46 expect_declaration: "expect" expect_list "end of expression" .

    $default  reduce using rule 46 (expect_declaration)


State 80

   48 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 128


State 81

   39 require_module_name: '%' require_module_name .
   40                    | require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"

    '.'  shift, and go to state 85

    $default  reduce using rule 39 (require_module_name)


State 82

   43 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 129


State 83

   45 is_public_module: "public" .

    $default  reduce using rule 45 (is_public_module)


State 84

   41 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 130


State 85

   40 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 131


State 86

   42 require_module: require_module_name is_public_module .

    $default  reduce using rule 42 (require_module)


State 87

  535 single_alias: optional_public_or_private_alias "name" . $@29 '=' type_declaration

    $default  reduce using rule 534 ($@29)

    $@29  go to state 132


State 88

  536 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 536 (alias_declaration)


State 89

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 133
    "private"  shift, and go to state 134

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 135


State 90

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 695 ($@69)

    $@69  go to state 136


State 91

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 687 ($@63)

    $@63  go to state 137


State 92

  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 691 ($@66)

    $@66  go to state 138


State 93

  241 name_in_namespace: "::" "name" .

    $default  reduce using rule 241 (name_in_namespace)


State 94

  240 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 139


State 95

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 140

    reader_character_sequence  go to state 141


State 96

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  109                       | "|>" annotation_declaration .

    $default  reduce using rule 109 (annotation_declaration)


State 97

  104 annotation_declaration: '!' annotation_declaration .
  105                       | annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 104 (annotation_declaration)


State 98

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  108                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102
    ')'   shift, and go to state 142


State 99

  102 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 143


State 100

  105 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 101

  106 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  107 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  111 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 147
    name_in_namespace             go to state 67


State 104

  113 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 113 (optional_annotation_list)


State 105

  207 optional_public_or_private_function: "public" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 106

  206 optional_public_or_private_function: "private" .

    $default  reduce using rule 206 (optional_public_or_private_function)


State 107

  210 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 209 ($@2)

    $@2  go to state 148


State 108

  204 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 204 (global_function_declaration)


State 109

  539 optional_public_or_private_enum: "public" .

    $default  reduce using rule 539 (optional_public_or_private_enum)


State 110

  538 optional_public_or_private_enum: "private" .

    $default  reduce using rule 538 (optional_public_or_private_enum)


State 111

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 149

    enum_name  go to state 150


State 112

  555 optional_public_or_private_structure: "public" .

    $default  reduce using rule 555 (optional_public_or_private_structure)


State 113

  554 optional_public_or_private_structure: "private" .

    $default  reduce using rule 554 (optional_public_or_private_structure)


State 114

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 558 ($@32)

    $@32  go to state 151


State 115

  523 optional_public_or_private_variable: "public" .

    $default  reduce using rule 523 (optional_public_or_private_variable)


State 116

  522 optional_public_or_private_variable: "private" .

    $default  reduce using rule 522 (optional_public_or_private_variable)


State 117

  525 global_let: kwd_let optional_shared optional_public_or_private_variable . $@28 optional_field_annotation global_let_variable_declaration

    $default  reduce using rule 524 ($@28)

    $@28  go to state 152


State 118

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 119

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 120

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 121

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 122

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 123

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154

    character_sequence  go to state 155


State 124

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 123

    string_constant                 go to state 161
    annotation_argument_value       go to state 162
    annotation_argument_value_list  go to state 163


State 125

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 126

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 127

   50 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 50 (expect_error)


State 128

   48 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 48 (expect_list)


State 129

   43 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 83

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 164


State 130

   41 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 41 (require_module_name)


State 131

   40 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 40 (require_module_name)


State 132

  535 single_alias: optional_public_or_private_alias "name" $@29 . '=' type_declaration

    '='  shift, and go to state 165


State 133

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 134

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 135

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 136

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 . "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "begin of code block"  shift, and go to state 166


State 137

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 . "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "begin of code block"  shift, and go to state 167


State 138

  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 . "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "begin of code block"  shift, and go to state 168


State 139

  240 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 240 (name_in_namespace)


State 140

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 141

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 169

    $default  reduce using rule 35 (expr_reader)


State 142

  108 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 108 (annotation_declaration)


State 143

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 77
    ')'  shift, and go to state 170


State 144

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration .
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 145

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration .
  107                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 100
    "^^"  shift, and go to state 102

    $default  reduce using rule 106 (annotation_declaration)


State 146

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 100

    $default  reduce using rule 107 (annotation_declaration)


State 147

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 111 (annotation_list)


State 148

  210 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 201


State 149

  540 enum_name: "name" .

    $default  reduce using rule 540 (enum_name)


State 150

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    ':'  shift, and go to state 202

    $default  reduce using rule 541 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 203


State 151

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 204

    $default  reduce using rule 548 (optional_sealed)

    optional_sealed  go to state 205
    structure_name   go to state 206


State 152

  525 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 207

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list     go to state 208
    optional_field_annotation  go to state 209


State 153

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 154

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 155

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 210
    STRING_CHARACTER_ESC  shift, and go to state 211
    "end of the string"   shift, and go to state 212


State 156

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 157

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 158

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 159

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 160

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 161

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 162

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 163

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 213
    ')'  shift, and go to state 214


State 164

   43 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 43 (require_module)


State 165

  535 single_alias: optional_public_or_private_alias "name" $@29 '=' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 263


State 166

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" . $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 696 ($@70)

    $@70  go to state 264


State 167

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" . $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 688 ($@64)

    $@64  go to state 265


State 168

  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" . $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 692 ($@67)

    $@67  go to state 266


State 169

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 170

  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 102 (annotation_declaration_basic)


State 171

  120 function_name: "operator" . '!'
  121              | "operator" . '~'
  122              | "operator" . "+="
  123              | "operator" . "-="
  124              | "operator" . "*="
  125              | "operator" . "/="
  126              | "operator" . "%="
  127              | "operator" . "&="
  128              | "operator" . "|="
  129              | "operator" . "^="
  130              | "operator" . "&&="
  131              | "operator" . "||="
  132              | "operator" . "^^="
  133              | "operator" . "&&"
  134              | "operator" . "||"
  135              | "operator" . "^^"
  136              | "operator" . '+'
  137              | "operator" . '-'
  138              | "operator" . '*'
  139              | "operator" . '/'
  140              | "operator" . '%'
  141              | "operator" . '<'
  142              | "operator" . '>'
  143              | "operator" . ".."
  144              | "operator" . "=="
  145              | "operator" . "!="
  146              | "operator" . "<="
  147              | "operator" . ">="
  148              | "operator" . '&'
  149              | "operator" . '|'
  150              | "operator" . '^'
  153              | "operator" . "++"
  154              | "operator" . "--"
  155              | "operator" . "<<"
  156              | "operator" . ">>"
  157              | "operator" . "<<="
  158              | "operator" . ">>="
  159              | "operator" . "<<<"
  160              | "operator" . ">>>"
  161              | "operator" . "<<<="
  162              | "operator" . ">>>="
  163              | "operator" . '[' ']'
  164              | "operator" . "?[" ']'
  165              | "operator" . '.'
  166              | "operator" . "?."
  167              | "operator" . '.' "name"
  168              | "operator" . '.' "name" ":="
  169              | "operator" . "?." "name"
  170              | "operator" . ":="
  171              | "operator" . "delete"
  172              | "operator" . "??"
  173              | "operator" . "is"
  174              | "operator" . "as"
  175              | "operator" . "is" "name"
  176              | "operator" . "as" "name"
  177              | "operator" . '?' "as"
  178              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 267
    "as"      shift, and go to state 268
    "delete"  shift, and go to state 269
    "+="      shift, and go to state 270
    "-="      shift, and go to state 271
    "/="      shift, and go to state 272
    "*="      shift, and go to state 273
    "%="      shift, and go to state 274
    "&="      shift, and go to state 275
    "|="      shift, and go to state 276
    "^="      shift, and go to state 277
    "<<"      shift, and go to state 278
    ">>"      shift, and go to state 279
    "++"      shift, and go to state 280
    "--"      shift, and go to state 281
    "<="      shift, and go to state 282
    "<<="     shift, and go to state 283
    ">>="     shift, and go to state 284
    ">="      shift, and go to state 285
    "=="      shift, and go to state 286
    "!="      shift, and go to state 287
    "??"      shift, and go to state 288
    "?."      shift, and go to state 289
    "?["      shift, and go to state 290
    ":="      shift, and go to state 291
    "<<<"     shift, and go to state 292
    ">>>"     shift, and go to state 293
    "<<<="    shift, and go to state 294
    ">>>="    shift, and go to state 295
    "&&"      shift, and go to state 296
    "||"      shift, and go to state 297
    "^^"      shift, and go to state 298
    "&&="     shift, and go to state 299
    "||="     shift, and go to state 300
    "^^="     shift, and go to state 301
    ".."      shift, and go to state 302
    '?'       shift, and go to state 303
    '|'       shift, and go to state 304
    '^'       shift, and go to state 305
    '&'       shift, and go to state 306
    '<'       shift, and go to state 307
    '>'       shift, and go to state 308
    '-'       shift, and go to state 309
    '+'       shift, and go to state 310
    '*'       shift, and go to state 311
    '/'       shift, and go to state 312
    '%'       shift, and go to state 313
    '~'       shift, and go to state 314
    '!'       shift, and go to state 315
    '.'       shift, and go to state 316
    '['       shift, and go to state 317


State 172

  179 function_name: "bool" .

    $default  reduce using rule 179 (function_name)


State 173

  180 function_name: "string" .

    $default  reduce using rule 180 (function_name)


State 174

  181 function_name: "int" .

    $default  reduce using rule 181 (function_name)


State 175

  182 function_name: "int2" .

    $default  reduce using rule 182 (function_name)


State 176

  183 function_name: "int3" .

    $default  reduce using rule 183 (function_name)


State 177

  184 function_name: "int4" .

    $default  reduce using rule 184 (function_name)


State 178

  185 function_name: "uint" .

    $default  reduce using rule 185 (function_name)


State 179

  186 function_name: "uint2" .

    $default  reduce using rule 186 (function_name)


State 180

  187 function_name: "uint3" .

    $default  reduce using rule 187 (function_name)


State 181

  188 function_name: "uint4" .

    $default  reduce using rule 188 (function_name)


State 182

  189 function_name: "float" .

    $default  reduce using rule 189 (function_name)


State 183

  190 function_name: "float2" .

    $default  reduce using rule 190 (function_name)


State 184

  191 function_name: "float3" .

    $default  reduce using rule 191 (function_name)


State 185

  192 function_name: "float4" .

    $default  reduce using rule 192 (function_name)


State 186

  193 function_name: "range" .

    $default  reduce using rule 193 (function_name)


State 187

  194 function_name: "urange" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "range64" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "urange64" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "int64" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "uint64" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "double" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "int8" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "uint8" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "int16" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "uint16" .

    $default  reduce using rule 203 (function_name)


State 197

  151 function_name: "++" . "operator"

    "operator"  shift, and go to state 318


State 198

  152 function_name: "--" . "operator"

    "operator"  shift, and go to state 319


State 199

  119 function_name: "name" .

    $default  reduce using rule 119 (function_name)


State 200

  208 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 321


State 201

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 323


State 202

  542 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 324
    "uint"    shift, and go to state 325
    "int64"   shift, and go to state 326
    "uint64"  shift, and go to state 327
    "int8"    shift, and go to state 328
    "uint8"   shift, and go to state 329
    "int16"   shift, and go to state 330
    "uint16"  shift, and go to state 331

    enum_basic_type_declaration  go to state 332


State 203

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "begin of code block"  shift, and go to state 333


State 204

  549 optional_sealed: "sealed" .

    $default  reduce using rule 549 (optional_sealed)


State 205

  550 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 334


State 206

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 559 ($@33)

    $@33  go to state 335


State 207

   96 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 336


State 208

   97 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  458 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 337

    $default  reduce using rule 458 (optional_field_annotation)


State 209

  525 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 338

    global_let_variable_name_with_pos_list  go to state 339
    global_let_variable_declaration         go to state 340


State 210

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 211

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 212

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 213

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 123

    string_constant            go to state 161
    annotation_argument_value  go to state 341


State 214

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 215

  627 type_declaration_no_options_no_dim: "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 342


State 216

  650 type_declaration_no_options_no_dim: "array" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 343


State 217

  653 type_declaration_no_options_no_dim: "table" . '<' $@43 table_type_pair '>' $@44

    '<'  shift, and go to state 344


State 218

  628 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 345


State 219

  656 type_declaration_no_options_no_dim: "iterator" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 346


State 220

  646 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@39 type_declaration '>' $@40

    '<'  shift, and go to state 347


State 221

  566 basic_type_declaration: "bool" .

    $default  reduce using rule 566 (basic_type_declaration)


State 222

  586 basic_type_declaration: "void" .

    $default  reduce using rule 586 (basic_type_declaration)


State 223

  567 basic_type_declaration: "string" .

    $default  reduce using rule 567 (basic_type_declaration)


State 224

  602 auto_type_declaration: "auto" .
  603                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 348

    $default  reduce using rule 602 (auto_type_declaration)


State 225

  568 basic_type_declaration: "int" .

    $default  reduce using rule 568 (basic_type_declaration)


State 226

  572 basic_type_declaration: "int2" .

    $default  reduce using rule 572 (basic_type_declaration)


State 227

  573 basic_type_declaration: "int3" .

    $default  reduce using rule 573 (basic_type_declaration)


State 228

  574 basic_type_declaration: "int4" .

    $default  reduce using rule 574 (basic_type_declaration)


State 229

  575 basic_type_declaration: "uint" .

    $default  reduce using rule 575 (basic_type_declaration)


State 230

  592 basic_type_declaration: "bitfield" .
  612 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 349

    $default  reduce using rule 592 (basic_type_declaration)


State 231

  579 basic_type_declaration: "uint2" .

    $default  reduce using rule 579 (basic_type_declaration)


State 232

  580 basic_type_declaration: "uint3" .

    $default  reduce using rule 580 (basic_type_declaration)


State 233

  581 basic_type_declaration: "uint4" .

    $default  reduce using rule 581 (basic_type_declaration)


State 234

  582 basic_type_declaration: "float" .

    $default  reduce using rule 582 (basic_type_declaration)


State 235

  583 basic_type_declaration: "float2" .

    $default  reduce using rule 583 (basic_type_declaration)


State 236

  584 basic_type_declaration: "float3" .

    $default  reduce using rule 584 (basic_type_declaration)


State 237

  585 basic_type_declaration: "float4" .

    $default  reduce using rule 585 (basic_type_declaration)


State 238

  587 basic_type_declaration: "range" .

    $default  reduce using rule 587 (basic_type_declaration)


State 239

  588 basic_type_declaration: "urange" .

    $default  reduce using rule 588 (basic_type_declaration)


State 240

  589 basic_type_declaration: "range64" .

    $default  reduce using rule 589 (basic_type_declaration)


State 241

  590 basic_type_declaration: "urange64" .

    $default  reduce using rule 590 (basic_type_declaration)


State 242

  657 type_declaration_no_options_no_dim: "block" .
  660                                   | "block" . '<' $@47 type_declaration '>' $@48
  663                                   | "block" . '<' $@49 optional_function_argument_list optional_function_type '>' $@50

    '<'  shift, and go to state 350

    $default  reduce using rule 657 (type_declaration_no_options_no_dim)


State 243

  571 basic_type_declaration: "int64" .

    $default  reduce using rule 571 (basic_type_declaration)


State 244

  578 basic_type_declaration: "uint64" .

    $default  reduce using rule 578 (basic_type_declaration)


State 245

  591 basic_type_declaration: "double" .

    $default  reduce using rule 591 (basic_type_declaration)


State 246

  664 type_declaration_no_options_no_dim: "function" .
  667                                   | "function" . '<' $@51 type_declaration '>' $@52
  670                                   | "function" . '<' $@53 optional_function_argument_list optional_function_type '>' $@54

    '<'  shift, and go to state 351

    $default  reduce using rule 664 (type_declaration_no_options_no_dim)


State 247

  671 type_declaration_no_options_no_dim: "lambda" .
  674                                   | "lambda" . '<' $@55 type_declaration '>' $@56
  677                                   | "lambda" . '<' $@57 optional_function_argument_list optional_function_type '>' $@58

    '<'  shift, and go to state 352

    $default  reduce using rule 671 (type_declaration_no_options_no_dim)


State 248

  569 basic_type_declaration: "int8" .

    $default  reduce using rule 569 (basic_type_declaration)


State 249

  576 basic_type_declaration: "uint8" .

    $default  reduce using rule 576 (basic_type_declaration)


State 250

  570 basic_type_declaration: "int16" .

    $default  reduce using rule 570 (basic_type_declaration)


State 251

  577 basic_type_declaration: "uint16" .

    $default  reduce using rule 577 (basic_type_declaration)


State 252

  680 type_declaration_no_options_no_dim: "tuple" . '<' $@59 tuple_type_list '>' $@60

    '<'  shift, and go to state 353


State 253

  683 type_declaration_no_options_no_dim: "variant" . '<' $@61 variant_type_list '>' $@62

    '<'  shift, and go to state 354


State 254

  604 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 355


State 255

  629 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  631                                   | '$' . name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 356


State 256

  601 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 601 (structure_type_declaration)


State 257

  621 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 621 (type_declaration_no_options_no_dim)


State 258

  624 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 624 (type_declaration_no_options_no_dim)


State 259

  622 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 622 (type_declaration_no_options_no_dim)


State 260

  623 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 623 (type_declaration_no_options_no_dim)


State 261

  684 type_declaration: type_declaration_no_options .

    $default  reduce using rule 684 (type_declaration)


State 262

  619 type_declaration_no_options: type_declaration_no_options_no_dim .
  620                            | type_declaration_no_options_no_dim . dim_list
  632 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  633                                   | type_declaration_no_options_no_dim . "explicit"
  634                                   | type_declaration_no_options_no_dim . "const"
  635                                   | type_declaration_no_options_no_dim . '-' "const"
  636                                   | type_declaration_no_options_no_dim . '&'
  637                                   | type_declaration_no_options_no_dim . '-' '&'
  638                                   | type_declaration_no_options_no_dim . '#'
  639                                   | type_declaration_no_options_no_dim . "implicit"
  640                                   | type_declaration_no_options_no_dim . '-' '#'
  641                                   | type_declaration_no_options_no_dim . "==" "const"
  642                                   | type_declaration_no_options_no_dim . "==" '&'
  643                                   | type_declaration_no_options_no_dim . '*'
  647                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 357
    "implicit"  shift, and go to state 358
    "explicit"  shift, and go to state 359
    "=="        shift, and go to state 360
    "??"        shift, and go to state 361
    '&'         shift, and go to state 362
    '-'         shift, and go to state 363
    '*'         shift, and go to state 364
    '['         shift, and go to state 365
    '#'         shift, and go to state 366

    $default  reduce using rule 619 (type_declaration_no_options)

    dim_list  go to state 367


State 263

  535 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 535 (single_alias)


State 264

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 . bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 369

    $default  reduce using rule 607 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 370


State 265

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 . tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 485 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 371


State 266

  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 . variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 491 (variant_alias_type_list)

    variant_alias_type_list  go to state 372


State 267

  173 function_name: "operator" "is" .
  175              | "operator" "is" . "name"

    "name"  shift, and go to state 373

    $default  reduce using rule 173 (function_name)


State 268

  174 function_name: "operator" "as" .
  176              | "operator" "as" . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 174 (function_name)


State 269

  171 function_name: "operator" "delete" .

    $default  reduce using rule 171 (function_name)


State 270

  122 function_name: "operator" "+=" .

    $default  reduce using rule 122 (function_name)


State 271

  123 function_name: "operator" "-=" .

    $default  reduce using rule 123 (function_name)


State 272

  125 function_name: "operator" "/=" .

    $default  reduce using rule 125 (function_name)


State 273

  124 function_name: "operator" "*=" .

    $default  reduce using rule 124 (function_name)


State 274

  126 function_name: "operator" "%=" .

    $default  reduce using rule 126 (function_name)


State 275

  127 function_name: "operator" "&=" .

    $default  reduce using rule 127 (function_name)


State 276

  128 function_name: "operator" "|=" .

    $default  reduce using rule 128 (function_name)


State 277

  129 function_name: "operator" "^=" .

    $default  reduce using rule 129 (function_name)


State 278

  155 function_name: "operator" "<<" .

    $default  reduce using rule 155 (function_name)


State 279

  156 function_name: "operator" ">>" .

    $default  reduce using rule 156 (function_name)


State 280

  153 function_name: "operator" "++" .

    $default  reduce using rule 153 (function_name)


State 281

  154 function_name: "operator" "--" .

    $default  reduce using rule 154 (function_name)


State 282

  146 function_name: "operator" "<=" .

    $default  reduce using rule 146 (function_name)


State 283

  157 function_name: "operator" "<<=" .

    $default  reduce using rule 157 (function_name)


State 284

  158 function_name: "operator" ">>=" .

    $default  reduce using rule 158 (function_name)


State 285

  147 function_name: "operator" ">=" .

    $default  reduce using rule 147 (function_name)


State 286

  144 function_name: "operator" "==" .

    $default  reduce using rule 144 (function_name)


State 287

  145 function_name: "operator" "!=" .

    $default  reduce using rule 145 (function_name)


State 288

  172 function_name: "operator" "??" .

    $default  reduce using rule 172 (function_name)


State 289

  166 function_name: "operator" "?." .
  169              | "operator" "?." . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 166 (function_name)


State 290

  164 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 376


State 291

  170 function_name: "operator" ":=" .

    $default  reduce using rule 170 (function_name)


State 292

  159 function_name: "operator" "<<<" .

    $default  reduce using rule 159 (function_name)


State 293

  160 function_name: "operator" ">>>" .

    $default  reduce using rule 160 (function_name)


State 294

  161 function_name: "operator" "<<<=" .

    $default  reduce using rule 161 (function_name)


State 295

  162 function_name: "operator" ">>>=" .

    $default  reduce using rule 162 (function_name)


State 296

  133 function_name: "operator" "&&" .

    $default  reduce using rule 133 (function_name)


State 297

  134 function_name: "operator" "||" .

    $default  reduce using rule 134 (function_name)


State 298

  135 function_name: "operator" "^^" .

    $default  reduce using rule 135 (function_name)


State 299

  130 function_name: "operator" "&&=" .

    $default  reduce using rule 130 (function_name)


State 300

  131 function_name: "operator" "||=" .

    $default  reduce using rule 131 (function_name)


State 301

  132 function_name: "operator" "^^=" .

    $default  reduce using rule 132 (function_name)


State 302

  143 function_name: "operator" ".." .

    $default  reduce using rule 143 (function_name)


State 303

  177 function_name: "operator" '?' . "as"
  178              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 377


State 304

  149 function_name: "operator" '|' .

    $default  reduce using rule 149 (function_name)


State 305

  150 function_name: "operator" '^' .

    $default  reduce using rule 150 (function_name)


State 306

  148 function_name: "operator" '&' .

    $default  reduce using rule 148 (function_name)


State 307

  141 function_name: "operator" '<' .

    $default  reduce using rule 141 (function_name)


State 308

  142 function_name: "operator" '>' .

    $default  reduce using rule 142 (function_name)


State 309

  137 function_name: "operator" '-' .

    $default  reduce using rule 137 (function_name)


State 310

  136 function_name: "operator" '+' .

    $default  reduce using rule 136 (function_name)


State 311

  138 function_name: "operator" '*' .

    $default  reduce using rule 138 (function_name)


State 312

  139 function_name: "operator" '/' .

    $default  reduce using rule 139 (function_name)


State 313

  140 function_name: "operator" '%' .

    $default  reduce using rule 140 (function_name)


State 314

  121 function_name: "operator" '~' .

    $default  reduce using rule 121 (function_name)


State 315

  120 function_name: "operator" '!' .

    $default  reduce using rule 120 (function_name)


State 316

  165 function_name: "operator" '.' .
  167              | "operator" '.' . "name"
  168              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 378

    $default  reduce using rule 165 (function_name)


State 317

  163 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 379


State 318

  151 function_name: "++" "operator" .

    $default  reduce using rule 151 (function_name)


State 319

  152 function_name: "--" "operator" .

    $default  reduce using rule 152 (function_name)


State 320

  115 optional_function_argument_list: '(' . ')'
  116                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 380
    ')'   shift, and go to state 381
    '@'   shift, and go to state 207

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list         go to state 208
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 383
    function_argument_list         go to state 384


State 321

  208 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 386


State 322

  211 expression_block: "begin of code block" . expressions "end of code block"
  212                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 387


State 323

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 210 (function_declaration)


State 324

  593 enum_basic_type_declaration: "int" .

    $default  reduce using rule 593 (enum_basic_type_declaration)


State 325

  596 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 326

  599 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 599 (enum_basic_type_declaration)


State 327

  600 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 600 (enum_basic_type_declaration)


State 328

  594 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 594 (enum_basic_type_declaration)


State 329

  597 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 597 (enum_basic_type_declaration)


State 330

  595 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 595 (enum_basic_type_declaration)


State 331

  598 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 598 (enum_basic_type_declaration)


State 332

  542 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 542 (optional_enum_basic_type_declaration)


State 333

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@30 enum_list optional_comma $@31 "end of code block"

    $default  reduce using rule 543 ($@30)

    $@30  go to state 388


State 334

  550 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 389

    $default  reduce using rule 546 (optional_structure_parent)

    optional_structure_parent  go to state 390


State 335

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 391

    $default  reduce using rule 556 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 392


State 336

   96 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 96 (metadata_argument_list)


State 337

   97 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 393


State 338

  511 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 511 (global_let_variable_name_with_pos_list)


State 339

  512 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  516 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  517                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  518                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 394
    ':'  shift, and go to state 395
    '&'  shift, and go to state 396

    $default  reduce using rule 504 (optional_ref)

    optional_ref  go to state 397


State 340

  525 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 525 (global_let)


State 341

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 342

  627 type_declaration_no_options_no_dim: "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 625 ($@36)

    $@36  go to state 398


State 343

  650 type_declaration_no_options_no_dim: "array" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 648 ($@41)

    $@41  go to state 399


State 344

  653 type_declaration_no_options_no_dim: "table" '<' . $@43 table_type_pair '>' $@44

    $default  reduce using rule 651 ($@43)

    $@43  go to state 400


State 345

  628 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 465
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 346

  656 type_declaration_no_options_no_dim: "iterator" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 654 ($@45)

    $@45  go to state 474


State 347

  646 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@39 type_declaration '>' $@40

    $default  reduce using rule 644 ($@39)

    $@39  go to state 475


State 348

  603 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 476


State 349

  612 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 610 ($@34)

    $@34  go to state 477


State 350

  660 type_declaration_no_options_no_dim: "block" '<' . $@47 type_declaration '>' $@48
  663                                   | "block" '<' . $@49 optional_function_argument_list optional_function_type '>' $@50

    ':'       reduce using rule 661 ($@49)
    '>'       reduce using rule 661 ($@49)
    '('       reduce using rule 661 ($@49)
    $default  reduce using rule 658 ($@47)

    $@47  go to state 478
    $@49  go to state 479


State 351

  667 type_declaration_no_options_no_dim: "function" '<' . $@51 type_declaration '>' $@52
  670                                   | "function" '<' . $@53 optional_function_argument_list optional_function_type '>' $@54

    ':'       reduce using rule 668 ($@53)
    '>'       reduce using rule 668 ($@53)
    '('       reduce using rule 668 ($@53)
    $default  reduce using rule 665 ($@51)

    $@51  go to state 480
    $@53  go to state 481


State 352

  674 type_declaration_no_options_no_dim: "lambda" '<' . $@55 type_declaration '>' $@56
  677                                   | "lambda" '<' . $@57 optional_function_argument_list optional_function_type '>' $@58

    ':'       reduce using rule 675 ($@57)
    '>'       reduce using rule 675 ($@57)
    '('       reduce using rule 675 ($@57)
    $default  reduce using rule 672 ($@55)

    $@55  go to state 482
    $@57  go to state 483


State 353

  680 type_declaration_no_options_no_dim: "tuple" '<' . $@59 tuple_type_list '>' $@60

    $default  reduce using rule 678 ($@59)

    $@59  go to state 484


State 354

  683 type_declaration_no_options_no_dim: "variant" '<' . $@61 variant_type_list '>' $@62

    $default  reduce using rule 681 ($@61)

    $@61  go to state 485


State 355

  604 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 486
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 356

  629 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  631                                   | '$' name_in_namespace . '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 487
    '('  shift, and go to state 488


State 357

  634 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 634 (type_declaration_no_options_no_dim)


State 358

  639 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 639 (type_declaration_no_options_no_dim)


State 359

  633 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 633 (type_declaration_no_options_no_dim)


State 360

  641 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  642                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 489
    '&'      shift, and go to state 490


State 361

  647 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 647 (type_declaration_no_options_no_dim)


State 362

  636 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 636 (type_declaration_no_options_no_dim)


State 363

  632 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  635                                   | type_declaration_no_options_no_dim '-' . "const"
  637                                   | type_declaration_no_options_no_dim '-' . '&'
  640                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 491
    '&'      shift, and go to state 492
    '['      shift, and go to state 493
    '#'      shift, and go to state 494


State 364

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '*' .

    $default  reduce using rule 643 (type_declaration_no_options_no_dim)


State 365

  615 dim_list: '[' . expr ']'
  616         | '[' . ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    ']'                               shift, and go to state 495
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 496
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 366

  638 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 638 (type_declaration_no_options_no_dim)


State 367

  617 dim_list: dim_list . '[' expr ']'
  618         | dim_list . '[' ']'
  620 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 497

    $default  reduce using rule 620 (type_declaration_no_options)


State 368

  685 type_declaration: type_declaration '|' . type_declaration_no_options
  686                 | type_declaration '|' . '#'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255
    '#'          shift, and go to state 498

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 499
    type_declaration_no_options_no_dim  go to state 262


State 369

  608 bitfield_alias_bits: "name" .

    $default  reduce using rule 608 (bitfield_alias_bits)


State 370

  609 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits . optional_comma $@71 "end of code block"

    ','  shift, and go to state 500

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 501


State 371

  486 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  487                      | tuple_alias_type_list . tuple_type "end of expression"
  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list . $@65 "end of code block"

    "type"               shift, and go to state 215
    "array"              shift, and go to state 216
    "table"              shift, and go to state 217
    "typedecl"           shift, and go to state 218
    "iterator"           shift, and go to state 219
    "smart_ptr"          shift, and go to state 220
    "bool"               shift, and go to state 221
    "void"               shift, and go to state 222
    "string"             shift, and go to state 223
    "auto"               shift, and go to state 224
    "int"                shift, and go to state 225
    "int2"               shift, and go to state 226
    "int3"               shift, and go to state 227
    "int4"               shift, and go to state 228
    "uint"               shift, and go to state 229
    "bitfield"           shift, and go to state 230
    "uint2"              shift, and go to state 231
    "uint3"              shift, and go to state 232
    "uint4"              shift, and go to state 233
    "float"              shift, and go to state 234
    "float2"             shift, and go to state 235
    "float3"             shift, and go to state 236
    "float4"             shift, and go to state 237
    "range"              shift, and go to state 238
    "urange"             shift, and go to state 239
    "range64"            shift, and go to state 240
    "urange64"           shift, and go to state 241
    "block"              shift, and go to state 242
    "int64"              shift, and go to state 243
    "uint64"             shift, and go to state 244
    "double"             shift, and go to state 245
    "function"           shift, and go to state 246
    "lambda"             shift, and go to state 247
    "int8"               shift, and go to state 248
    "uint8"              shift, and go to state 249
    "int16"              shift, and go to state 250
    "uint16"             shift, and go to state 251
    "tuple"              shift, and go to state 252
    "variant"            shift, and go to state 253
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 254
    "name"               shift, and go to state 502
    "end of expression"  shift, and go to state 503
    '$'                  shift, and go to state 255

    $default  reduce using rule 689 ($@65)

    name_in_namespace                   go to state 256
    tuple_type                          go to state 504
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 505
    $@65                                go to state 506


State 372

  492 variant_alias_type_list: variant_alias_type_list . "end of expression"
  493                        | variant_alias_type_list . variant_type "end of expression"
  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list . $@68 "end of code block"

    "name"               shift, and go to state 507
    "end of expression"  shift, and go to state 508

    $default  reduce using rule 693 ($@68)

    variant_type  go to state 509
    $@68          go to state 510


State 373

  175 function_name: "operator" "is" "name" .

    $default  reduce using rule 175 (function_name)


State 374

  176 function_name: "operator" "as" "name" .

    $default  reduce using rule 176 (function_name)


State 375

  169 function_name: "operator" "?." "name" .

    $default  reduce using rule 169 (function_name)


State 376

  164 function_name: "operator" "?[" ']' .

    $default  reduce using rule 164 (function_name)


State 377

  177 function_name: "operator" '?' "as" .
  178              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 511

    $default  reduce using rule 177 (function_name)


State 378

  167 function_name: "operator" '.' "name" .
  168              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 512

    $default  reduce using rule 167 (function_name)


State 379

  163 function_name: "operator" '[' ']' .

    $default  reduce using rule 163 (function_name)


State 380

  478 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 513


State 381

  115 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 115 (optional_function_argument_list)


State 382

  477 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 514
    "var"  shift, and go to state 515

    $default  reduce using rule 262 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 516


State 383

  479 function_argument_list: function_argument_declaration .

    $default  reduce using rule 479 (function_argument_list)


State 384

  116 optional_function_argument_list: '(' function_argument_list . ')'
  480 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 517
    ')'                  shift, and go to state 518


State 385

  118 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 519


State 386

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 208 (function_declaration_header)


State 387

  211 expression_block: "begin of code block" expressions . "end of code block"
  212                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 520
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 521
    "if"                              shift, and go to state 522
    "static_if"                       shift, and go to state 523
    "for"                             shift, and go to state 524
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 525
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 526
    "try"                             shift, and go to state 527
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 528
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 529
    "assume"                          shift, and go to state 530
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 531
    "pass"                            shift, and go to state 532
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 533
    "goto"                            shift, and go to state 534
    "unsafe"                          shift, and go to state 535
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "yield"                           shift, and go to state 536
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    "end of code block"               shift, and go to state 537
    "end of expression"               shift, and go to state 538
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder           go to state 449
    expr_reader              go to state 450
    expression_label         go to state 539
    expression_goto          go to state 540
    if_or_static_if          go to state 541
    expression_if_one_liner  go to state 542
    expression_if_then_else  go to state 543
    expression_for_loop      go to state 544
    expression_unsafe        go to state 545
    expression_while_loop    go to state 546
    expression_with          go to state 547
    expression_with_alias    go to state 548
    expr_call_pipe           go to state 451
    expression_any           go to state 549
    name_in_namespace        go to state 452
    expression_delete        go to state 550
    expr_new                 go to state 453
    expression_break         go to state 551
    expression_continue      go to state 552
    expression_return        go to state 553
    expression_yield         go to state 554
    expression_try_catch     go to state 555
    kwd_let                  go to state 556
    expression_let           go to state 557
    expr_cast                go to state 454
    expr_type_decl           go to state 455
    expr_type_info           go to state 456
    block_or_lambda          go to state 457
    expr_full_block          go to state 458
    expr_numeric_const       go to state 459
    expr_assign              go to state 558
    expr_named_call          go to state 460
    expr_method_call         go to state 461
    func_addr_expr           go to state 462
    expr_field               go to state 463
    expr_call                go to state 464
    expr                     go to state 559
    expr_mtag                go to state 466
    basic_type_declaration   go to state 467
    make_decl                go to state 468
    make_struct_decl         go to state 469
    make_tuple_call          go to state 470
    make_dim_decl            go to state 471
    make_table_decl          go to state 472
    array_comprehension      go to state 473


State 388

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 . enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 560

    $default  reduce using rule 528 (enum_list)

    enum_expression  go to state 561
    enum_list        go to state 562


State 389

  547 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 563


State 390

  550 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 550 (structure_name)


State 391

  557 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 470 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 564


State 392

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list .

    $default  reduce using rule 560 (structure_declaration)


State 393

   97 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 394

  512 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 565


State 395

  516 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  517                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 566
    type_declaration_no_options_no_dim  go to state 262


State 396

  505 optional_ref: '&' .

    $default  reduce using rule 505 (optional_ref)


State 397

  518 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 567
    ":="  shift, and go to state 568
    '='   shift, and go to state 569

    copy_or_move_or_clone  go to state 570


State 398

  627 type_declaration_no_options_no_dim: "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 571


State 399

  650 type_declaration_no_options_no_dim: "array" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 572


State 400

  653 type_declaration_no_options_no_dim: "table" '<' $@43 . table_type_pair '>' $@44

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    table_type_pair                     go to state 573
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 574


State 401

  722 make_struct_decl: "struct" . '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 575


State 402

  725 make_struct_decl: "class" . '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 576


State 403

  364 expr: "true" .

    $default  reduce using rule 364 (expr)


State 404

  365 expr: "false" .

    $default  reduce using rule 365 (expr)


State 405

  247 expr_new: "new" . structure_type_declaration
  248         | "new" . structure_type_declaration '(' optional_expr_list ')'
  249         | "new" . new_type_declaration '(' use_initializer ')'
  250         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  251         | "new" . make_decl

    "struct"               shift, and go to state 401
    "class"                shift, and go to state 402
    "array"                shift, and go to state 408
    "table"                shift, and go to state 410
    "fixed_array"          shift, and go to state 416
    "default"              shift, and go to state 417
    "tuple"                shift, and go to state 419
    "variant"              shift, and go to state 420
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 439
    '<'                    shift, and go to state 577
    '['                    shift, and go to state 445

    name_in_namespace           go to state 256
    new_type_declaration        go to state 578
    structure_type_declaration  go to state 579
    make_decl                   go to state 580
    make_struct_decl            go to state 469
    make_tuple_call             go to state 470
    make_dim_decl               go to state 471
    make_table_decl             go to state 472
    array_comprehension         go to state 473


State 406

  285 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  286               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  287               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 581


State 407

  284 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 582


State 408

  741 make_dim_decl: "array" . "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'
  744              | "array" . "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'
  747              | "array" . "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  748              | "array" . '(' expr_list optional_comma ')'
  751              | "array" . '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list optional_comma ')'

    "struct"   shift, and go to state 583
    "tuple"    shift, and go to state 584
    "variant"  shift, and go to state 585
    '<'        shift, and go to state 586
    '('        shift, and go to state 587


State 409

  358 expr: "null" .

    $default  reduce using rule 358 (expr)


State 410

  759 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  760                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  761                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 588
    '('  shift, and go to state 589


State 411

  408 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 590


State 412

  275 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 591


State 413

  278 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 592


State 414

  409 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 593


State 415

  281 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 594


State 416

  752 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  755              | "fixed_array" . '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 595
    '('  shift, and go to state 596


State 417

  731 make_struct_decl: "default" . '<' $@78 type_declaration_no_options '>' $@79 use_initializer

    '<'  shift, and go to state 597


State 418

  592 basic_type_declaration: "bitfield" .

    $default  reduce using rule 592 (basic_type_declaration)


State 419

  734 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  737                | "tuple" . '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 598
    '('  shift, and go to state 599


State 420

  728 make_struct_decl: "variant" . '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    '<'  shift, and go to state 600


State 421

  410 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  411     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  412     | "generator" . '<' type_declaration_no_options '>' optional_capture_list expression_block

    '<'  shift, and go to state 601


State 422

  394 expr: "++" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 602
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 423

  395 expr: "--" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 603
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 424

  441 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 604


State 425

  442 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 605


State 426

  443 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 606


State 427

  444 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 607


State 428

  445 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 608


State 429

  447 expr_mtag: "$c" . '(' expr ')' '(' ')'
  448          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 609


State 430

  446 expr_mtag: "..." .

    $default  reduce using rule 446 (expr_mtag)


State 431

  307 expr_numeric_const: "integer constant" .

    $default  reduce using rule 307 (expr_numeric_const)


State 432

  309 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 309 (expr_numeric_const)


State 433

  308 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 308 (expr_numeric_const)


State 434

  310 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 310 (expr_numeric_const)


State 435

  311 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 436

  312 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 437

  313 expr_numeric_const: "double constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 438

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 610


State 439

  758 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  768 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 611
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 612
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_map_tuple          go to state 613
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    expr_map_tuple_list     go to state 614
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 440

  371 expr: '-' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 615
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 441

  370 expr: '+' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 616
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 442

  407 expr: '*' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 617
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 443

  369 expr: '~' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 618
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 444

  368 expr: '!' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 619
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 445

  738 make_dim_decl: '[' . expr_list optional_comma ']'
  766 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  767                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 620
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 621
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 622
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 446

  398 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 624
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 447

  293 block_or_lambda: '$' .

    $default  reduce using rule 293 (block_or_lambda)


State 448

  294 block_or_lambda: '@' .
  295                | '@' . '@'
  339 func_addr_expr: '@' . '@' func_addr_name
  342               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  345               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  456 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 625

    $default  reduce using rule 294 (block_or_lambda)


State 449

  362 expr: string_builder .

    $default  reduce using rule 362 (expr)


State 450

  361 expr: expr_reader .

    $default  reduce using rule 361 (expr)


State 451

  440 expr: expr_call_pipe .

    $default  reduce using rule 440 (expr)


State 452

  333 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  334                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  353 expr_call: name_in_namespace . '(' ')'
  354          | name_in_namespace . '(' make_struct_single ')'
  355          | name_in_namespace . '(' expr_list ')'
  359 expr: name_in_namespace .

    '('  shift, and go to state 626

    $default  reduce using rule 359 (expr)


State 453

  433 expr: expr_new .

    $default  reduce using rule 433 (expr)


State 454

  432 expr: expr_cast .

    $default  reduce using rule 432 (expr)


State 455

  431 expr: expr_type_decl .

    $default  reduce using rule 431 (expr)


State 456

  430 expr: expr_type_info .

    $default  reduce using rule 430 (expr)


State 457

  304 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 627


State 458

  436 expr: expr_full_block .

    $default  reduce using rule 436 (expr)


State 459

  360 expr: expr_numeric_const .

    $default  reduce using rule 360 (expr)


State 460

  435 expr: expr_named_call .

    $default  reduce using rule 435 (expr)


State 461

  434 expr: expr_method_call .

    $default  reduce using rule 434 (expr)


State 462

  405 expr: func_addr_expr .

    $default  reduce using rule 405 (expr)


State 463

  366 expr: expr_field .

    $default  reduce using rule 366 (expr)


State 464

  213 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  406 expr: expr_call .

    "begin of code block"  shift, and go to state 628
    '$'                    shift, and go to state 447
    '@'                    shift, and go to state 629

    $default  reduce using rule 406 (expr)

    block_or_lambda                go to state 630
    expr_full_block_assumed_piped  go to state 631


State 465

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  628 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 667


State 466

  367 expr: expr_mtag .

    $default  reduce using rule 367 (expr)


State 467

  356 expr_call: basic_type_declaration . '(' ')'
  357          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 668


State 468

  363 expr: make_decl .

    $default  reduce using rule 363 (expr)


State 469

  699 make_decl: make_struct_decl .

    $default  reduce using rule 699 (make_decl)


State 470

  703 make_decl: make_tuple_call .

    $default  reduce using rule 703 (make_decl)


State 471

  700 make_decl: make_dim_decl .

    $default  reduce using rule 700 (make_decl)


State 472

  701 make_decl: make_table_decl .

    $default  reduce using rule 701 (make_decl)


State 473

  702 make_decl: array_comprehension .

    $default  reduce using rule 702 (make_decl)


State 474

  656 type_declaration_no_options_no_dim: "iterator" '<' $@45 . type_declaration '>' $@46

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 669


State 475

  646 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 . type_declaration '>' $@40

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 670


State 476

  603 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 671


State 477

  612 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 672

    bitfield_bits  go to state 673


State 478

  660 type_declaration_no_options_no_dim: "block" '<' $@47 . type_declaration '>' $@48

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 674


State 479

  663 type_declaration_no_options_no_dim: "block" '<' $@49 . optional_function_argument_list optional_function_type '>' $@50

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 675


State 480

  667 type_declaration_no_options_no_dim: "function" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 676


State 481

  670 type_declaration_no_options_no_dim: "function" '<' $@53 . optional_function_argument_list optional_function_type '>' $@54

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 677


State 482

  674 type_declaration_no_options_no_dim: "lambda" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 678


State 483

  677 type_declaration_no_options_no_dim: "lambda" '<' $@57 . optional_function_argument_list optional_function_type '>' $@58

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 679


State 484

  680 type_declaration_no_options_no_dim: "tuple" '<' $@59 . tuple_type_list '>' $@60

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 502
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    tuple_type                          go to state 680
    tuple_type_list                     go to state 681
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 505


State 485

  683 type_declaration_no_options_no_dim: "variant" '<' $@61 . variant_type_list '>' $@62

    "name"  shift, and go to state 507

    variant_type       go to state 682
    variant_type_list  go to state 683


State 486

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  604 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 684


State 487

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 630 ($@38)

    $@38  go to state 685


State 488

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    optional_expr_list      go to state 686
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 687
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 489

  641 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 641 (type_declaration_no_options_no_dim)


State 490

  642 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 642 (type_declaration_no_options_no_dim)


State 491

  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 635 (type_declaration_no_options_no_dim)


State 492

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 637 (type_declaration_no_options_no_dim)


State 493

  632 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 688


State 494

  640 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 640 (type_declaration_no_options_no_dim)


State 495

  616 dim_list: '[' ']' .

    $default  reduce using rule 616 (dim_list)


State 496

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  615 dim_list: '[' expr . ']'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ']'    shift, and go to state 689


State 497

  617 dim_list: dim_list '[' . expr ']'
  618         | dim_list '[' . ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    ']'                               shift, and go to state 690
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 691
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 498

  686 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 686 (type_declaration)


State 499

  685 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 685 (type_declaration)


State 500

  609 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  765 optional_comma: ',' .

    "name"  shift, and go to state 692

    $default  reduce using rule 765 (optional_comma)


State 501

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma . $@71 "end of code block"

    $default  reduce using rule 697 ($@71)

    $@71  go to state 693


State 502

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"
  482 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 94
    ':'   shift, and go to state 694

    $default  reduce using rule 239 (name_in_namespace)


State 503

  486 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 486 (tuple_alias_type_list)


State 504

  487 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 695


State 505

  481 tuple_type: type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 481 (tuple_type)


State 506

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 . "end of code block"

    "end of code block"  shift, and go to state 696


State 507

  488 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 697


State 508

  492 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 492 (variant_alias_type_list)


State 509

  493 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 698


State 510

  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 . "end of code block"

    "end of code block"  shift, and go to state 699


State 511

  178 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 178 (function_name)


State 512

  168 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 168 (function_name)


State 513

  478 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 700
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 514

  260 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 260 (kwd_let_var_or_nothing)


State 515

  261 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 261 (kwd_let_var_or_nothing)


State 516

  477 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 701
    "name"  shift, and go to state 702

    variable_declaration         go to state 703
    variable_name_with_pos_list  go to state 704


State 517

  480 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 380
    '@'   shift, and go to state 207

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list         go to state 208
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 705


State 518

  116 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 519

  118 optional_function_type: ':' type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 118 (optional_function_type)


State 520

  234 expressions: expressions error .

    $default  reduce using rule 234 (expressions)


State 521

   72 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 706


State 522

   59 if_or_static_if: "if" .

    $default  reduce using rule 59 (if_or_static_if)


State 523

   60 if_or_static_if: "static_if" .

    $default  reduce using rule 60 (if_or_static_if)


State 524

   70 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 707


State 525

  254 expression_return: "return" .
  255                  | "return" . expr
  256                  | "return" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "<-"                              shift, and go to state 708
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    $default  reduce using rule 254 (expression_return)

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 709
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 526

  252 expression_break: "break" .

    $default  reduce using rule 252 (expression_break)


State 527

  259 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 710


State 528

  242 expression_delete: "delete" . expr
  243                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "explicit"                        shift, and go to state 711
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 712
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 529

   73 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 713


State 530

   74 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 714


State 531

  253 expression_continue: "continue" .

    $default  reduce using rule 253 (expression_continue)


State 532

  231 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 715


State 533

   51 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 716


State 534

   52 expression_goto: "goto" . "label" "integer constant"
   53                | "goto" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 717
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 718
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 535

   71 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 719


State 536

  257 expression_yield: "yield" . expr
  258                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "<-"                              shift, and go to state 720
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 721
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 537

  211 expression_block: "begin of code block" expressions "end of code block" .
  212                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 722

    $default  reduce using rule 211 (expression_block)


State 538

  214 expression_any: "end of expression" .

    $default  reduce using rule 214 (expression_any)


State 539

  229 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 723


State 540

  230 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 724


State 541

   68 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 725


State 542

   69 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 726


State 543

  227 expression_any: expression_if_then_else .

    $default  reduce using rule 227 (expression_any)


State 544

  222 expression_any: expression_for_loop .

    $default  reduce using rule 222 (expression_any)


State 545

  219 expression_any: expression_unsafe .

    $default  reduce using rule 219 (expression_any)


State 546

  218 expression_any: expression_while_loop .

    $default  reduce using rule 218 (expression_any)


State 547

  220 expression_any: expression_with .

    $default  reduce using rule 220 (expression_any)


State 548

  221 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 727


State 549

  233 expressions: expressions expression_any .

    $default  reduce using rule 233 (expressions)


State 550

  216 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 728


State 551

   66 expression_if_one_liner: expression_break .
  223 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 729

    $default  reduce using rule 66 (expression_if_one_liner)


State 552

   67 expression_if_one_liner: expression_continue .
  224 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 730

    $default  reduce using rule 67 (expression_if_one_liner)


State 553

   64 expression_if_one_liner: expression_return .
  225 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 731

    $default  reduce using rule 64 (expression_if_one_liner)


State 554

   65 expression_if_one_liner: expression_yield .
  226 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 732

    $default  reduce using rule 65 (expression_if_one_liner)


State 555

  228 expression_any: expression_try_catch .

    $default  reduce using rule 228 (expression_any)


State 556

  271 expression_let: kwd_let . optional_in_scope let_variable_declaration
  272               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 733

    $default  reduce using rule 266 (optional_in_scope)

    optional_in_scope  go to state 734


State 557

  217 expression_any: expression_let .

    $default  reduce using rule 217 (expression_any)


State 558

  215 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 735


State 559

   63 expression_if_one_liner: expr .
  314 expr_assign: expr .
  315            | expr . '=' expr
  316            | expr . "<-" expr
  317            | expr . ":=" expr
  318            | expr . "&=" expr
  319            | expr . "|=" expr
  320            | expr . "^=" expr
  321            | expr . "&&=" expr
  322            | expr . "||=" expr
  323            | expr . "^^=" expr
  324            | expr . "+=" expr
  325            | expr . "-=" expr
  326            | expr . "*=" expr
  327            | expr . "/=" expr
  328            | expr . "%=" expr
  329            | expr . "<<=" expr
  330            | expr . ">>=" expr
  331            | expr . "<<<=" expr
  332            | expr . ">>>=" expr
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 632
    "as"    shift, and go to state 633
    "+="    shift, and go to state 736
    "-="    shift, and go to state 737
    "/="    shift, and go to state 738
    "*="    shift, and go to state 739
    "%="    shift, and go to state 740
    "&="    shift, and go to state 741
    "|="    shift, and go to state 742
    "^="    shift, and go to state 743
    "<<"    shift, and go to state 634
    ">>"    shift, and go to state 635
    "++"    shift, and go to state 636
    "--"    shift, and go to state 637
    "<="    shift, and go to state 638
    "<<="   shift, and go to state 744
    ">>="   shift, and go to state 745
    ">="    shift, and go to state 639
    "=="    shift, and go to state 640
    "!="    shift, and go to state 641
    "->"    shift, and go to state 642
    "<-"    shift, and go to state 746
    "??"    shift, and go to state 643
    "?."    shift, and go to state 644
    "?["    shift, and go to state 645
    "<|"    shift, and go to state 646
    "|>"    shift, and go to state 647
    ":="    shift, and go to state 747
    "<<<"   shift, and go to state 648
    ">>>"   shift, and go to state 649
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 650
    "||"    shift, and go to state 651
    "^^"    shift, and go to state 652
    "&&="   shift, and go to state 750
    "||="   shift, and go to state 751
    "^^="   shift, and go to state 752
    ".."    shift, and go to state 653
    '='     shift, and go to state 753
    '?'     shift, and go to state 654
    '|'     shift, and go to state 655
    '^'     shift, and go to state 656
    '&'     shift, and go to state 657
    '<'     shift, and go to state 658
    '>'     shift, and go to state 659
    '-'     shift, and go to state 660
    '+'     shift, and go to state 661
    '*'     shift, and go to state 662
    '/'     shift, and go to state 663
    '%'     shift, and go to state 664
    '.'     shift, and go to state 665
    '['     shift, and go to state 666

    "end of expression"  reduce using rule 314 (expr_assign)
    $default             reduce using rule 63 (expression_if_one_liner)


State 560

  526 enum_expression: "name" .
  527                | "name" . '=' expr

    '='  shift, and go to state 754

    $default  reduce using rule 526 (enum_expression)


State 561

  529 enum_list: enum_expression .

    $default  reduce using rule 529 (enum_list)


State 562

  530 enum_list: enum_list . ',' enum_expression
  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list . optional_comma $@31 "end of code block"

    ','  shift, and go to state 755

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 756


State 563

  547 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 547 (optional_structure_parent)


State 564

  472 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  474                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  557 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 757
    '['                  shift, and go to state 15

    "def"     reduce using rule 112 (optional_annotation_list)
    $default  reduce using rule 471 ($@25)

    optional_annotation_list  go to state 758
    $@25                      go to state 759


State 565

  512 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 512 (global_let_variable_name_with_pos_list)


State 566

  516 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  517                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 567
    ":="                 shift, and go to state 568
    "end of expression"  shift, and go to state 760
    '='                  shift, and go to state 569

    copy_or_move_or_clone  go to state 761


State 567

  502 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 502 (copy_or_move_or_clone)


State 568

  503 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 503 (copy_or_move_or_clone)


State 569

  501 copy_or_move_or_clone: '=' .

    $default  reduce using rule 501 (copy_or_move_or_clone)


State 570

  518 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 762
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 571

  627 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration . '>' $@37
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 763


State 572

  650 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration . '>' $@42
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 764


State 573

  653 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair . '>' $@44

    '>'  shift, and go to state 765


State 574

  613 table_type_pair: type_declaration .
  614                | type_declaration . "end of expression" type_declaration
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 766
    '|'                  shift, and go to state 368

    $default  reduce using rule 613 (table_type_pair)


State 575

  722 make_struct_decl: "struct" '<' . $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 720 ($@72)

    $@72  go to state 767


State 576

  725 make_struct_decl: "class" '<' . $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 723 ($@74)

    $@74  go to state 768


State 577

  246 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 244 ($@3)

    $@3  go to state 769


State 578

  249 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  250         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 770


State 579

  247 expr_new: "new" structure_type_declaration .
  248         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 771

    $default  reduce using rule 247 (expr_new)


State 580

  251 expr_new: "new" make_decl .

    $default  reduce using rule 251 (expr_new)


State 581

  285 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  286               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 772
    '('  shift, and go to state 773


State 582

  284 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 282 ($@11)

    $@11  go to state 774


State 583

  741 make_dim_decl: "array" "struct" . '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 775


State 584

  744 make_dim_decl: "array" "tuple" . '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 776


State 585

  747 make_dim_decl: "array" "variant" . '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    '<'  shift, and go to state 777


State 586

  751 make_dim_decl: "array" '<' . $@88 type_declaration_no_options '>' $@89 '(' expr_list optional_comma ')'

    $default  reduce using rule 749 ($@88)

    $@88  go to state 778


State 587

  748 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 779
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 588

  760 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  761                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 780
    type_declaration_no_options_no_dim  go to state 262


State 589

  759 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 612
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_map_tuple          go to state 613
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    expr_map_tuple_list     go to state 781
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 590

  408 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 782
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 591

  275 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 273 ($@5)

    $@5  go to state 783


State 592

  278 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 276 ($@7)

    $@7  go to state 784


State 593

  409 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 785
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 594

  281 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 279 ($@9)

    $@9  go to state 786


State 595

  755 make_dim_decl: "fixed_array" '<' . $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 753 ($@90)

    $@90  go to state 787


State 596

  752 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 788
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 597

  731 make_struct_decl: "default" '<' . $@78 type_declaration_no_options '>' $@79 use_initializer

    $default  reduce using rule 729 ($@78)

    $@78  go to state 789


State 598

  737 make_tuple_call: "tuple" '<' . $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 735 ($@80)

    $@80  go to state 790


State 599

  734 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 791
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 600

  728 make_struct_decl: "variant" '<' . $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    $default  reduce using rule 726 ($@76)

    $@76  go to state 792


State 601

  410 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  411     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  412     | "generator" '<' . type_declaration_no_options '>' optional_capture_list expression_block

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 793
    type_declaration_no_options_no_dim  go to state 262


State 602

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  394     | "++" expr .
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 394 (expr)


State 603

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  395     | "--" expr .
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 395 (expr)


State 604

  441 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 794
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 605

  442 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 795
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 606

  443 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 796
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 607

  444 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 797
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 608

  445 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 798
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 609

  447 expr_mtag: "$c" '(' . expr ')' '(' ')'
  448          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 799
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 610

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154
    "end of the string"   shift, and go to state 800
    "{"                   shift, and go to state 801

    character_sequence  go to state 802


State 611

  768 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 701
    "name"  shift, and go to state 702

    variable_name_with_pos_list  go to state 803


State 612

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  732 make_map_tuple: expr . "=>" expr
  733               | expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "=>"   shift, and go to state 804
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 733 (make_map_tuple)


State 613

  756 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 756 (expr_map_tuple_list)


State 614

  757 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  758 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 805

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 806


State 615

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  371 expr: '-' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 371 (expr)


State 616

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  370 expr: '+' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 370 (expr)


State 617

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  407     | '*' expr .
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 407 (expr)


State 618

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  369 expr: '~' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 369 (expr)


State 619

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  368 expr: '!' expr .
  372     | expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 368 (expr)


State 620

  766 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 701
    "name"  shift, and go to state 702

    variable_name_with_pos_list  go to state 807


State 621

  767 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 808


State 622

  289 expr_list: expr_list . ',' expr
  738 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 809

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 810


State 623

  288 expr_list: expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 288 (expr_list)


State 624

  289 expr_list: expr_list . ',' expr
  398 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 809

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 811


State 625

  295 block_or_lambda: '@' '@' .
  339 func_addr_expr: '@' '@' . func_addr_name
  342               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  345               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  456 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 812
    "$c"    shift, and go to state 813
    "name"  shift, and go to state 56
    '<'     shift, and go to state 814

    $default  reduce using rule 295 (block_or_lambda)

    name_in_namespace  go to state 815
    func_addr_name     go to state 816


State 626

  333 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  334                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  353 expr_call: name_in_namespace '(' . ')'
  354          | name_in_namespace '(' . make_struct_single ')'
  355          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "$f"                              shift, and go to state 817
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 818
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 819
    '('                               shift, and go to state 446
    ')'                               shift, and go to state 820
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 821
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_fields      go to state 822
    make_struct_single      go to state 823
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 627

  304 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 824

    $default  reduce using rule 302 (optional_capture_list)

    optional_capture_list  go to state 825


State 628

  306 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 826


State 629

  294 block_or_lambda: '@' .
  295                | '@' . '@'

    '@'  shift, and go to state 827

    $default  reduce using rule 294 (block_or_lambda)


State 630

  305 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 828


State 631

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 213 (expr_call_pipe)


State 632

  417 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr "is" . basic_type_declaration
  419     | expr "is" . "name"
  455 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 829
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 418
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 830
    "name"      shift, and go to state 831

    basic_type_declaration  go to state 832


State 633

  420 expr: expr "as" . "name"
  423     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  424     | expr "as" . basic_type_declaration
  453 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 833
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 418
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 834
    "name"      shift, and go to state 835

    basic_type_declaration  go to state 836


State 634

  372 expr: expr "<<" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 837
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 635

  373 expr: expr ">>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 838
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 636

  396 expr: expr "++" .

    $default  reduce using rule 396 (expr)


State 637

  397 expr: expr "--" .

    $default  reduce using rule 397 (expr)


State 638

  385 expr: expr "<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 839
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 639

  386 expr: expr ">=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 840
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 640

  383 expr: expr "==" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 841
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 641

  384 expr: expr "!=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 842
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 642

  335 expr_method_call: expr "->" . "name" '(' ')'
  336                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 843


State 643

  413 expr: expr "??" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 844
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 644

  403 expr: expr "?." . "name"
  450 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 845
    "name"  shift, and go to state 846


State 645

  401 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 847
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 646

  437 expr: expr "<|" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 848
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 647

  438 expr: expr "|>" . expr
  439     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 849
    expr_mtag               go to state 466
    basic_type_declaration  go to state 850
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 648

  374 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 851
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 649

  375 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 852
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 650

  390 expr: expr "&&" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 853
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 651

  391 expr: expr "||" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 854
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 652

  392 expr: expr "^^" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 855
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 653

  393 expr: expr ".." . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 856
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 654

  414 expr: expr '?' . expr ':' expr
  425     | expr '?' . "as" "name"
  428     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr '?' . "as" basic_type_declaration
  454 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "as"                              shift, and go to state 857
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 858
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 655

  388 expr: expr '|' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 859
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 656

  389 expr: expr '^' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 860
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 657

  387 expr: expr '&' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 861
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 658

  381 expr: expr '<' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 862
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 659

  382 expr: expr '>' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 863
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 660

  377 expr: expr '-' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 864
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 661

  376 expr: expr '+' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 865
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 662

  378 expr: expr '*' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 866
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 663

  379 expr: expr '/' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 867
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 664

  380 expr: expr '%' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 868
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 665

  346 expr_field: expr '.' . "name"
  347           | expr '.' . '.' "name"
  348           | expr '.' . "name" '(' ')'
  349           | expr '.' . "name" '(' expr_list ')'
  352           | expr '.' . $@17 error $@18
  400 expr: expr '.' . '[' expr ']'
  402     | expr '.' . "?[" expr ']'
  404     | expr '.' . "?." "name"
  449 expr_mtag: expr '.' . "$f" '(' expr ')'
  451          | expr '.' . '.' "$f" '(' expr ')'
  452          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 869
    "?["    shift, and go to state 870
    "$f"    shift, and go to state 871
    "name"  shift, and go to state 872
    '.'     shift, and go to state 873
    '['     shift, and go to state 874

    $default  reduce using rule 350 ($@17)

    $@17  go to state 875


State 666

  399 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 876
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 667

  628 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 628 (type_declaration_no_options_no_dim)


State 668

  356 expr_call: basic_type_declaration '(' . ')'
  357          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    ')'                               shift, and go to state 877
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 878
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 669

  656 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration . '>' $@46
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 879


State 670

  646 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration . '>' $@40
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 880


State 671

  603 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 603 (auto_type_declaration)


State 672

  605 bitfield_bits: "name" .

    $default  reduce using rule 605 (bitfield_bits)


State 673

  606 bitfield_bits: bitfield_bits . "end of expression" "name"
  612 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    "end of expression"  shift, and go to state 881
    '>'                  shift, and go to state 882


State 674

  660 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration . '>' $@48
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 883


State 675

  663 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list . optional_function_type '>' $@50

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 884


State 676

  667 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration . '>' $@52
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 885


State 677

  670 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list . optional_function_type '>' $@54

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 886


State 678

  674 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration . '>' $@56
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 887


State 679

  677 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list . optional_function_type '>' $@58

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 888


State 680

  483 tuple_type_list: tuple_type .

    $default  reduce using rule 483 (tuple_type_list)


State 681

  484 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  680 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list . '>' $@60

    "end of expression"  shift, and go to state 889
    '>'                  shift, and go to state 890


State 682

  489 variant_type_list: variant_type .

    $default  reduce using rule 489 (variant_type_list)


State 683

  490 variant_type_list: variant_type_list . "end of expression" variant_type
  683 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list . '>' $@62

    "end of expression"  shift, and go to state 891
    '>'                  shift, and go to state 892


State 684

  604 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 604 (auto_type_declaration)


State 685

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    type_declaration_no_options_list    go to state 893
    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 894


State 686

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 895


State 687

  236 optional_expr_list: expr_list .
  289 expr_list: expr_list . ',' expr

    ','  shift, and go to state 896

    $default  reduce using rule 236 (optional_expr_list)


State 688

  632 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 632 (type_declaration_no_options_no_dim)


State 689

  615 dim_list: '[' expr ']' .

    $default  reduce using rule 615 (dim_list)


State 690

  618 dim_list: dim_list '[' ']' .

    $default  reduce using rule 618 (dim_list)


State 691

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  617 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ']'    shift, and go to state 897


State 692

  609 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 609 (bitfield_alias_bits)


State 693

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 . "end of code block"

    "end of code block"  shift, and go to state 898


State 694

  482 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 899


State 695

  487 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 487 (tuple_alias_type_list)


State 696

  690 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block" .

    $default  reduce using rule 690 (tuple_alias_declaration)


State 697

  488 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 900


State 698

  493 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 493 (variant_alias_type_list)


State 699

  694 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block" .

    $default  reduce using rule 694 (variant_alias_declaration)


State 700

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  478 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 901


State 701

  562 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 902


State 702

  561 variable_name_with_pos_list: "name" .
  563                            | "name" . "aka" "name"

    "aka"  shift, and go to state 903

    $default  reduce using rule 561 (variable_name_with_pos_list)


State 703

  477 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 477 (function_argument_declaration)


State 704

  496 variable_declaration: variable_name_with_pos_list .
  497                     | variable_name_with_pos_list . '&'
  498                     | variable_name_with_pos_list . ':' type_declaration
  499                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  500                     | variable_name_with_pos_list . copy_or_move expr
  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 904
    ','   shift, and go to state 905
    '='   shift, and go to state 906
    ':'   shift, and go to state 907
    '&'   shift, and go to state 908

    $default  reduce using rule 496 (variable_declaration)

    copy_or_move  go to state 909


State 705

  480 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 480 (function_argument_list)


State 706

   72 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 910
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 707

   70 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 701
    "name"  shift, and go to state 702

    variable_name_with_pos_list  go to state 911


State 708

  256 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 912
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 709

  255 expression_return: "return" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 255 (expression_return)


State 710

  259 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 913


State 711

  243 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 914
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 712

  242 expression_delete: "delete" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 242 (expression_delete)


State 713

   73 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 915
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 714

   74 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 916


State 715

  231 expression_any: "pass" "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 716

   51 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 917


State 717

   52 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 918


State 718

   53 expression_goto: "goto" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 53 (expression_goto)


State 719

   71 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 71 (expression_unsafe)


State 720

  258 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 919
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 721

  257 expression_yield: "yield" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 257 (expression_yield)


State 722

  212 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 920


State 723

  229 expression_any: expression_label "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 724

  230 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 725

   68 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 921
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 726

   69 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 922


State 727

  221 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 728

  216 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 729

  223 expression_any: expression_break "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 730

  224 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 731

  225 expression_any: expression_return "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 732

  226 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 733

  265 optional_in_scope: "inscope" .

    $default  reduce using rule 265 (optional_in_scope)


State 734

  271 expression_let: kwd_let optional_in_scope . let_variable_declaration
  272               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 923
    "name"  shift, and go to state 924
    '('     shift, and go to state 925

    tuple_expansion_variable_declaration  go to state 926
    let_variable_name_with_pos_list       go to state 927
    let_variable_declaration              go to state 928


State 735

  215 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 736

  324 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 929
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 737

  325 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 930
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 738

  327 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 931
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 739

  326 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 932
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 740

  328 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 933
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 741

  318 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 934
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 742

  319 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 935
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 743

  320 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 936
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 744

  329 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 937
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 745

  330 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 938
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 746

  316 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 939
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 747

  317 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 940
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 748

  331 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 941
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 749

  332 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 942
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 750

  321 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 943
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 751

  322 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 944
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 752

  323 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 945
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 753

  315 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 946
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 754

  527 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 947
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 755

  530 enum_list: enum_list ',' . enum_expression
  765 optional_comma: ',' .

    "name"  shift, and go to state 560

    $default  reduce using rule 765 (optional_comma)

    enum_expression  go to state 948


State 756

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma . $@31 "end of code block"

    $default  reduce using rule 544 ($@31)

    $@31  go to state 949


State 757

  557 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 557 (optional_struct_variable_declaration_list)


State 758

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 950


State 759

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 207

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list          go to state 208
    optional_field_annotation       go to state 951
    structure_variable_declaration  go to state 952


State 760

  516 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 516 (global_let_variable_declaration)


State 761

  517 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 953
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 762

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  518 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 954
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666


State 763

  627 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 626 ($@37)

    $@37  go to state 955


State 764

  650 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 649 ($@42)

    $@42  go to state 956


State 765

  653 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' . $@44

    $default  reduce using rule 652 ($@44)

    $@44  go to state 957


State 766

  614 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 958


State 767

  722 make_struct_decl: "struct" '<' $@72 . type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 959
    type_declaration_no_options_no_dim  go to state 262


State 768

  725 make_struct_decl: "class" '<' $@74 . type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 960
    type_declaration_no_options_no_dim  go to state 262


State 769

  246 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 961


State 770

  249 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  250         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 962

    $default  reduce using rule 718 (use_initializer)

    use_initializer  go to state 963


State 771

  248 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    optional_expr_list      go to state 964
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 687
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 772

  286 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 965


State 773

  285 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 966
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 774

  284 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 967


State 775

  741 make_dim_decl: "array" "struct" '<' . $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 739 ($@82)

    $@82  go to state 968


State 776

  744 make_dim_decl: "array" "tuple" '<' . $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 742 ($@84)

    $@84  go to state 969


State 777

  747 make_dim_decl: "array" "variant" '<' . $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    $default  reduce using rule 745 ($@86)

    $@86  go to state 970


State 778

  751 make_dim_decl: "array" '<' $@88 . type_declaration_no_options '>' $@89 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 971
    type_declaration_no_options_no_dim  go to state 262


State 779

  289 expr_list: expr_list . ',' expr
  748 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 809

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 972


State 780

  760 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  761                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "end of expression"  shift, and go to state 973
    '>'                  shift, and go to state 974


State 781

  757 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  759 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 805

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 975


State 782

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  408     | "deref" '(' expr . ')'
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 976


State 783

  275 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 977
    type_declaration_no_options_no_dim  go to state 262


State 784

  278 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 978
    type_declaration_no_options_no_dim  go to state 262


State 785

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  409     | "addr" '(' expr . ')'
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 979


State 786

  281 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 980
    type_declaration_no_options_no_dim  go to state 262


State 787

  755 make_dim_decl: "fixed_array" '<' $@90 . type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 981
    type_declaration_no_options_no_dim  go to state 262


State 788

  289 expr_list: expr_list . ',' expr
  752 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 809

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 982


State 789

  731 make_struct_decl: "default" '<' $@78 . type_declaration_no_options '>' $@79 use_initializer

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 983
    type_declaration_no_options_no_dim  go to state 262


State 790

  737 make_tuple_call: "tuple" '<' $@80 . type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 984
    type_declaration_no_options_no_dim  go to state 262


State 791

  289 expr_list: expr_list . ',' expr
  734 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 809

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 985


State 792

  728 make_struct_decl: "variant" '<' $@76 . type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 986
    type_declaration_no_options_no_dim  go to state 262


State 793

  410 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  411     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  412     | "generator" '<' type_declaration_no_options . '>' optional_capture_list expression_block

    '>'  shift, and go to state 987


State 794

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  441 expr_mtag: "$$" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 988


State 795

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  442 expr_mtag: "$i" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 989


State 796

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  443 expr_mtag: "$v" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 990


State 797

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  444 expr_mtag: "$b" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 991


State 798

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  445 expr_mtag: "$a" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 992


State 799

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  447 expr_mtag: "$c" '(' expr . ')' '(' ')'
  448          | "$c" '(' expr . ')' '(' expr_list ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 993


State 800

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 801

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 994
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 802

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 210
    STRING_CHARACTER_ESC  shift, and go to state 211

    $default  reduce using rule 29 (string_builder_body)


State 803

  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  768 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 995
    ','   shift, and go to state 905


State 804

  732 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 996
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 805

  757 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  765 optional_comma: ',' .

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    $default  reduce using rule 765 (optional_comma)

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 612
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_map_tuple          go to state 997
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 806

  758 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 998


State 807

  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  766 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 999
    ','   shift, and go to state 905


State 808

  767 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 701
    "name"  shift, and go to state 702

    variable_name_with_pos_list  go to state 1000


State 809

  289 expr_list: expr_list ',' . expr
  765 optional_comma: ',' .

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    $default  reduce using rule 765 (optional_comma)

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1001
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 810

  738 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1002


State 811

  398 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1003


State 812

  338 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1004


State 813

  456 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1005


State 814

  342 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  345               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 343 ($@15)
    '>'       reduce using rule 343 ($@15)
    '('       reduce using rule 343 ($@15)
    $default  reduce using rule 340 ($@13)

    $@13  go to state 1006
    $@15  go to state 1007


State 815

  337 func_addr_name: name_in_namespace .

    $default  reduce using rule 337 (func_addr_name)


State 816

  339 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 339 (func_addr_expr)


State 817

  708 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  709                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1008


State 818

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"
  704 make_struct_fields: "name" . copy_or_move expr
  705                   | "name" . ":=" expr

    "<-"  shift, and go to state 904
    ":="  shift, and go to state 1009
    "::"  shift, and go to state 94
    '='   shift, and go to state 906

    $default  reduce using rule 239 (name_in_namespace)

    copy_or_move  go to state 1010


State 819

  333 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  738 make_dim_decl: '[' . expr_list optional_comma ']'
  766 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  767                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 620
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 621
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "$f"                              shift, and go to state 817
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 818
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 622
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_fields      go to state 1011
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 820

  353 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 353 (expr_call)


State 821

  289 expr_list: expr_list . ',' expr
  334 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1012
    ')'  shift, and go to state 1013


State 822

  706 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  707                   | make_struct_fields . ',' "name" ":=" expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  713 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1014

    $default  reduce using rule 713 (make_struct_single)


State 823

  354 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1015


State 824

  303 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1016


State 825

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1017


State 826

  233 expressions: expressions . expression_any
  234            | expressions . error
  306 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 520
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 521
    "if"                              shift, and go to state 522
    "static_if"                       shift, and go to state 523
    "for"                             shift, and go to state 524
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 525
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 526
    "try"                             shift, and go to state 527
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 528
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 529
    "assume"                          shift, and go to state 530
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 531
    "pass"                            shift, and go to state 532
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 533
    "goto"                            shift, and go to state 534
    "unsafe"                          shift, and go to state 535
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "yield"                           shift, and go to state 536
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    "end of code block"               shift, and go to state 1018
    "end of expression"               shift, and go to state 538
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder           go to state 449
    expr_reader              go to state 450
    expression_label         go to state 539
    expression_goto          go to state 540
    if_or_static_if          go to state 541
    expression_if_one_liner  go to state 542
    expression_if_then_else  go to state 543
    expression_for_loop      go to state 544
    expression_unsafe        go to state 545
    expression_while_loop    go to state 546
    expression_with          go to state 547
    expression_with_alias    go to state 548
    expr_call_pipe           go to state 451
    expression_any           go to state 549
    name_in_namespace        go to state 452
    expression_delete        go to state 550
    expr_new                 go to state 453
    expression_break         go to state 551
    expression_continue      go to state 552
    expression_return        go to state 553
    expression_yield         go to state 554
    expression_try_catch     go to state 555
    kwd_let                  go to state 556
    expression_let           go to state 557
    expr_cast                go to state 454
    expr_type_decl           go to state 455
    expr_type_info           go to state 456
    block_or_lambda          go to state 457
    expr_full_block          go to state 458
    expr_numeric_const       go to state 459
    expr_assign              go to state 558
    expr_named_call          go to state 460
    expr_method_call         go to state 461
    func_addr_expr           go to state 462
    expr_field               go to state 463
    expr_call                go to state 464
    expr                     go to state 559
    expr_mtag                go to state 466
    basic_type_declaration   go to state 467
    make_decl                go to state 468
    make_struct_decl         go to state 469
    make_tuple_call          go to state 470
    make_dim_decl            go to state 471
    make_table_decl          go to state 472
    array_comprehension      go to state 473


State 827

  295 block_or_lambda: '@' '@' .

    $default  reduce using rule 295 (block_or_lambda)


State 828

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 824

    $default  reduce using rule 302 (optional_capture_list)

    optional_capture_list  go to state 1019


State 829

  417 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1020


State 830

  455 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1021


State 831

  419 expr: expr "is" "name" .

    $default  reduce using rule 419 (expr)


State 832

  418 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 418 (expr)


State 833

  423 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1022


State 834

  453 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1023


State 835

  420 expr: expr "as" "name" .

    $default  reduce using rule 420 (expr)


State 836

  424 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 424 (expr)


State 837

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  372     | expr "<<" expr .
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '-'   shift, and go to state 660
    '+'   shift, and go to state 661
    '*'   shift, and go to state 662
    '/'   shift, and go to state 663
    '%'   shift, and go to state 664
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 372 (expr)


State 838

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  373     | expr ">>" expr .
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '-'   shift, and go to state 660
    '+'   shift, and go to state 661
    '*'   shift, and go to state 662
    '/'   shift, and go to state 663
    '%'   shift, and go to state 664
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 373 (expr)


State 839

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  385     | expr "<=" expr .
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 385 (expr)


State 840

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  386     | expr ">=" expr .
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 386 (expr)


State 841

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  383     | expr "==" expr .
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 383 (expr)


State 842

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  384     | expr "!=" expr .
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 384 (expr)


State 843

  335 expr_method_call: expr "->" "name" . '(' ')'
  336                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1024


State 844

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  413     | expr "??" expr .
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 413 (expr)


State 845

  450 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1025


State 846

  403 expr: expr "?." "name" .

    $default  reduce using rule 403 (expr)


State 847

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  401     | expr "?[" expr . ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ']'    shift, and go to state 1026


State 848

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  437     | expr "<|" expr .
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 437 (expr)


State 849

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  438     | expr "|>" expr .
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 642
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 438 (expr)


State 850

  356 expr_call: basic_type_declaration . '(' ')'
  357          | basic_type_declaration . '(' expr_list ')'
  439 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 668

    $default  reduce using rule 439 (expr)


State 851

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  374     | expr "<<<" expr .
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '-'   shift, and go to state 660
    '+'   shift, and go to state 661
    '*'   shift, and go to state 662
    '/'   shift, and go to state 663
    '%'   shift, and go to state 664
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 374 (expr)


State 852

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  375     | expr ">>>" expr .
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '-'   shift, and go to state 660
    '+'   shift, and go to state 661
    '*'   shift, and go to state 662
    '/'   shift, and go to state 663
    '%'   shift, and go to state 664
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 375 (expr)


State 853

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  390     | expr "&&" expr .
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 390 (expr)


State 854

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  391     | expr "||" expr .
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "^^"   shift, and go to state 652
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 391 (expr)


State 855

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  392     | expr "^^" expr .
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 392 (expr)


State 856

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  393     | expr ".." expr .
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    ".."  error (nonassociative)

    $default  reduce using rule 393 (expr)


State 857

  425 expr: expr '?' "as" . "name"
  428     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  429     | expr '?' "as" . basic_type_declaration
  454 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1027
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 418
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 1028
    "name"      shift, and go to state 1029

    basic_type_declaration  go to state 1030


State 858

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  414     | expr '?' expr . ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    ':'    shift, and go to state 1031
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666


State 859

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  388     | expr '|' expr .
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 388 (expr)


State 860

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  389     | expr '^' expr .
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 389 (expr)


State 861

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  387     | expr '&' expr .
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 387 (expr)


State 862

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  381     | expr '<' expr .
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 381 (expr)


State 863

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  382     | expr '>' expr .
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 382 (expr)


State 864

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  377     | expr '-' expr .
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '*'   shift, and go to state 662
    '/'   shift, and go to state 663
    '%'   shift, and go to state 664
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 377 (expr)


State 865

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  376     | expr '+' expr .
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '*'   shift, and go to state 662
    '/'   shift, and go to state 663
    '%'   shift, and go to state 664
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 376 (expr)


State 866

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  378     | expr '*' expr .
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 378 (expr)


State 867

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  379     | expr '/' expr .
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 379 (expr)


State 868

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  380     | expr '%' expr .
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 632
    "as"  shift, and go to state 633
    "++"  shift, and go to state 636
    "--"  shift, and go to state 637
    "->"  shift, and go to state 642
    "??"  shift, and go to state 643
    "?."  shift, and go to state 644
    "?["  shift, and go to state 645
    "<|"  shift, and go to state 646
    "|>"  shift, and go to state 647
    '.'   shift, and go to state 665
    '['   shift, and go to state 666

    $default  reduce using rule 380 (expr)


State 869

  404 expr: expr '.' "?." . "name"
  452 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1032
    "name"  shift, and go to state 1033


State 870

  402 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1034
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 871

  449 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1035


State 872

  346 expr_field: expr '.' "name" .
  348           | expr '.' "name" . '(' ')'
  349           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1036

    $default  reduce using rule 346 (expr_field)


State 873

  347 expr_field: expr '.' '.' . "name"
  451 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1037
    "name"  shift, and go to state 1038


State 874

  400 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1039
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 875

  352 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1040


State 876

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  399     | expr '[' expr . ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ']'    shift, and go to state 1041


State 877

  356 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 356 (expr_call)


State 878

  289 expr_list: expr_list . ',' expr
  357 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 896
    ')'  shift, and go to state 1042


State 879

  656 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 655 ($@46)

    $@46  go to state 1043


State 880

  646 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' . $@40

    $default  reduce using rule 645 ($@40)

    $@40  go to state 1044


State 881

  606 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1045


State 882

  612 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 611 ($@35)

    $@35  go to state 1046


State 883

  660 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 659 ($@48)

    $@48  go to state 1047


State 884

  663 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type . '>' $@50

    '>'  shift, and go to state 1048


State 885

  667 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 666 ($@52)

    $@52  go to state 1049


State 886

  670 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type . '>' $@54

    '>'  shift, and go to state 1050


State 887

  674 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 673 ($@56)

    $@56  go to state 1051


State 888

  677 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type . '>' $@58

    '>'  shift, and go to state 1052


State 889

  484 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 502
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    tuple_type                          go to state 1053
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 505


State 890

  680 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' . $@60

    $default  reduce using rule 679 ($@60)

    $@60  go to state 1054


State 891

  490 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 507

    variant_type  go to state 1055


State 892

  683 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' . $@62

    $default  reduce using rule 682 ($@62)

    $@62  go to state 1056


State 893

  238 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1057
    '>'                  shift, and go to state 1058


State 894

  237 type_declaration_no_options_list: type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 237 (type_declaration_no_options_list)


State 895

  629 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 629 (type_declaration_no_options_no_dim)


State 896

  289 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1001
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 897

  617 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 617 (dim_list)


State 898

  698 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block" .

    $default  reduce using rule 698 (bitfield_alias_declaration)


State 899

  482 tuple_type: "name" ':' type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 482 (tuple_type)


State 900

  488 variant_type: "name" ':' type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 488 (variant_type)


State 901

  478 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 478 (function_argument_declaration)


State 902

  562 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1059
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 903

  563 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1060


State 904

  495 copy_or_move: "<-" .

    $default  reduce using rule 495 (copy_or_move)


State 905

  564 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  565                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1061


State 906

  494 copy_or_move: '=' .

    $default  reduce using rule 494 (copy_or_move)


State 907

  498 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  499                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1062


State 908

  497 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 497 (variable_declaration)


State 909

  500 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1063
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 910

   72 expression_while_loop: "while" '(' expr . ')' expression_block
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1064


State 911

   70 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1065
    ','   shift, and go to state 905


State 912

  256 expression_return: "return" "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 256 (expression_return)


State 913

  259 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1066


State 914

  243 expression_delete: "delete" "explicit" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 243 (expression_delete)


State 915

   73 expression_with: "with" '(' expr . ')' expression_block
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1067


State 916

   74 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1068
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 917

   51 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 51 (expression_label)


State 918

   52 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 52 (expression_goto)


State 919

  258 expression_yield: "yield" "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 258 (expression_yield)


State 920

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 1069


State 921

   68 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1070


State 922

   69 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1071
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 923

  507 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1072


State 924

  506 let_variable_name_with_pos_list: "name" .
  508                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1073

    $default  reduce using rule 506 (let_variable_name_with_pos_list)


State 925

  269 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1074

    tuple_expansion  go to state 1075


State 926

  272 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 272 (expression_let)


State 927

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  510                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  513 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  514                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  515                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1076
    ':'  shift, and go to state 1077
    '&'  shift, and go to state 396

    $default  reduce using rule 504 (optional_ref)

    optional_ref  go to state 1078


State 928

  271 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 271 (expression_let)


State 929

  324 expr_assign: expr "+=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 324 (expr_assign)


State 930

  325 expr_assign: expr "-=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 325 (expr_assign)


State 931

  327 expr_assign: expr "/=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 327 (expr_assign)


State 932

  326 expr_assign: expr "*=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 326 (expr_assign)


State 933

  328 expr_assign: expr "%=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 328 (expr_assign)


State 934

  318 expr_assign: expr "&=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 318 (expr_assign)


State 935

  319 expr_assign: expr "|=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 319 (expr_assign)


State 936

  320 expr_assign: expr "^=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 320 (expr_assign)


State 937

  329 expr_assign: expr "<<=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 329 (expr_assign)


State 938

  330 expr_assign: expr ">>=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 330 (expr_assign)


State 939

  316 expr_assign: expr "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 316 (expr_assign)


State 940

  317 expr_assign: expr ":=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 317 (expr_assign)


State 941

  331 expr_assign: expr "<<<=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 331 (expr_assign)


State 942

  332 expr_assign: expr ">>>=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 332 (expr_assign)


State 943

  321 expr_assign: expr "&&=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 321 (expr_assign)


State 944

  322 expr_assign: expr "||=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 322 (expr_assign)


State 945

  323 expr_assign: expr "^^=" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 323 (expr_assign)


State 946

  315 expr_assign: expr '=' expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 315 (expr_assign)


State 947

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  527 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 527 (enum_expression)


State 948

  530 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 530 (enum_list)


State 949

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 . "end of code block"

    "end of code block"  shift, and go to state 1079


State 950

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1080
    "private"  shift, and go to state 1081

    $default  reduce using rule 464 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1082


State 951

  469 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1083

    $default  reduce using rule 467 (optional_static_member_variable)

    optional_static_member_variable  go to state 1084


State 952

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1085


State 953

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  517 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 1086
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666


State 954

  518 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 518 (global_let_variable_declaration)


State 955

  627 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 627 (type_declaration_no_options_no_dim)


State 956

  650 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 650 (type_declaration_no_options_no_dim)


State 957

  653 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44 .

    $default  reduce using rule 653 (type_declaration_no_options_no_dim)


State 958

  614 table_type_pair: type_declaration "end of expression" type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 614 (table_type_pair)


State 959

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options . '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1087


State 960

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options . '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1088


State 961

  246 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1089


State 962

  719 use_initializer: "uninitialized" .

    $default  reduce using rule 719 (use_initializer)


State 963

  249 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  250         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090
    ')'     shift, and go to state 1091

    make_struct_fields  go to state 822
    make_struct_single  go to state 1092


State 964

  248 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1093


State 965

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  287               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1094
    '>'                  shift, and go to state 1095


State 966

  285 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1096


State 967

  284 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1097


State 968

  741 make_dim_decl: "array" "struct" '<' $@82 . type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1098
    type_declaration_no_options_no_dim  go to state 262


State 969

  744 make_dim_decl: "array" "tuple" '<' $@84 . type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1099
    type_declaration_no_options_no_dim  go to state 262


State 970

  747 make_dim_decl: "array" "variant" '<' $@86 . type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1100
    type_declaration_no_options_no_dim  go to state 262


State 971

  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options . '>' $@89 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1101


State 972

  748 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1102


State 973

  761 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1103
    type_declaration_no_options_no_dim  go to state 262


State 974

  760 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1104


State 975

  759 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1105


State 976

  408 expr: "deref" '(' expr ')' .

    $default  reduce using rule 408 (expr)


State 977

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1106


State 978

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1107


State 979

  409 expr: "addr" '(' expr ')' .

    $default  reduce using rule 409 (expr)


State 980

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1108


State 981

  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options . '>' $@91 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1109


State 982

  752 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1110


State 983

  731 make_struct_decl: "default" '<' $@78 type_declaration_no_options . '>' $@79 use_initializer

    '>'  shift, and go to state 1111


State 984

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options . '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1112


State 985

  734 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1113


State 986

  728 make_struct_decl: "variant" '<' $@76 type_declaration_no_options . '>' $@77 '(' make_variant_dim ')'

    '>'  shift, and go to state 1114


State 987

  410 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  411     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  412     | "generator" '<' type_declaration_no_options '>' . optional_capture_list expression_block

    "capture"  shift, and go to state 824

    $default  reduce using rule 302 (optional_capture_list)

    optional_capture_list  go to state 1115


State 988

  441 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 441 (expr_mtag)


State 989

  442 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 442 (expr_mtag)


State 990

  443 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 443 (expr_mtag)


State 991

  444 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 444 (expr_mtag)


State 992

  445 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 445 (expr_mtag)


State 993

  447 expr_mtag: "$c" '(' expr ')' . '(' ')'
  448          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1116


State 994

   30 string_builder_body: string_builder_body "{" expr . "}"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    "}"    shift, and go to state 1117
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666


State 995

  768 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1118
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 996

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  732 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 732 (make_map_tuple)


State 997

  757 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 757 (expr_map_tuple_list)


State 998

  758 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 758 (make_table_decl)


State 999

  766 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1119
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1000

  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  767 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1120
    ','   shift, and go to state 905


State 1001

  289 expr_list: expr_list ',' expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 289 (expr_list)


State 1002

  738 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 738 (make_dim_decl)


State 1003

  398 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 398 (expr)


State 1004

  338 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1121
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1005

  456 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1122
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1006

  342 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1123
    type_declaration_no_options_no_dim  go to state 262


State 1007

  345 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1124


State 1008

  708 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  709                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1125
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1009

  705 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1126
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1010

  704 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1127
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1011

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  706 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  707                   | make_struct_fields . ',' "name" ":=" expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1014
    ']'  shift, and go to state 1128


State 1012

  289 expr_list: expr_list ',' . expr
  334 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 1129
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1001
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1013

  355 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 355 (expr_call)


State 1014

  706 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  707                   | make_struct_fields ',' . "name" ":=" expr
  710                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1130
    "name"  shift, and go to state 1131


State 1015

  354 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 354 (expr_call)


State 1016

  303 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"  shift, and go to state 1132
    ":="  shift, and go to state 1133
    '='   shift, and go to state 1134
    '&'   shift, and go to state 1135

    capture_entry  go to state 1136
    capture_list   go to state 1137


State 1017

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1138


State 1018

  306 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 306 (expr_full_block_assumed_piped)


State 1019

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1139


State 1020

  417 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 415 ($@19)

    $@19  go to state 1140


State 1021

  455 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1141
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1022

  423 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 421 ($@21)

    $@21  go to state 1142


State 1023

  453 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1143
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1024

  335 expr_method_call: expr "->" "name" '(' . ')'
  336                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    ')'                               shift, and go to state 1144
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1145
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1025

  450 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1146
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1026

  401 expr: expr "?[" expr ']' .

    $default  reduce using rule 401 (expr)


State 1027

  428 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1147


State 1028

  454 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1148


State 1029

  425 expr: expr '?' "as" "name" .

    $default  reduce using rule 425 (expr)


State 1030

  429 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 429 (expr)


State 1031

  414 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1149
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1032

  452 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1150


State 1033

  404 expr: expr '.' "?." "name" .

    $default  reduce using rule 404 (expr)


State 1034

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  402     | expr '.' "?[" expr . ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ']'    shift, and go to state 1151


State 1035

  449 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1152
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1036

  348 expr_field: expr '.' "name" '(' . ')'
  349           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    ')'                               shift, and go to state 1153
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1154
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1037

  451 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1155


State 1038

  347 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 347 (expr_field)


State 1039

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  400     | expr '.' '[' expr . ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ']'    shift, and go to state 1156


State 1040

  352 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 351 ($@18)

    $@18  go to state 1157


State 1041

  399 expr: expr '[' expr ']' .

    $default  reduce using rule 399 (expr)


State 1042

  357 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 357 (expr_call)


State 1043

  656 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 656 (type_declaration_no_options_no_dim)


State 1044

  646 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40 .

    $default  reduce using rule 646 (type_declaration_no_options_no_dim)


State 1045

  606 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 606 (bitfield_bits)


State 1046

  612 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 612 (bitfield_type_declaration)


State 1047

  660 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 660 (type_declaration_no_options_no_dim)


State 1048

  663 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' . $@50

    $default  reduce using rule 662 ($@50)

    $@50  go to state 1158


State 1049

  667 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 667 (type_declaration_no_options_no_dim)


State 1050

  670 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' . $@54

    $default  reduce using rule 669 ($@54)

    $@54  go to state 1159


State 1051

  674 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 674 (type_declaration_no_options_no_dim)


State 1052

  677 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' . $@58

    $default  reduce using rule 676 ($@58)

    $@58  go to state 1160


State 1053

  484 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 484 (tuple_type_list)


State 1054

  680 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60 .

    $default  reduce using rule 680 (type_declaration_no_options_no_dim)


State 1055

  490 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 490 (variant_type_list)


State 1056

  683 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62 .

    $default  reduce using rule 683 (type_declaration_no_options_no_dim)


State 1057

  238 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1161


State 1058

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1162


State 1059

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  562 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1163


State 1060

  563 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 563 (variable_name_with_pos_list)


State 1061

  564 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  565                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1164

    $default  reduce using rule 564 (variable_name_with_pos_list)


State 1062

  498 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  499                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 904
    '='   shift, and go to state 906
    '|'   shift, and go to state 368

    $default  reduce using rule 498 (variable_declaration)

    copy_or_move  go to state 1165


State 1063

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  500 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 500 (variable_declaration)


State 1064

   72 expression_while_loop: "while" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1166


State 1065

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1167
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1066

  259 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 259 (expression_try_catch)


State 1067

   73 expression_with: "with" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1168


State 1068

   74 expression_with_alias: "assume" "name" '=' expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 74 (expression_with_alias)


State 1069

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 520
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 521
    "if"                              shift, and go to state 522
    "static_if"                       shift, and go to state 523
    "for"                             shift, and go to state 524
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 525
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 526
    "try"                             shift, and go to state 527
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 528
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 529
    "assume"                          shift, and go to state 530
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 531
    "pass"                            shift, and go to state 532
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 533
    "goto"                            shift, and go to state 534
    "unsafe"                          shift, and go to state 535
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "yield"                           shift, and go to state 536
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    "end of code block"               shift, and go to state 1169
    "end of expression"               shift, and go to state 538
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder           go to state 449
    expr_reader              go to state 450
    expression_label         go to state 539
    expression_goto          go to state 540
    if_or_static_if          go to state 541
    expression_if_one_liner  go to state 542
    expression_if_then_else  go to state 543
    expression_for_loop      go to state 544
    expression_unsafe        go to state 545
    expression_while_loop    go to state 546
    expression_with          go to state 547
    expression_with_alias    go to state 548
    expr_call_pipe           go to state 451
    expression_any           go to state 549
    name_in_namespace        go to state 452
    expression_delete        go to state 550
    expr_new                 go to state 453
    expression_break         go to state 551
    expression_continue      go to state 552
    expression_return        go to state 553
    expression_yield         go to state 554
    expression_try_catch     go to state 555
    kwd_let                  go to state 556
    expression_let           go to state 557
    expr_cast                go to state 454
    expr_type_decl           go to state 455
    expr_type_info           go to state 456
    block_or_lambda          go to state 457
    expr_full_block          go to state 458
    expr_numeric_const       go to state 459
    expr_assign              go to state 558
    expr_named_call          go to state 460
    expr_method_call         go to state 461
    func_addr_expr           go to state 462
    expr_field               go to state 463
    expr_call                go to state 464
    expr                     go to state 559
    expr_mtag                go to state 466
    basic_type_declaration   go to state 467
    make_decl                go to state 468
    make_struct_decl         go to state 469
    make_tuple_call          go to state 470
    make_dim_decl            go to state 471
    make_table_decl          go to state 472
    array_comprehension      go to state 473


State 1070

   68 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1170


State 1071

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1171


State 1072

  507 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1172
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1073

  508 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1173


State 1074

  267 tuple_expansion: "name" .

    $default  reduce using rule 267 (tuple_expansion)


State 1075

  268 tuple_expansion: tuple_expansion . ',' "name"
  269 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1174
    ')'  shift, and go to state 1175


State 1076

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  510                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1176


State 1077

  513 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  514                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1177
    type_declaration_no_options_no_dim  go to state 262


State 1078

  515 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 567
    ":="  shift, and go to state 568
    '='   shift, and go to state 569

    copy_or_move_or_clone  go to state 1178


State 1079

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block" .

    $default  reduce using rule 545 (enum_declaration)


State 1080

  465 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 465 (optional_public_or_private_member_variable)


State 1081

  466 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 466 (optional_public_or_private_member_variable)


State 1082

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1179
    "static"    shift, and go to state 1083

    $default  reduce using rule 467 (optional_static_member_variable)

    optional_static_member_variable  go to state 1180


State 1083

  468 optional_static_member_variable: "static" .

    $default  reduce using rule 468 (optional_static_member_variable)


State 1084

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1181
    "sealed"    shift, and go to state 1182

    $default  reduce using rule 459 (optional_override)

    optional_override  go to state 1183


State 1085

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 472 (struct_variable_declaration_list)


State 1086

  517 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 517 (global_let_variable_declaration)


State 1087

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' . $@73 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 721 ($@73)

    $@73  go to state 1184


State 1088

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' . $@75 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 724 ($@75)

    $@75  go to state 1185


State 1089

  246 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 245 ($@4)

    $@4  go to state 1186


State 1090

  704 make_struct_fields: "name" . copy_or_move expr
  705                   | "name" . ":=" expr

    "<-"  shift, and go to state 904
    ":="  shift, and go to state 1009
    '='   shift, and go to state 906

    copy_or_move  go to state 1010


State 1091

  249 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 249 (expr_new)


State 1092

  250 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1187


State 1093

  248 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 248 (expr_new)


State 1094

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1188


State 1095

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1189


State 1096

  285 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 285 (expr_type_info)


State 1097

  284 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 283 ($@12)

    $@12  go to state 1190


State 1098

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options . '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1191


State 1099

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options . '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1192


State 1100

  747 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options . '>' $@87 '(' make_variant_dim ')'

    '>'  shift, and go to state 1193


State 1101

  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' . $@89 '(' expr_list optional_comma ')'

    $default  reduce using rule 750 ($@89)

    $@89  go to state 1194


State 1102

  748 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 748 (make_dim_decl)


State 1103

  761 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    '>'  shift, and go to state 1195


State 1104

  760 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 612
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_map_tuple          go to state 613
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    expr_map_tuple_list     go to state 1196
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1105

  759 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 759 (make_table_decl)


State 1106

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 274 ($@6)

    $@6  go to state 1197


State 1107

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 277 ($@8)

    $@8  go to state 1198


State 1108

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 280 ($@10)

    $@10  go to state 1199


State 1109

  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' . $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 754 ($@91)

    $@91  go to state 1200


State 1110

  752 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 752 (make_dim_decl)


State 1111

  731 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' . $@79 use_initializer

    $default  reduce using rule 730 ($@79)

    $@79  go to state 1201


State 1112

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' . $@81 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 736 ($@81)

    $@81  go to state 1202


State 1113

  734 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 734 (make_tuple_call)


State 1114

  728 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' . $@77 '(' make_variant_dim ')'

    $default  reduce using rule 727 ($@77)

    $@77  go to state 1203


State 1115

  410 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list . expression_block

    "begin of code block"  shift, and go to state 322
    '('                    shift, and go to state 1204

    expression_block  go to state 1205


State 1116

  447 expr_mtag: "$c" '(' expr ')' '(' . ')'
  448          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    ')'                               shift, and go to state 1206
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1207
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1117

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1118

  289 expr_list: expr_list . ',' expr
  768 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1208
    ','                  shift, and go to state 896


State 1119

  289 expr_list: expr_list . ',' expr
  766 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1209
    ','                  shift, and go to state 896


State 1120

  767 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1210
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1121

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  338 func_addr_name: "$i" '(' expr . ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1211


State 1122

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  456          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1212


State 1123

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1213


State 1124

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1214


State 1125

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  709                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1215


State 1126

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  705 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 705 (make_struct_fields)


State 1127

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  704 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 704 (make_struct_fields)


State 1128

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1216


State 1129

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  738 make_dim_decl: '[' . expr_list optional_comma ']'
  766 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  767                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 620
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 621
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "$f"                              shift, and go to state 817
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 818
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 622
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_fields      go to state 1217
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1130

  710 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  711                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1218


State 1131

  706 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  707                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 904
    ":="  shift, and go to state 1219
    '='   shift, and go to state 906

    copy_or_move  go to state 1220


State 1132

  298 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1221


State 1133

  299 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1222


State 1134

  297 capture_entry: '=' . "name"

    "name"  shift, and go to state 1223


State 1135

  296 capture_entry: '&' . "name"

    "name"  shift, and go to state 1224


State 1136

  300 capture_list: capture_entry .

    $default  reduce using rule 300 (capture_list)


State 1137

  301 capture_list: capture_list . ',' capture_entry
  303 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1225
    ')'  shift, and go to state 1226


State 1138

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1227
    "begin of code block"  shift, and go to state 322

    expression_block       go to state 1228
    block_or_simple_block  go to state 1229


State 1139

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1230


State 1140

  417 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1231
    type_declaration_no_options_no_dim  go to state 262


State 1141

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  455          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1232


State 1142

  423 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1233


State 1143

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  453          | expr "as" "$f" '(' expr . ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1234


State 1144

  335 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 335 (expr_method_call)


State 1145

  289 expr_list: expr_list . ',' expr
  336 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 896
    ')'  shift, and go to state 1235


State 1146

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  450          | expr "?." "$f" '(' expr . ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1236


State 1147

  428 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 426 ($@23)

    $@23  go to state 1237


State 1148

  454 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1238
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1149

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  414     | expr '?' expr ':' expr .
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 414 (expr)


State 1150

  452 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1239
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1151

  402 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 402 (expr)


State 1152

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr '.' "$f" '(' expr . ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1240


State 1153

  348 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 348 (expr_field)


State 1154

  289 expr_list: expr_list . ',' expr
  349 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 896
    ')'  shift, and go to state 1241


State 1155

  451 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1242
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1156

  400 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 400 (expr)


State 1157

  352 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 352 (expr_field)


State 1158

  663 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50 .

    $default  reduce using rule 663 (type_declaration_no_options_no_dim)


State 1159

  670 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54 .

    $default  reduce using rule 670 (type_declaration_no_options_no_dim)


State 1160

  677 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58 .

    $default  reduce using rule 677 (type_declaration_no_options_no_dim)


State 1161

  238 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 238 (type_declaration_no_options_list)


State 1162

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    optional_expr_list      go to state 1243
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 687
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1163

  562 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 562 (variable_name_with_pos_list)


State 1164

  565 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1244


State 1165

  499 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1245
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1166

   72 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 72 (expression_while_loop)


State 1167

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  289 expr_list: expr_list . ',' expr

    ','  shift, and go to state 896
    ')'  shift, and go to state 1246


State 1168

   73 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_with)


State 1169

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 212 (expression_block)


State 1170

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1247
    "elif"         shift, and go to state 1248
    "static_elif"  shift, and go to state 1249

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1250
    expression_else      go to state 1251


State 1171

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1252

    $default  reduce using rule 61 (expression_else_one_liner)

    expression_else_one_liner  go to state 1253


State 1172

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  507 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1254


State 1173

  508 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 508 (let_variable_name_with_pos_list)


State 1174

  268 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1255


State 1175

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  270                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1256
    '&'  shift, and go to state 396

    $default  reduce using rule 504 (optional_ref)

    optional_ref  go to state 1257


State 1176

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  510                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1258

    $default  reduce using rule 509 (let_variable_name_with_pos_list)


State 1177

  513 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  514                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 567
    ":="                 shift, and go to state 568
    "end of expression"  shift, and go to state 1259
    '='                  shift, and go to state 569

    copy_or_move_or_clone  go to state 1260


State 1178

  515 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1261
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1179

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1262

    $default  reduce using rule 462 (optional_constant)

    optional_constant  go to state 1263


State 1180

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1181
    "sealed"    shift, and go to state 1182

    $default  reduce using rule 459 (optional_override)

    optional_override  go to state 1264


State 1181

  460 optional_override: "override" .

    $default  reduce using rule 460 (optional_override)


State 1182

  461 optional_override: "sealed" .

    $default  reduce using rule 461 (optional_override)


State 1183

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1080
    "private"  shift, and go to state 1081

    $default  reduce using rule 464 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1265


State 1184

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1266


State 1185

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1267


State 1186

  246 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 246 (new_type_declaration)


State 1187

  250 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 250 (expr_new)


State 1188

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1268


State 1189

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1269
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1190

  284 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 284 (expr_type_decl)


State 1191

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' . $@83 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 740 ($@83)

    $@83  go to state 1270


State 1192

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' . $@85 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 743 ($@85)

    $@85  go to state 1271


State 1193

  747 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' . $@87 '(' make_variant_dim ')'

    $default  reduce using rule 746 ($@87)

    $@87  go to state 1272


State 1194

  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1273


State 1195

  761 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1274


State 1196

  757 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  760 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 805

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 1275


State 1197

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1276
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1198

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1277
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1199

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1278
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1200

  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1279


State 1201

  731 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 . use_initializer

    "uninitialized"  shift, and go to state 962

    $default  reduce using rule 718 (use_initializer)

    use_initializer  go to state 1280


State 1202

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1281


State 1203

  728 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 . '(' make_variant_dim ')'

    '('  shift, and go to state 1282


State 1204

  410 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    ')'                               shift, and go to state 1283
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1284
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1205

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block .

    $default  reduce using rule 412 (expr)


State 1206

  447 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 447 (expr_mtag)


State 1207

  289 expr_list: expr_list . ',' expr
  448 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 896
    ')'  shift, and go to state 1285


State 1208

  768 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 612
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_map_tuple          go to state 1286
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1209

  766 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1287
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1210

  289 expr_list: expr_list . ',' expr
  767 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1288
    ','                  shift, and go to state 896


State 1211

  338 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 338 (func_addr_name)


State 1212

  456 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1213

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 341 ($@14)

    $@14  go to state 1289


State 1214

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1290


State 1215

  708 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  709                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 904
    ":="  shift, and go to state 1291
    '='   shift, and go to state 906

    copy_or_move  go to state 1292


State 1216

  333 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 333 (expr_named_call)


State 1217

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  706 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  707                   | make_struct_fields . ',' "name" ":=" expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1014
    ']'  shift, and go to state 1293


State 1218

  710 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  711                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1294
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1219

  707 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1295
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1220

  706 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1296
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1221

  298 capture_entry: "<-" "name" .

    $default  reduce using rule 298 (capture_entry)


State 1222

  299 capture_entry: ":=" "name" .

    $default  reduce using rule 299 (capture_entry)


State 1223

  297 capture_entry: '=' "name" .

    $default  reduce using rule 297 (capture_entry)


State 1224

  296 capture_entry: '&' "name" .

    $default  reduce using rule 296 (capture_entry)


State 1225

  301 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1132
    ":="  shift, and go to state 1133
    '='   shift, and go to state 1134
    '&'   shift, and go to state 1135

    capture_entry  go to state 1297


State 1226

  303 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 303 (optional_capture_list)


State 1227

  291 block_or_simple_block: "=>" . expr
  292                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "<-"                              shift, and go to state 1298
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1299
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1228

  290 block_or_simple_block: expression_block .

    $default  reduce using rule 290 (block_or_simple_block)


State 1229

  304 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 304 (expr_full_block)


State 1230

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1300


State 1231

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1301


State 1232

  455 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1233

  423 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1302


State 1234

  453 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1235

  336 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 336 (expr_method_call)


State 1236

  450 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 450 (expr_mtag)


State 1237

  428 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1303


State 1238

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr '?' "as" "$f" '(' expr . ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1304


State 1239

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr '.' "?." "$f" '(' expr . ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1305


State 1240

  449 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 449 (expr_mtag)


State 1241

  349 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 349 (expr_field)


State 1242

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr '.' '.' "$f" '(' expr . ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1306


State 1243

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1307


State 1244

  565 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 565 (variable_name_with_pos_list)


State 1245

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  499 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 499 (variable_declaration)


State 1246

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1308


State 1247

   57 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1309


State 1248

   54 elif_or_static_elif: "elif" .

    $default  reduce using rule 54 (elif_or_static_elif)


State 1249

   55 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1250

   58 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1310


State 1251

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 68 (expression_if_then_else)


State 1252

   62 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 525
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 526
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 531
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "yield"                           shift, and go to state 536
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder           go to state 449
    expr_reader              go to state 450
    expression_if_one_liner  go to state 1311
    expr_call_pipe           go to state 451
    name_in_namespace        go to state 452
    expr_new                 go to state 453
    expression_break         go to state 1312
    expression_continue      go to state 1313
    expression_return        go to state 1314
    expression_yield         go to state 1315
    expr_cast                go to state 454
    expr_type_decl           go to state 455
    expr_type_info           go to state 456
    block_or_lambda          go to state 457
    expr_full_block          go to state 458
    expr_numeric_const       go to state 459
    expr_named_call          go to state 460
    expr_method_call         go to state 461
    func_addr_expr           go to state 462
    expr_field               go to state 463
    expr_call                go to state 464
    expr                     go to state 1316
    expr_mtag                go to state 466
    basic_type_declaration   go to state 467
    make_decl                go to state 468
    make_struct_decl         go to state 469
    make_tuple_call          go to state 470
    make_dim_decl            go to state 471
    make_table_decl          go to state 472
    array_comprehension      go to state 473


State 1253

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1317


State 1254

  507 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 507 (let_variable_name_with_pos_list)


State 1255

  268 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 268 (tuple_expansion)


State 1256

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1318
    type_declaration_no_options_no_dim  go to state 262


State 1257

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 567
    ":="  shift, and go to state 568
    '='   shift, and go to state 569

    copy_or_move_or_clone  go to state 1319


State 1258

  510 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1320


State 1259

  513 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 513 (let_variable_declaration)


State 1260

  514 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1321
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1261

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  515 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 1322
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666


State 1262

  463 optional_constant: "const" .

    $default  reduce using rule 463 (optional_constant)


State 1263

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 473 ($@26)

    $@26  go to state 1323


State 1264

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1262

    $default  reduce using rule 462 (optional_constant)

    optional_constant  go to state 1324


State 1265

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 701
    "name"  shift, and go to state 702

    variable_declaration         go to state 1325
    variable_name_with_pos_list  go to state 704


State 1266

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 962

    $default  reduce using rule 718 (use_initializer)

    use_initializer  go to state 1326


State 1267

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 962

    $default  reduce using rule 718 (use_initializer)

    use_initializer  go to state 1327


State 1268

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1328


State 1269

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1329


State 1270

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1330


State 1271

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1331


State 1272

  747 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 . '(' make_variant_dim ')'

    '('  shift, and go to state 1332


State 1273

  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1333
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1274

  761 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 612
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_map_tuple          go to state 613
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    expr_map_tuple_list     go to state 1334
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1275

  760 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1335


State 1276

  275 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 275 (expr_cast)


State 1277

  278 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 278 (expr_cast)


State 1278

  281 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 281 (expr_cast)


State 1279

  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    expr_list               go to state 1336
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 623
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1280

  731 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer .

    $default  reduce using rule 731 (make_struct_decl)


State 1281

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 962

    $default  reduce using rule 718 (use_initializer)

    use_initializer  go to state 1337


State 1282

  728 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1338
    make_variant_dim    go to state 1339


State 1283

  410 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 410 (expr)


State 1284

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1340


State 1285

  448 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 448 (expr_mtag)


State 1286

  768 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1341

    $default  reduce using rule 762 (array_comprehension_where)

    array_comprehension_where  go to state 1342


State 1287

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  766 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 1341
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666

    $default  reduce using rule 762 (array_comprehension_where)

    array_comprehension_where  go to state 1343


State 1288

  767 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1344
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1289

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 812
    "name"  shift, and go to state 56

    name_in_namespace  go to state 815
    func_addr_name     go to state 1345


State 1290

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 344 ($@16)

    $@16  go to state 1346


State 1291

  709 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1347
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1292

  708 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1348
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1293

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1349


State 1294

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  711                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1350


State 1295

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 707 (make_struct_fields)


State 1296

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  706 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 706 (make_struct_fields)


State 1297

  301 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 301 (capture_list)


State 1298

  292 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1351
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1299

  291 block_or_simple_block: "=>" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    ".."  error (nonassociative)

    $default  reduce using rule 291 (block_or_simple_block)


State 1300

  305 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 305 (expr_full_block_assumed_piped)


State 1301

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 416 ($@20)

    $@20  go to state 1352


State 1302

  423 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 422 ($@22)

    $@22  go to state 1353


State 1303

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  685 type_declaration: type_declaration . '|' type_declaration_no_options
  686                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1354


State 1304

  454 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1305

  452 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1306

  451 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 451 (expr_mtag)


State 1307

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 631 (type_declaration_no_options_no_dim)


State 1308

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 70 (expression_for_loop)


State 1309

   57 expression_else: "else" expression_block .

    $default  reduce using rule 57 (expression_else)


State 1310

   58 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1355
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1311

   62 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 62 (expression_else_one_liner)


State 1312

   66 expression_if_one_liner: expression_break .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1313

   67 expression_if_one_liner: expression_continue .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1314

   64 expression_if_one_liner: expression_return .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1315

   65 expression_if_one_liner: expression_yield .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1316

   63 expression_if_one_liner: expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 63 (expression_if_one_liner)


State 1317

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 69 (expression_if_then_else)


State 1318

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 567
    ":="  shift, and go to state 568
    '='   shift, and go to state 569

    copy_or_move_or_clone  go to state 1356


State 1319

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1357
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1320

  510 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 510 (let_variable_name_with_pos_list)


State 1321

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  514 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 1358
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666


State 1322

  515 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 515 (let_variable_declaration)


State 1323

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1359


State 1324

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 475 ($@27)

    $@27  go to state 1360


State 1325

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 469 (structure_variable_declaration)


State 1326

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1361

    make_struct_fields    go to state 1362
    make_struct_dim_list  go to state 1363
    make_struct_dim_decl  go to state 1364


State 1327

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1361

    make_struct_fields    go to state 1362
    make_struct_dim_list  go to state 1363
    make_struct_dim_decl  go to state 1365


State 1328

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1366
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1329

  286 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 286 (expr_type_info)


State 1330

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 962

    $default  reduce using rule 718 (use_initializer)

    use_initializer  go to state 1367


State 1331

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 962

    $default  reduce using rule 718 (use_initializer)

    use_initializer  go to state 1368


State 1332

  747 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1338
    make_variant_dim    go to state 1369


State 1333

  289 expr_list: expr_list . ',' expr
  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 809

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 1370


State 1334

  757 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  761 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 805

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 1371


State 1335

  760 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 760 (make_table_decl)


State 1336

  289 expr_list: expr_list . ',' expr
  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 809

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 1372


State 1337

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1361

    make_struct_fields    go to state 1362
    make_struct_dim_list  go to state 1363
    make_struct_dim_decl  go to state 1373


State 1338

  706 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  707                   | make_struct_fields . ',' "name" ":=" expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  712 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1014

    $default  reduce using rule 712 (make_variant_dim)


State 1339

  728 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1374


State 1340

  411 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 411 (expr)


State 1341

  763 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1375


State 1342

  768 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1376


State 1343

  766 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1377


State 1344

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  767 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 1341
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666

    $default  reduce using rule 762 (array_comprehension_where)

    array_comprehension_where  go to state 1378


State 1345

  342 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 342 (func_addr_expr)


State 1346

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 812
    "name"  shift, and go to state 56

    name_in_namespace  go to state 815
    func_addr_name     go to state 1379


State 1347

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 709 (make_struct_fields)


State 1348

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 708 (make_struct_fields)


State 1349

  334 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 334 (expr_named_call)


State 1350

  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  711                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 904
    ":="  shift, and go to state 1380
    '='   shift, and go to state 906

    copy_or_move  go to state 1381


State 1351

  292 block_or_simple_block: "=>" "<-" expr .
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 292 (block_or_simple_block)


State 1352

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 417 (expr)


State 1353

  423 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 423 (expr)


State 1354

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 427 ($@24)

    $@24  go to state 1382


State 1355

   58 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1383


State 1356

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1384
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1357

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 1385
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666


State 1358

  514 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 514 (let_variable_declaration)


State 1359

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1386


State 1360

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1387


State 1361

  714 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1388


State 1362

  706 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  707                   | make_struct_fields . ',' "name" ":=" expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  716 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1014

    $default  reduce using rule 716 (make_struct_dim_decl)


State 1363

  715 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  717 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1389

    $default  reduce using rule 764 (optional_comma)

    optional_comma  go to state 1390


State 1364

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1391


State 1365

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1392


State 1366

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666
    ')'    shift, and go to state 1393


State 1367

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1361

    make_struct_fields    go to state 1362
    make_struct_dim_list  go to state 1363
    make_struct_dim_decl  go to state 1394


State 1368

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1361

    make_struct_fields    go to state 1362
    make_struct_dim_list  go to state 1363
    make_struct_dim_decl  go to state 1395


State 1369

  747 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1396


State 1370

  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1397


State 1371

  761 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1398


State 1372

  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1399


State 1373

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1400


State 1374

  728 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')' .

    $default  reduce using rule 728 (make_struct_decl)


State 1375

  763 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1401
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1376

  768 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 768 (array_comprehension)


State 1377

  766 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 766 (array_comprehension)


State 1378

  767 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1402


State 1379

  345 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 345 (func_addr_expr)


State 1380

  711 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1403
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1381

  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "fixed_array"                     shift, and go to state 416
    "default"                         shift, and go to state 417
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 418
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 419
    "variant"                         shift, and go to state 420
    "generator"                       shift, and go to state 421
    "++"                              shift, and go to state 422
    "--"                              shift, and go to state 423
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 424
    "$i"                              shift, and go to state 425
    "$v"                              shift, and go to state 426
    "$b"                              shift, and go to state 427
    "$a"                              shift, and go to state 428
    "$c"                              shift, and go to state 429
    "..."                             shift, and go to state 430
    "integer constant"                shift, and go to state 431
    "long integer constant"           shift, and go to state 432
    "unsigned integer constant"       shift, and go to state 433
    "unsigned long integer constant"  shift, and go to state 434
    "unsigned int8 constant"          shift, and go to state 435
    "floating point constant"         shift, and go to state 436
    "double constant"                 shift, and go to state 437
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 438
    "begin of code block"             shift, and go to state 439
    '-'                               shift, and go to state 440
    '+'                               shift, and go to state 441
    '*'                               shift, and go to state 442
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 443
    '!'                               shift, and go to state 444
    '['                               shift, and go to state 445
    '('                               shift, and go to state 446
    '$'                               shift, and go to state 447
    '@'                               shift, and go to state 448

    string_builder          go to state 449
    expr_reader             go to state 450
    expr_call_pipe          go to state 451
    name_in_namespace       go to state 452
    expr_new                go to state 453
    expr_cast               go to state 454
    expr_type_decl          go to state 455
    expr_type_info          go to state 456
    block_or_lambda         go to state 457
    expr_full_block         go to state 458
    expr_numeric_const      go to state 459
    expr_named_call         go to state 460
    expr_method_call        go to state 461
    func_addr_expr          go to state 462
    expr_field              go to state 463
    expr_call               go to state 464
    expr                    go to state 1404
    expr_mtag               go to state 466
    basic_type_declaration  go to state 467
    make_decl               go to state 468
    make_struct_decl        go to state 469
    make_tuple_call         go to state 470
    make_dim_decl           go to state 471
    make_table_decl         go to state 472
    array_comprehension     go to state 473


State 1382

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 428 (expr)


State 1383

   58 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1405


State 1384

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 632
    "as"                 shift, and go to state 633
    "<<"                 shift, and go to state 634
    ">>"                 shift, and go to state 635
    "++"                 shift, and go to state 636
    "--"                 shift, and go to state 637
    "<="                 shift, and go to state 638
    ">="                 shift, and go to state 639
    "=="                 shift, and go to state 640
    "!="                 shift, and go to state 641
    "->"                 shift, and go to state 642
    "??"                 shift, and go to state 643
    "?."                 shift, and go to state 644
    "?["                 shift, and go to state 645
    "<|"                 shift, and go to state 646
    "|>"                 shift, and go to state 647
    "<<<"                shift, and go to state 648
    ">>>"                shift, and go to state 649
    "&&"                 shift, and go to state 650
    "||"                 shift, and go to state 651
    "^^"                 shift, and go to state 652
    ".."                 shift, and go to state 653
    "end of expression"  shift, and go to state 1406
    '?'                  shift, and go to state 654
    '|'                  shift, and go to state 655
    '^'                  shift, and go to state 656
    '&'                  shift, and go to state 657
    '<'                  shift, and go to state 658
    '>'                  shift, and go to state 659
    '-'                  shift, and go to state 660
    '+'                  shift, and go to state 661
    '*'                  shift, and go to state 662
    '/'                  shift, and go to state 663
    '%'                  shift, and go to state 664
    '.'                  shift, and go to state 665
    '['                  shift, and go to state 666


State 1385

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 270 (tuple_expansion_variable_declaration)


State 1386

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 474 (struct_variable_declaration_list)


State 1387

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1407


State 1388

  706 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  707                   | make_struct_fields . ',' "name" ":=" expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  714 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1014
    ')'  shift, and go to state 1408


State 1389

  715 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  765 optional_comma: ',' .

    '('  shift, and go to state 1409

    $default  reduce using rule 765 (optional_comma)


State 1390

  717 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 717 (make_struct_dim_decl)


State 1391

  722 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 722 (make_struct_decl)


State 1392

  725 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 725 (make_struct_decl)


State 1393

  287 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 287 (expr_type_info)


State 1394

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1410


State 1395

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1411


State 1396

  747 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')' .

    $default  reduce using rule 747 (make_dim_decl)


State 1397

  751 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list optional_comma ')' .

    $default  reduce using rule 751 (make_dim_decl)


State 1398

  761 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 761 (make_table_decl)


State 1399

  755 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')' .

    $default  reduce using rule 755 (make_dim_decl)


State 1400

  737 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 737 (make_tuple_call)


State 1401

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  763 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 763 (array_comprehension_where)


State 1402

  767 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 767 (array_comprehension)


State 1403

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  711 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 711 (make_struct_fields)


State 1404

  335 expr_method_call: expr . "->" "name" '(' ')'
  336                 | expr . "->" "name" '(' expr_list ')'
  346 expr_field: expr . '.' "name"
  347           | expr . '.' '.' "name"
  348           | expr . '.' "name" '(' ')'
  349           | expr . '.' "name" '(' expr_list ')'
  352           | expr . '.' $@17 error $@18
  372 expr: expr . "<<" expr
  373     | expr . ">>" expr
  374     | expr . "<<<" expr
  375     | expr . ">>>" expr
  376     | expr . '+' expr
  377     | expr . '-' expr
  378     | expr . '*' expr
  379     | expr . '/' expr
  380     | expr . '%' expr
  381     | expr . '<' expr
  382     | expr . '>' expr
  383     | expr . "==" expr
  384     | expr . "!=" expr
  385     | expr . "<=" expr
  386     | expr . ">=" expr
  387     | expr . '&' expr
  388     | expr . '|' expr
  389     | expr . '^' expr
  390     | expr . "&&" expr
  391     | expr . "||" expr
  392     | expr . "^^" expr
  393     | expr . ".." expr
  396     | expr . "++"
  397     | expr . "--"
  399     | expr . '[' expr ']'
  400     | expr . '.' '[' expr ']'
  401     | expr . "?[" expr ']'
  402     | expr . '.' "?[" expr ']'
  403     | expr . "?." "name"
  404     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 632
    "as"   shift, and go to state 633
    "<<"   shift, and go to state 634
    ">>"   shift, and go to state 635
    "++"   shift, and go to state 636
    "--"   shift, and go to state 637
    "<="   shift, and go to state 638
    ">="   shift, and go to state 639
    "=="   shift, and go to state 640
    "!="   shift, and go to state 641
    "->"   shift, and go to state 642
    "??"   shift, and go to state 643
    "?."   shift, and go to state 644
    "?["   shift, and go to state 645
    "<|"   shift, and go to state 646
    "|>"   shift, and go to state 647
    "<<<"  shift, and go to state 648
    ">>>"  shift, and go to state 649
    "&&"   shift, and go to state 650
    "||"   shift, and go to state 651
    "^^"   shift, and go to state 652
    ".."   shift, and go to state 653
    '?'    shift, and go to state 654
    '|'    shift, and go to state 655
    '^'    shift, and go to state 656
    '&'    shift, and go to state 657
    '<'    shift, and go to state 658
    '>'    shift, and go to state 659
    '-'    shift, and go to state 660
    '+'    shift, and go to state 661
    '*'    shift, and go to state 662
    '/'    shift, and go to state 663
    '%'    shift, and go to state 664
    '.'    shift, and go to state 665
    '['    shift, and go to state 666

    $default  reduce using rule 710 (make_struct_fields)


State 1405

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1247
    "elif"         shift, and go to state 1248
    "static_elif"  shift, and go to state 1249

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1250
    expression_else      go to state 1412


State 1406

  269 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 269 (tuple_expansion_variable_declaration)


State 1407

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 476 (struct_variable_declaration_list)


State 1408

  714 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 714 (make_struct_dim_list)


State 1409

  715 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 817
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1413


State 1410

  741 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 741 (make_dim_decl)


State 1411

  744 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 744 (make_dim_decl)


State 1412

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 58 (expression_else)


State 1413

  706 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  707                   | make_struct_fields . ',' "name" ":=" expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  711                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  715 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1014
    ')'  shift, and go to state 1414


State 1414

  715 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 715 (make_struct_dim_list)
